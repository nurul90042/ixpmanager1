<?xml version="1.0" encoding="utf-8"?>
<project title="OSS_SNMP" version="2.4.0&#10;">
  <partials/>
  <file path="Platforms/vendor_cisco.php" generated-path="Platforms.vendor_cisco.html" hash="a8fc9bc0c01db5d0f5d3bd6f4b767bb1" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1Vl1v4kYUfedXXK1Wws4ayIeqtkl3K2NPwkjGph4DocsqMvYQrDUe5BkS0ar/vXfGJslm0/apvHg8H+eec+6da375dbfZdTqDkw7gzxO7Q13cbxRYmQ3np2fn0NOPCweiHa+AiX2dcXyUe1WISkJQbAvFcwf8/aosKgdozcu0yg2aW5Zg0CTUXPL6gef9ThunUmmmLmGY1vUBoq4vKvGQVhhtZWasVNkgMKR8CmXlAucKbgA2Su0uB4PHx8f+N7v6BR80IZJNIWFdlBzwuUtrBWINasMhYuyOheMJTmZf03veUop5XkhVFysDBKgB9hIPVyAb0XpmVVQpsluLeisdeCzUBkRtnmKvDMxW5MW6yFIN4kBac9jxGj1Ck2BXi4cix4HapMpwWYuyFI9FdQ+ZqPKiEaoPbbm6bHidvGImtY6WUiZy3LqXCv1VKVLVmOlKPOilNpMGBKASqsi4gzvQjhLxNMzLoFX+ihEGzcq02PK6/w9EMOALQ45EUGW+R3L/DxdoVLZIucj2W461dMzZANMhcL2Gbap4XaSlfLbd5EsDv5RxFBfywpzT61W65ZrTv9Y8yqhfUNFnTG4KLHcU0wQQtUQmB1hxXU0oSwCvcpzlunCQ2VYoDo1lSh5VIXG8K7DG5cYkKdbqUddFW2ogdzzTdYZHC12Bta6wqqk1KY2s5haMKAMWXSdzNyaA40kczahPfBgucJGAF00WMb0ZJTCKAp/EDNzQx9kwielwmkQ48c5lePKdXmiudbgAcjuJCWMQxUDHk4AiIEaI3TChhGEXCL1g6tPwxgEEgTBKIKBjmuC2JHJM4PaYQXw+CtE1jEnsjfDVHdKAJgtD6JomoY53jQFdmLhxQr1p4MYwmcaTiBFAeQbKp8wLXDomfh9ZYGQgMxImwEZuELxSHM1DEmsJ38gdEuTqDgPSBAsXLW5MvEQrex55aCTSDBxgE+JRPSC3BHW58cJpcRn5bYqbcBF8d+zeEGbgrP9wCNPkTWMy1tTREjYdsoQm04TATRT5xndG4hn1CLsygEHEjHlTRrAZu4lrCCAMOseu9Hg4ZdR4SMOExPF0ktAotDHtc3QIubp41H9KchSaPKNhUbzQwNoTkw8H5iOC87H21zjnajsYOuglL7dhTDQ0eaUXQnIT0BsSekTviDTSnDJiYwop0xtoE3ruYtypka/ThuyaIW0cPBa1YxIM9Bpcf0a1hPYAlgWjbQkZC71Rm4J+5wQ/Ep3BAOai/iqbviAP0ucyq0Husw2k8hLX9Zauh71HAI3wHrW30AH54/npxcVdvXuaA+tprodEiPZ4goLI3dwNe7Ox7cCM1/pmwtl5/9y6uLDZLf3BgZgExEVtT5fUWmfndrfTKdYWcllhp7Lg/ZGdA6cOnP0ENnz8+Ba1LtidP40/u5rf32ETzDYWdAdvibD6H+xn/ktLvy+feS6l9fm097Pb+z3t/bG0lvay/+WD/T3hpTweHXSdtoM1vxes3xsm2CDtq6Yxvdd9rfdJcjUzDdE6qmEHqfhWdvXObzeO8WtXWseJe670V3wkpLLs3ifsrqRShTrol93mIPEbXIbYky3789mX78EiiRHRjzfiRLJ1wHqi/fniTQgfvzEWVHv8n4Orf3U6fwMnWc4Z</source>
  </file>
  <file path="MIBS/Cisco/RSTP.php" generated-path="MIBS.Cisco.RSTP.html" hash="90fb6571fdbf9e08b8b5767cfb6482de" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Cisco" line="44" package="global">
      <extends>\OSS_SNMP\MIBS\Cisco</extends>
      <name>RSTP</name>
      <full_name>\OSS_SNMP\MIBS\Cisco\RSTP</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on Cisco devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="48" package="global">
        <name>OID_STP_X_RSTP_PORT_ROLE</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\RSTP::OID_STP_X_RSTP_PORT_ROLE</full_name>
        <value>'.1.3.6.1.4.1.9.9.82.1.12.2.1.3'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="55" package="global">
        <name>STP_X_RSTP_PORT_ROLE_DISABLED</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\RSTP::STP_X_RSTP_PORT_ROLE_DISABLED</full_name>
        <value>1</value>
        <docblock line="55">
          <description>Constant for possible value of STP extensions RSTP Port Role</description>
          <long-description></long-description>
          <tag name="see" line="55" description="" link="\OSS_SNMP\MIBS\Cisco\rstpPortRole()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="61" package="global">
        <name>STP_X_RSTP_PORT_ROLE_ROOT</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\RSTP::STP_X_RSTP_PORT_ROLE_ROOT</full_name>
        <value>2</value>
        <docblock line="61">
          <description>Constant for possible value of STP extensions RSTP Port Role</description>
          <long-description></long-description>
          <tag name="see" line="61" description="" link="\OSS_SNMP\MIBS\Cisco\rstpPortRole()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="67" package="global">
        <name>STP_X_RSTP_PORT_ROLE_DESIGNATED</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\RSTP::STP_X_RSTP_PORT_ROLE_DESIGNATED</full_name>
        <value>3</value>
        <docblock line="67">
          <description>Constant for possible value of STP extensions RSTP Port Role</description>
          <long-description></long-description>
          <tag name="see" line="67" description="" link="\OSS_SNMP\MIBS\Cisco\rstpPortRole()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="73" package="global">
        <name>STP_X_RSTP_PORT_ROLE_ALTERNATE</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\RSTP::STP_X_RSTP_PORT_ROLE_ALTERNATE</full_name>
        <value>4</value>
        <docblock line="73">
          <description>Constant for possible value of STP extensions RSTP Port Role</description>
          <long-description></long-description>
          <tag name="see" line="73" description="" link="\OSS_SNMP\MIBS\Cisco\rstpPortRole()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="79" package="global">
        <name>STP_X_RSTP_PORT_ROLE_BACKUP</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\RSTP::STP_X_RSTP_PORT_ROLE_BACKUP</full_name>
        <value>5</value>
        <docblock line="79">
          <description>Constant for possible value of STP extensions RSTP Port Role</description>
          <long-description></long-description>
          <tag name="see" line="79" description="" link="\OSS_SNMP\MIBS\Cisco\rstpPortRole()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="85" package="global">
        <name>STP_X_RSTP_PORT_ROLE_BOUNDARY</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\RSTP::STP_X_RSTP_PORT_ROLE_BOUNDARY</full_name>
        <value>6</value>
        <docblock line="85">
          <description>Constant for possible value of STP extensions RSTP Port Role</description>
          <long-description></long-description>
          <tag name="see" line="85" description="" link="\OSS_SNMP\MIBS\Cisco\rstpPortRole()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="91" package="global">
        <name>STP_X_RSTP_PORT_ROLE_MASTER</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\RSTP::STP_X_RSTP_PORT_ROLE_MASTER</full_name>
        <value>6</value>
        <docblock line="91">
          <description>Constant for possible value of STP extensions RSTP Port Role</description>
          <long-description></long-description>
          <tag name="see" line="91" description="" link="\OSS_SNMP\MIBS\Cisco\rstpPortRole()"/>
        </docblock>
      </constant>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="99" package="global">
        <name>$STP_X_RSTP_PORT_ROLES</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\RSTP::STP_X_RSTP_PORT_ROLES</full_name>
        <default>array(self::STP_X_RSTP_PORT_ROLE_DISABLED =&gt; 'disabled', self::STP_X_RSTP_PORT_ROLE_ROOT =&gt; 'root', self::STP_X_RSTP_PORT_ROLE_DESIGNATED =&gt; 'designated', self::STP_X_RSTP_PORT_ROLE_ALTERNATE =&gt; 'alternate', self::STP_X_RSTP_PORT_ROLE_BACKUP =&gt; 'backUp', self::STP_X_RSTP_PORT_ROLE_BOUNDARY =&gt; 'boundary', self::STP_X_RSTP_PORT_ROLE_MASTER =&gt; 'master')</default>
        <docblock line="99">
          <description>Text representation of STP extensions RSTP Port Roles</description>
          <long-description></long-description>
          <tag name="see" line="99" description="" link="\OSS_SNMP\MIBS\Cisco\rstpPortRole()"/>
          <tag name="var" line="99" description="&lt;p&gt;Text representations of STP extensions RSTP Port Role.&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="113" package="global">
        <name>$STP_X_RSTP_PASSING_PORT_ROLES</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\RSTP::STP_X_RSTP_PASSING_PORT_ROLES</full_name>
        <default>array(self::STP_X_RSTP_PORT_ROLE_ROOT =&gt; 'root', self::STP_X_RSTP_PORT_ROLE_DESIGNATED =&gt; 'designated')</default>
        <docblock line="113">
          <description>Array of port states that indicate traffic is/can pass</description>
          <long-description></long-description>
          <tag name="var" line="113" description="&lt;p&gt;of port states that indicate traffic is/can pass&lt;/p&gt;" type="Array" variable="">
            <type>Array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS\Cisco" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="142" package="global">
        <name>portRoles</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\RSTP::portRoles()</full_name>
        <docblock line="142">
          <description>Get the device's RSTP port roles (by given vlan id)</description>
          <long-description>Only ports participating in RSTP for the given VLAN id are returned.

This function will also convert STP port IDs to the device proper port IDs.
E.g. sample output:

Array
(
   [10101] =&gt; 3
   [10103] =&gt; 3
   [10105] =&gt; 3
   [5048] =&gt; 2
)</long-description>
          <tag name="see" line="142" description="" link="\OSS_SNMP\MIBS\Cisco\$STP_X_RSTP_PORT_ROLES"/>
          <tag name="see" line="142" description="and others" link="\OSS_SNMP\MIBS\Cisco\STP_X_RSTP_PORT_ROLE_ROOT"/>
          <tag name="param" line="142" description="&lt;p&gt;The RSTP VLAN ID to query port roles for&lt;/p&gt;" type="int" variable="$vid">
            <type>int</type>
          </tag>
          <tag name="param" line="142" description="&lt;p&gt;If true, return the string representation via self::$STP_X_RSTP_PORT_ROLES&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="142" description="The device's RSTP port roles (by given vlan id)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$vid</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="157">Find a better way to translate these?</todo>
    </markers>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="MIBS/Cisco/CDP.php" generated-path="MIBS.Cisco.CDP.html" hash="e341e4dd69c98ee4ed30f9a452ffa2c8" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Cisco" line="44" package="global">
      <extends>\OSS_SNMP\MIBS\Cisco</extends>
      <name>CDP</name>
      <full_name>\OSS_SNMP\MIBS\Cisco\CDP</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on Cisco devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="47" package="global">
        <name>OID_CDP_INTERFACE_ENABLED</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_INTERFACE_ENABLED</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.1.1.1.2'</value>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="48" package="global">
        <name>OID_CDP_INTERFACE_NAME</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_INTERFACE_NAME</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.1.1.1.6'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="50" package="global">
        <name>OID_CDP_CACHE_NEIGHBOUR_ADDRESS_TYPE</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_CACHE_NEIGHBOUR_ADDRESS_TYPE</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.2.1.1.3'</value>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="51" package="global">
        <name>OID_CDP_CACHE_NEIGHBOUR_ADDRESS</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_CACHE_NEIGHBOUR_ADDRESS</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.2.1.1.4'</value>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="52" package="global">
        <name>OID_CDP_CACHE_NEIGHBOUR_VERSION</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_CACHE_NEIGHBOUR_VERSION</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.2.1.1.5'</value>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="53" package="global">
        <name>OID_CDP_CACHE_NEIGHBOUR_ID</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_CACHE_NEIGHBOUR_ID</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.2.1.1.6'</value>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="54" package="global">
        <name>OID_CDP_CACHE_NEIGHBOUR_PORT</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_CACHE_NEIGHBOUR_PORT</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.2.1.1.7'</value>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="55" package="global">
        <name>OID_CDP_CACHE_NEIGHBOUR_PLATFORM</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_CACHE_NEIGHBOUR_PLATFORM</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.2.1.1.8'</value>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="56" package="global">
        <name>OID_CDP_CACHE_NEIGHBOUR_CAPABILITY</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_CACHE_NEIGHBOUR_CAPABILITY</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.2.1.1.9'</value>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="57" package="global">
        <name>OID_CDP_CACHE_NEIGHBOUR_VTP_MGMT_DOMAIN</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_CACHE_NEIGHBOUR_VTP_MGMT_DOMAIN</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.2.1.1.10'</value>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="58" package="global">
        <name>OID_CDP_CACHE_NEIGHBOUR_NATIVE_VLAN</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_CACHE_NEIGHBOUR_NATIVE_VLAN</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.2.1.1.11'</value>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="59" package="global">
        <name>OID_CDP_CACHE_NEIGHBOUR_DUPLEX</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_CACHE_NEIGHBOUR_DUPLEX</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.2.1.1.12'</value>
        <docblock line="59">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="60" package="global">
        <name>OID_CDP_CACHE_NEIGHBOUR_LAST_CHANGE</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_CACHE_NEIGHBOUR_LAST_CHANGE</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.2.1.1.24'</value>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="62" package="global">
        <name>OID_CDP_GLOBAL_RUN</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_GLOBAL_RUN</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.3.1.0'</value>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="63" package="global">
        <name>OID_CDP_GLOBAL_MESSAGE_INTERVAL</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_GLOBAL_MESSAGE_INTERVAL</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.3.2.0'</value>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="64" package="global">
        <name>OID_CDP_GLOBAL_HOLDTIME</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_GLOBAL_HOLDTIME</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.3.3.0'</value>
        <docblock line="64">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="65" package="global">
        <name>OID_CDP_GLOBAL_DEVICE_ID</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_GLOBAL_DEVICE_ID</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.3.4.0'</value>
        <docblock line="65">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="66" package="global">
        <name>OID_CDP_GLOBAL_LAST_CHANGE</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::OID_CDP_GLOBAL_LAST_CHANGE</full_name>
        <value>'.1.3.6.1.4.1.9.9.23.1.3.5.0'</value>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="167" package="global">
        <name>CDP_CACHE_NEIGHBOUR_ADDRESS_TYPE_IP</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_ADDRESS_TYPE_IP</full_name>
        <value>1</value>
        <docblock line="167">
          <description>Constant for possible value of CDP neighbour address type</description>
          <long-description></long-description>
          <tag name="see" line="167" description="" link="\OSS_SNMP\MIBS\Cisco\OSS_SNMP\MIBS\Cisco\CDP::neighbourAddressTypes()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="305" package="global">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_ROUTER</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_CAPABILITY_ROUTER</full_name>
        <value>1</value>
        <docblock line="305">
          <description>Constant for possible value of CDP neighbour capability</description>
          <long-description></long-description>
          <tag name="see" line="305" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourCapability()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="311" package="global">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_TRANSPARENT_BRIDGE</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_CAPABILITY_TRANSPARENT_BRIDGE</full_name>
        <value>2</value>
        <docblock line="311">
          <description>Constant for possible value of CDP neighbour capability</description>
          <long-description></long-description>
          <tag name="see" line="311" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourCapability()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="317" package="global">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_SOURCE_ROUTE_BRIDGE</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_CAPABILITY_SOURCE_ROUTE_BRIDGE</full_name>
        <value>4</value>
        <docblock line="317">
          <description>Constant for possible value of CDP neighbour capability</description>
          <long-description></long-description>
          <tag name="see" line="317" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourCapability()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="323" package="global">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_SWITCH</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_CAPABILITY_SWITCH</full_name>
        <value>8</value>
        <docblock line="323">
          <description>Constant for possible value of CDP neighbour capability</description>
          <long-description></long-description>
          <tag name="see" line="323" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourCapability()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="329" package="global">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_HOST</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_CAPABILITY_HOST</full_name>
        <value>16</value>
        <docblock line="329">
          <description>Constant for possible value of CDP neighbour capability</description>
          <long-description></long-description>
          <tag name="see" line="329" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourCapability()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="335" package="global">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_IGMP_CAPABLE</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_CAPABILITY_IGMP_CAPABLE</full_name>
        <value>32</value>
        <docblock line="335">
          <description>Constant for possible value of CDP neighbour capability</description>
          <long-description></long-description>
          <tag name="see" line="335" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourCapability()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="341" package="global">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_REPEATER</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_CAPABILITY_REPEATER</full_name>
        <value>64</value>
        <docblock line="341">
          <description>Constant for possible value of CDP neighbour capability</description>
          <long-description></long-description>
          <tag name="see" line="341" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourCapability()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="484" package="global">
        <name>CDP_CACHE_NEIGHBOUR_DUPLEX_UNKNOWN</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_DUPLEX_UNKNOWN</full_name>
        <value>1</value>
        <docblock line="484">
          <description>Constant for possible value of CDP neighbour duplex</description>
          <long-description></long-description>
          <tag name="see" line="484" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourDuplexMode()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="490" package="global">
        <name>CDP_CACHE_NEIGHBOUR_DUPLEX_HALF</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_DUPLEX_HALF</full_name>
        <value>2</value>
        <docblock line="490">
          <description>Constant for possible value of CDP neighbour duplex</description>
          <long-description></long-description>
          <tag name="see" line="490" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourDuplexMode()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="496" package="global">
        <name>CDP_CACHE_NEIGHBOUR_DUPLEX_FULL</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_DUPLEX_FULL</full_name>
        <value>3</value>
        <docblock line="496">
          <description>Constant for possible value of CDP neighbour duplex</description>
          <long-description></long-description>
          <tag name="see" line="496" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourDuplexMode()"/>
        </docblock>
      </constant>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="175" package="global">
        <name>$CDP_CACHE_NEIGHBOUR_ADDRESS_TYPES</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_ADDRESS_TYPES</full_name>
        <default>array(self::CDP_CACHE_NEIGHBOUR_ADDRESS_TYPE_IP =&gt; 'ip')</default>
        <docblock line="175">
          <description>Text representation of CDP neighbour address type</description>
          <long-description></long-description>
          <tag name="see" line="175" description="" link="\OSS_SNMP\MIBS\Cisco\OSS_SNMP\SNMP\MIBS\Cisco\CDP::neighbourAddressTypes()"/>
          <tag name="var" line="175" description="&lt;p&gt;Text representation of CDP neighbour address type&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="349" package="global">
        <name>$CDP_CACHE_NEIGHBOUR_CAPABILITIES</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_CAPABILITIES</full_name>
        <default>array(self::CDP_CACHE_NEIGHBOUR_CAPABILITY_ROUTER =&gt; 'Router', self::CDP_CACHE_NEIGHBOUR_CAPABILITY_TRANSPARENT_BRIDGE =&gt; 'Transparent Bridge', self::CDP_CACHE_NEIGHBOUR_CAPABILITY_SOURCE_ROUTE_BRIDGE =&gt; 'Source Route Bridge', self::CDP_CACHE_NEIGHBOUR_CAPABILITY_SWITCH =&gt; 'Switch', self::CDP_CACHE_NEIGHBOUR_CAPABILITY_HOST =&gt; 'Host', self::CDP_CACHE_NEIGHBOUR_CAPABILITY_IGMP_CAPABLE =&gt; 'IGMP Capable', self::CDP_CACHE_NEIGHBOUR_CAPABILITY_REPEATER =&gt; 'Repeater')</default>
        <docblock line="349">
          <description>Text representation of CDP capabilities</description>
          <long-description></long-description>
          <tag name="see" line="349" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourCapability()"/>
          <tag name="var" line="349" description="&lt;p&gt;Text representation of CDP neighbour capabilities&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="504" package="global">
        <name>$CDP_CACHE_NEIGHBOUR_DUPLEXES</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_DUPLEXES</full_name>
        <default>array(self::CDP_CACHE_NEIGHBOUR_DUPLEX_UNKNOWN =&gt; 'unknown', self::CDP_CACHE_NEIGHBOUR_DUPLEX_HALF =&gt; 'half-duplex', self::CDP_CACHE_NEIGHBOUR_DUPLEX_FULL =&gt; 'full-duplex')</default>
        <docblock line="504">
          <description>Text representation of CDP capabilities</description>
          <long-description></long-description>
          <tag name="see" line="504" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourDuplexMode()"/>
          <tag name="var" line="504" description="&lt;p&gt;Text representation of CDP neighbour duplex modes&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS\Cisco" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="78" package="global">
        <name>globalRun</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::globalRun()</full_name>
        <docblock line="78">
          <description>Get the device's global CDP (Cisco Discovery Protocol) run status</description>
          <long-description>&gt; An indication of whether the Cisco Discovery Protocol is currently
&gt; running.  Entries in cdpCacheTable are deleted when CDP is disabled.</long-description>
          <tag name="return" line="78" description="True if enabled globally, else false" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="91" package="global">
        <name>globalMessageInterval</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::globalMessageInterval()</full_name>
        <docblock line="91">
          <description>Get the interval at which CDP messages are to be generated</description>
          <long-description>&gt; The interval at which CDP messages are to be generated.
&gt; The default value is 60 seconds.</long-description>
          <tag name="return" line="91" description="The interval at which CDP messages are to be generated" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="104" package="global">
        <name>globalHoldTime</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::globalHoldTime()</full_name>
        <docblock line="104">
          <description>Get the time for the receiving device holds CDP message</description>
          <long-description>&gt; The time for the receiving device holds CDP message.
&gt; The default value is 180 seconds."</long-description>
          <tag name="return" line="104" description="The time for the receiving device holds CDP message" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="118" package="global">
        <name>globalLastChange</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::globalLastChange()</full_name>
        <docblock line="118">
          <description>The time when the cache table was last changed</description>
          <long-description>&gt; Indicates the time when the cache table was last changed. It
&gt; is the most recent time at which any row was last created,
&gt; modified or deleted.</long-description>
          <tag name="return" line="118" description="The time (timeticks) when the cache table was last changed" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="128" package="global">
        <name>id</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::id()</full_name>
        <docblock line="128">
          <description>Get the device's CDP (Cisco Discovery Protocol) ID</description>
          <long-description></long-description>
          <tag name="return" line="128" description="The device's CDP (Cisco Discovery Protocol) ID" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="144" package="global">
        <name>interfaceEnabled</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::interfaceEnabled()</full_name>
        <docblock line="144">
          <description>Get the device's interfaces CDP enabled status</description>
          <long-description>Applies the TruthValue post processor to turn
SNMP values into true / false.</long-description>
          <tag name="see" line="144" description="" link="\OSS_SNMP\MIBS\Cisco\OSS_SNMP\SNMP::ppTruthValue()"/>
          <tag name="return" line="144" description="The device's interfaces CDP enabled status' (as boolean true / false)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="156" package="global">
        <name>interfaceNames</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::interfaceNames()</full_name>
        <docblock line="156">
          <description>Get the device's interface names as seen in CDP</description>
          <long-description>&gt; The name of the local interface as advertised by CDP in the Port-ID TLV</long-description>
          <tag name="return" line="156" description="The device's interface names as seen in CDP" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="187" package="global">
        <name>neighbourAddressTypes</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbourAddressTypes()</full_name>
        <docblock line="187">
          <description>Get the CDP neighbours' address type indexed by the current device's port ID</description>
          <long-description>&gt; An indication of the type of address contained in the corresponding instance of cdpCacheAddress</long-description>
          <tag name="param" line="187" description="&lt;p&gt;If true, return the string representation via self::$VTP_VLAN_TYPES&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="187" description="The CDP neighbours' address type indexed by the current device's port ID" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="213" package="global">
        <name>neighbourAddresses</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbourAddresses()</full_name>
        <docblock line="213">
          <description>Get the device's CDP neighbour addresses indexed by the current device's port ID</description>
          <long-description>&gt; The (first) network-layer address of the device
&gt; as reported in the Address TLV of the most recently received
&gt; CDP message.  For example, if the corresponding instance of
&gt; cacheAddressType had the value 'ip(1)', then this object
&gt; would be an IPv4-address.  If the neighbor device is
&gt; SNMP-manageable, it is supposed to generate its CDP messages
&gt; such that this address is one at which it will receive SNMP
&gt; messages. Use cdpCtAddressTable to extract the remaining
&gt; addresses from the Address TLV received most recently."</long-description>
          <tag name="return" line="213" description="The device's CDP neighbour addresses indexed by the current device's port ID" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="235" package="global">
        <name>neighbourVersions</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbourVersions()</full_name>
        <docblock line="235">
          <description>Get the device's CDP neighbour version indexed by the current device's port ID</description>
          <long-description>&gt; The Version string as reported in the most recent CDP
&gt; message.  The zero-length string indicates no Version
&gt; field (TLV) was reported in the most recent CDP message."</long-description>
          <tag name="return" line="235" description="The device's CDP neighbour version indexed by the current device's port ID" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="250" package="global">
        <name>neighbourId</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbourId()</full_name>
        <docblock line="250">
          <description>Get the device's CDP neighbours (by their CDP ID) indexed by the current device's port ID</description>
          <long-description>&gt; The Device-ID string as reported in the most recent CDP
&gt; message.  The zero-length string indicates no Device-ID
&gt; field (TLV) was reported in the most recent CDP message."</long-description>
          <tag name="return" line="250" description="The device's CDP neighbours (by their CDP ID) indexed by the current device's port ID" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="280" package="global">
        <name>neighbourPort</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbourPort()</full_name>
        <docblock line="280">
          <description>Get the device's CDP neighbours connected port description indexed by the current device's port ID</description>
          <long-description>E.g. a sample call may return:

    Array
    (
        [10101] =&gt; GigabitEthernet0/1
        [10102] =&gt; FastEthernet0/2
        [10103] =&gt; GigabitEthernet1/0/24
        [10105] =&gt; GigabitEthernet1/0/2
    )

meaning, for example, that our local port with ID `10101` is connected to port `GigabitEthernet0/1` on the neighbour
connected to that local port. You can discover the neighbour ID via `neighbourId()`.

&gt; The Port-ID string as reported in the most recent CDP
&gt; message.  This will typically be the value of the ifName
&gt; object (e.g., 'Ethernet0').  The zero-length string
&gt; indicates no Port-ID field (TLV) was reported in the
&gt; most recent CDP message.</long-description>
          <tag name="see" line="280" description="" link="\OSS_SNMP\SNMP\MIBS\Cisco\CDP::neighbourId()"/>
          <tag name="return" line="280" description="The device's CDP neighbours connected port *description* indexed by the current device's port ID" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="294" package="global">
        <name>neighbourPlatforms</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbourPlatforms()</full_name>
        <docblock line="294">
          <description>Get the device's CDP neighbour platforms indexed by the current device's port ID</description>
          <long-description>&gt; The Device's Hardware Platform as reported in the most recent CDP
&gt; message. The zero-length string indicates that no Platform field
&gt; (TLV) was reported in the most recent CDP message.</long-description>
          <tag name="return" line="294" description="The device's CDP neighbour platforms indexed by the current device's port ID" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="374" package="global">
        <name>neighbourCapability</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbourCapability()</full_name>
        <docblock line="374">
          <description>Get the device's CDP neighbour capabilities (as a decimal integer) indexed by the current device's port ID</description>
          <long-description>&gt; The Device's Functional Capabilities as reported in the most
&gt; recent CDP message.  For latest set of specific values, see
&gt; the latest version of the CDP specification. The zero-length
&gt; string indicates no Capabilities field (TLV) was reported in
&gt; the most recent CDP message."</long-description>
          <tag name="see" line="374" description="&quot;Cisco Discovery Protocol Specification, 10/19/94.&quot;" link="\OSS_SNMP\MIBS\Cisco\REFERENCE"/>
          <tag name="see" line="374" description="" link="\OSS_SNMP\MIBS\Cisco\http://www.cisco.com/univercd/cc/td/doc/product/lan/trsrb/frames.htm#xtocid12"/>
          <tag name="see" line="374" description="" link="\OSS_SNMP\MIBS\Cisco\http://wiki.wireshark.org/CDP"/>
          <tag name="return" line="374" description="The device's CDP neighbour capabilities (as a decimal integer) indexed by the current device's port ID" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="396" package="global">
        <name>neighbourHasCapability</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbourHasCapability()</full_name>
        <docblock line="396">
          <description>Query if a given neighbour (by connected port ID) has the given capability</description>
          <long-description>Example:

    if( $host-&gt;useCisco_CDP()-&gt;neighbourHasCapability( $portId, \OSS_SNMP\SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_CAPABILITY_SWITCH )
         echo "Host is a switch!!";</long-description>
          <tag name="param" line="396" description="&lt;p&gt;The CDP neighbour by connected local port ID&lt;/p&gt;" type="int" variable="$portId">
            <type>int</type>
          </tag>
          <tag name="param" line="396" description="&lt;p&gt;The capability to query for (defined by self::CDP_CACHE_NEIGHBOUR_CAPABILITY_XXX constants)&lt;/p&gt;" type="int" variable="$capability">
            <type>int</type>
          </tag>
          <tag name="return" line="396" description="True if the neighbour has the given capability" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$portId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$capability</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="425" package="global">
        <name>neighbourCapabilities</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbourCapabilities()</full_name>
        <docblock line="425">
          <description>Get an array of individual capabilities of a given neighbour (by connected port ID)</description>
          <long-description>Example:

    print_r( $host-&gt;useCisco_CDP()-&gt;neighbourCapabilities( 10111 ) )

        [0] =&gt; 8         // self::CDP_CACHE_NEIGHBOUR_CAPABILITY_SWITCH
        [1] =&gt; 32        // self::CDP_CACHE_NEIGHBOUR_CAPABILITY_IGMP_CAPABLE

    print_r( $host-&gt;useCisco_CDP()-&gt;neighbourCapabilities( 10111, true ) )

        [0] =&gt; "Switch"              // self::CDP_CACHE_NEIGHBOUR_CAPABILITY_SWITCH
        [1] =&gt; "IGMP Capable"        // self::CDP_CACHE_NEIGHBOUR_CAPABILITY_IGMP_CAPABLE</long-description>
          <tag name="param" line="425" description="&lt;p&gt;The CDP neighbour by connected local port ID&lt;/p&gt;" type="int" variable="$portId">
            <type>int</type>
          </tag>
          <tag name="param" line="425" description="&lt;p&gt;Set to true to return descriptions rather than integers&lt;/p&gt;" type="int" variable="$translate">
            <type>int</type>
          </tag>
          <tag name="return" line="425" description="Individual capabilities of a given neighbour" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$portId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="456" package="global">
        <name>neighbourVTPMgmtDomain</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbourVTPMgmtDomain()</full_name>
        <docblock line="456">
          <description>Get the device's CDP neighbours' VTP management domain indexed by the current device's port ID</description>
          <long-description>&gt; The VTP Management Domain for the remote device's interface,
&gt; as reported in the most recently received CDP message. This
&gt; object is not instantiated if no VTP Management Domain field
&gt; (TLV) was reported in the most recently received CDP message.</long-description>
          <tag name="see" line="456" description="&quot;managementDomainName in CISCO-VTP-MIB&quot;" link="\OSS_SNMP\MIBS\Cisco\REFERENCE"/>
          <tag name="return" line="456" description="The device's CDP neighbours' VTP management domain indexed by the current device's port ID" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="472" package="global">
        <name>neighbourNativeVLAN</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbourNativeVLAN()</full_name>
        <docblock line="472">
          <description>Get the remote device's interface's native VLAN (indexed by local portId)</description>
          <long-description>&gt; The remote device's interface's native VLAN, as reported in the
&gt; most recent CDP message.  The value 0 indicates
&gt; no native VLAN field (TLV) was reported in the most
&gt; recent CDP message.</long-description>
          <tag name="return" line="472" description="The remote device's interface's native VLAN (indexed by local portId)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="522" package="global">
        <name>neighbourDuplexMode</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbourDuplexMode()</full_name>
        <docblock line="522">
          <description>Get the remote device's interface's duplex mode (indexed by local portId)</description>
          <long-description>&gt; he remote device's interface's duplex mode, as reported in the
&gt; most recent CDP message.  The value unknown(1) indicates
&gt; no duplex mode field (TLV) was reported in the most
&gt; recent CDP message."</long-description>
          <tag name="param" line="522" description="&lt;p&gt;If true, return the string representation via self::$VTP_VLAN_TYPES&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="522" description="The remote device's interface's duplex mode (indexed by local portId)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="544" package="global">
        <name>neighbourLastChange</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbourLastChange()</full_name>
        <docblock line="544">
          <description>Get the remote device's last change time (indexed by local portId)</description>
          <long-description>&gt; Indicates the time when this cache entry was last changed.
&gt; This object is initialised to the current time when the entry
&gt; gets created and updated to the current time whenever the value
&gt; of any (other) object instance in the corresponding row is
&gt; modified."</long-description>
          <tag name="return" line="544" description="The remote device's last change time(indexed by local portId)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="608" package="global">
        <name>neighbours</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::neighbours()</full_name>
        <docblock line="608">
          <description>CDP utility function to get all CDP neighbours and their connected ports.</description>
          <long-description>Returns an array of neighbours indexed by the neighbour CDP ID with a lot of details.

For example, here's a sample return for a switch with two neighbours where one neighbour
is connected with a LAG / PortChannel and `$inverse` was set to true.


    array(2) {
        ["cr-sw07.example.ie"] =&gt; array(1) {
            [0] =&gt; array(7) {
                ["localPortId"] =&gt; int(10103)
                ["localPortName"] =&gt; string(7) "Gi1/0/3"
                ["localPort"] =&gt; string(20) "GigabitEthernet1/0/3"
                ["isLAG"] =&gt; bool(false)
                ["remotePort"] =&gt; string(21) "GigabitEthernet1/0/24"
                ["remotePortId"] =&gt; int(10124)
                ["remotePortName"] =&gt; string(8) "Gi1/0/24"
            }
        }
        ["cr-sw01.example.ie"] =&gt; array(2) {
            [0] =&gt; array(11) {
                ["localPortId"] =&gt; int(10111)
                ["localPortName"] =&gt; string(8) "Gi1/0/11"
                    ["localPort"] =&gt; string(21) "GigabitEthernet1/0/11"
                ["isLAG"] =&gt; bool(true)
                ["lagPortId"] =&gt; int(5048)
                ["lagPortName"] =&gt; string(4) "Po48"
                ["remotePort"] =&gt; string(21) "GigabitEthernet1/0/11"
                ["remotePortId"] =&gt; int(10111)
                ["remotePortName"] =&gt; string(8) "Gi1/0/11"
                ["remoteLagPortId"] =&gt; int(5048)
                ["remoteLagPortName"] =&gt; string(4) "Po48"
            }
            [1] =&gt; array(11) {
                ["localPortId"] =&gt; int(10112)
                ["localPortName"] =&gt; string(8) "Gi1/0/12"
                ["localPort"] =&gt; string(21) "GigabitEthernet1/0/12"
                ["isLAG"] =&gt; bool(true)
                ["lagPortId"] =&gt; int(5048)
                ["lagPortName"] =&gt; string(4) "Po48"
                ["remotePort"] =&gt; string(21) "GigabitEthernet1/0/12"
                ["remotePortId"] =&gt; int(10112)
                ["remotePortName"] =&gt; string(8) "Gi1/0/12"
                ["remoteLagPortId"] =&gt; int(5048)
                ["remoteLagPortName"] =&gt; string(4) "Po48"
            }
        }</long-description>
          <tag name="see" line="608" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourId()"/>
          <tag name="see" line="608" description="" link="\OSS_SNMP\SNMP\MIBS\Interface::descriptions()"/>
          <tag name="see" line="608" description="" link="\OSS_SNMP\MIBS\Cisco\neighbourPort()"/>
          <tag name="param" line="608" description="&lt;p&gt;If true, all remoteXXX params will be discovered (only remotePort is returned otherwise)&lt;/p&gt;" type="boolean" variable="$inverse">
            <type>boolean</type>
          </tag>
          <tag name="param" line="608" description="&lt;p&gt;If using $inverse, pass an array of CDP IDs of neighbours that should not be 'inverse' discovered.&lt;/p&gt;" type="array" variable="$skipHostIds">
            <type>array</type>
          </tag>
          <tag name="return" line="608" description="CDP neighbours and their connected ports" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$inverse</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$skipHostIds</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="703" package="global">
        <name>crawl</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::crawl()</full_name>
        <docblock line="703">
          <description>Recursivily crawls all CDP neighbours to build up a flat array of all devices
indexed by the CDP device id.</description>
          <long-description>Array form is same as that returned by neighbours()</long-description>
          <tag name="see" line="703" description="" link="\OSS_SNMP\MIBS\Cisco\neighbours()"/>
          <tag name="param" line="703" description="&lt;p&gt;Unless you're doing something funky, just pass an empty array. This is where the result will be found.&lt;/p&gt;" type="array" variable="$devices">
            <type>array</type>
          </tag>
          <tag name="param" line="703" description="&lt;p&gt;CDP device ID of next host to crawl. On first pass, set to null - used internally when recursing&lt;/p&gt;" type="string" variable="$device">
            <type>string</type>
          </tag>
          <tag name="param" line="703" description="&lt;p&gt;An array of CDP device IDs to &lt;em&gt;ignore&lt;/em&gt;. I.e. to not include in recursive crawling&lt;/p&gt;" type="array" variable="$ignore">
            <type>array</type>
          </tag>
          <tag name="return" line="703" description="The resultant array of all crawled devices (same as that passed in the @param $devices parameter)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$devices</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$device</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ignore</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="778" package="global">
        <name>linkTopology</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::linkTopology()</full_name>
        <docblock line="778">
          <description>Find the layer 2 topology as an array with no link mentioned more than once.</description>
          <long-description>Huh? This function:

* takes the result of crawl() (or calls crawl()) to get the CDP topology;
* foreach device, builds an array of device to device links;
* SO LONG as that link has already not been accounted for in the other direction.

I.e. if a link is found A -&gt; B, then the same B -&gt; A link will not be included.

The primary differences to the return value of this and crawl() are:

* links only appear once (unidirectional) rather than twice (bidirectional)
* the links are indexed by the localPortName rather than an integer index:

    [cr-sw04.degkcp.example.ie] =&gt; Array
    (
         [cd-sw02.degkcp.example.ie] =&gt; Array
         (
             [GigabitEthernet1/0/3] =&gt; Array
             (
                 [remotePort] =&gt; FastEthernet0/1
                 [isLAG]      =&gt; false
                 ........
         )
    )


All port information is copied over from the supplied / called `crawl()` array</long-description>
          <tag name="see" line="778" description="" link="\OSS_SNMP\MIBS\Cisco\crawl()"/>
          <tag name="param" line="778" description="&lt;p&gt;The result of crawl() (if null, this function performs a crawl())&lt;/p&gt;" type="array" variable="$devices">
            <type>array</type>
          </tag>
          <tag name="return" line="778" description="L2 topology as described above." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$devices</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="876" package="global">
        <name>collapseLAGs</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::collapseLAGs()</full_name>
        <docblock line="876">
          <description>Utility function to process the output from neighbours() and remove individual trunk ports leaving only
single LAG links.</description>
          <long-description>For example, here's a sample return for a switch with a neighbour
connected with a LAG / PortChannel:

    array(2) {
    ["cr-sw01.example.ie"] =&gt; array(2) {
        [0] =&gt; array(11) {
            ["localPortId"] =&gt; int(10111)
            ["localPortName"] =&gt; string(8) "Gi1/0/11"
            ["localPort"] =&gt; string(21) "GigabitEthernet1/0/11"
            ["isLAG"] =&gt; bool(true)
            ["lagPortId"] =&gt; int(5048)
            ["lagPortName"] =&gt; string(4) "Po48"
            ["remotePort"] =&gt; string(21) "GigabitEthernet1/0/11"
            ["remotePortId"] =&gt; int(10111)
            ["remotePortName"] =&gt; string(8) "Gi1/0/11"
            ["remoteLagPortId"] =&gt; int(5048)
            ["remoteLagPortName"] =&gt; string(4) "Po48"
        }
        [1] =&gt; array(11) {
            ["localPortId"] =&gt; int(10112)
            ["localPortName"] =&gt; string(8) "Gi1/0/12"
            ["localPort"] =&gt; string(21) "GigabitEthernet1/0/12"
            ["isLAG"] =&gt; bool(true)
            ["lagPortId"] =&gt; int(5048)
            ["lagPortName"] =&gt; string(4) "Po48"
            ["remotePort"] =&gt; string(21) "GigabitEthernet1/0/12"
            ["remotePortId"] =&gt; int(10112)
            ["remotePortName"] =&gt; string(8) "Gi1/0/12"
            ["remoteLagPortId"] =&gt; int(5048)
            ["remoteLagPortName"] =&gt; string(4) "Po48"
        }
    }
    ...
    }

The result of this function would be:

    array(2) {
    ["cr-sw01.example.ie"] =&gt; array(1) {
        [0] =&gt; array(11) {
            ["localPortId"] =&gt; int(5048)
            ["localPortName"] =&gt; string(8) "Po48"
            ["localPort"] =&gt; string(21) "Po48"
            ["isLAG"] =&gt; bool(true)
            ["lagPortId"] =&gt; int(5048)
            ["lagPortName"] =&gt; string(4) "Po48"
            ["remotePort"] =&gt; string(21) "Po48"
            ["remotePortId"] =&gt; int(5048)
            ["remotePortName"] =&gt; string(8) "Po48"
            ["remoteLagPortId"] =&gt; int(5048)
            ["remoteLagPortName"] =&gt; string(4) "Po48"
        }
    }
    ...
    }</long-description>
          <tag name="see" line="876" description="" link="\OSS_SNMP\MIBS\Cisco\neighbours()"/>
          <tag name="param" line="876" description="&lt;p&gt;The result of a call to neighbours()&lt;/p&gt;" type="array" variable="$neighbours">
            <type>array</type>
          </tag>
          <tag name="return" line="876" description="Processed CDP neighbours with LAG ports collapsed" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$neighbours</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="914" package="global">
        <name>collapseDevicesLAGs</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\CDP::collapseDevicesLAGs()</full_name>
        <docblock line="914">
          <description>An extension of `collapseLAGs()` to work with `crawl()` and `linkTopology()`.</description>
          <long-description>Rather than taking the input from `neighbours()`, it takes input from `crawl()` or `linkTopology()`
and processes all neighbours.</long-description>
          <tag name="see" line="914" description="" link="\OSS_SNMP\MIBS\Cisco\collapseLAGs()"/>
          <tag name="param" line="914" description="&lt;p&gt;The result of a call to crawl() or linkTopology()&lt;/p&gt;" type="array" variable="$devices">
            <type>array</type>
          </tag>
          <tag name="return" line="914" description="Processed CDP neighbours with LAG ports collapsed" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$devices</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source></source>
  </file>
  <file path="MIBS/Asterisk.php" generated-path="MIBS.Asterisk.html" hash="4db7d6148b7ab41c97b59fc3a3b33b3b" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="45" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>Asterisk</name>
      <full_name>\OSS_SNMP\MIBS\Asterisk</full_name>
      <docblock line="45">
        <description>A class for performing SNMP V2 queries on Asterisk</description>
        <long-description></long-description>
        <tag name="see" line="45" description="" link="\OSS_SNMP\MIBS\https://wiki.asterisk.org/wiki/display/AST/Asterisk+MIB+Definitions"/>
        <tag name="copyright" line="45" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="45" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS" line="48" package="global">
        <name>OID_ASTERISK_VERSION_STRING</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::OID_ASTERISK_VERSION_STRING</full_name>
        <value>'.1.3.6.1.4.1.22736.1.1.1.0'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>OID_ASTERISK_VERSION_TAG</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::OID_ASTERISK_VERSION_TAG</full_name>
        <value>'.1.3.6.1.4.1.22736.1.1.2.0'</value>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="51" package="global">
        <name>OID_ASTERISK_UP_TIME</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::OID_ASTERISK_UP_TIME</full_name>
        <value>'.1.3.6.1.4.1.22736.1.2.1.0'</value>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="52" package="global">
        <name>OID_ASTERISK_RELOAD_TIME</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::OID_ASTERISK_RELOAD_TIME</full_name>
        <value>'.1.3.6.1.4.1.22736.1.2.2.0'</value>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="53" package="global">
        <name>OID_ASTERISK_PID</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::OID_ASTERISK_PID</full_name>
        <value>'.1.3.6.1.4.1.22736.1.2.3.0'</value>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="54" package="global">
        <name>OID_ASTERISK_CONTROL_SOCKET</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::OID_ASTERISK_CONTROL_SOCKET</full_name>
        <value>'.1.3.6.1.4.1.22736.1.2.4.0'</value>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="55" package="global">
        <name>OID_ASTERISK_CALLS_ACTIVE</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::OID_ASTERISK_CALLS_ACTIVE</full_name>
        <value>'.1.3.6.1.4.1.22736.1.2.5.0'</value>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="56" package="global">
        <name>OID_ASTERISK_CALLS_PROCESSED</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::OID_ASTERISK_CALLS_PROCESSED</full_name>
        <value>'.1.3.6.1.4.1.22736.1.2.6.0'</value>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>OID_ASTERISK_MODULES</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::OID_ASTERISK_MODULES</full_name>
        <value>'.1.3.6.1.4.1.22736.1.3.1.0'</value>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>version</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::version()</full_name>
        <docblock line="68">
          <description>Returns the version of Asterisk</description>
          <long-description>&gt; Text version string of the version of Asterisk that
&gt; the SNMP Agent was compiled to run against.</long-description>
          <tag name="return" line="68" description="The version of Asterisk" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="82" package="global">
        <name>tag</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::tag()</full_name>
        <docblock line="82">
          <description>Returns the Subversion (SVN) revision of Asterisk</description>
          <long-description>&gt; SubVersion revision of the version of Asterisk that
&gt; the SNMP Agent was compiled to run against -- this is
&gt; typically 0 for release-versions of Asterisk.</long-description>
          <tag name="return" line="82" description="The SVN revision of Asterisk" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="94" package="global">
        <name>uptime</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::uptime()</full_name>
        <docblock line="94">
          <description>Returns the time ticks (100th sec) since Asterisk was started</description>
          <long-description>&gt; Time ticks since Asterisk was started.</long-description>
          <tag name="return" line="94" description="Time ticks since Asterisk was started" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="106" package="global">
        <name>reloadTime</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::reloadTime()</full_name>
        <docblock line="106">
          <description>Returns the time ticks (100th sec) since the Asterisk config was reload</description>
          <long-description>&gt; Time ticks since Asterisk was last reloaded.</long-description>
          <tag name="return" line="106" description="Time ticks since the Asterisk config was reload" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="118" package="global">
        <name>pid</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::pid()</full_name>
        <docblock line="118">
          <description>Returns the process ID of the Asterisk instance</description>
          <long-description>&gt; The process id of the running Asterisk process.</long-description>
          <tag name="return" line="118" description="The process ID of the Asterisk instance" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="130" package="global">
        <name>controlSocket</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::controlSocket()</full_name>
        <docblock line="130">
          <description>Returns the path for the control socket for giving Asterisk commands</description>
          <long-description>&gt; The control socket for giving Asterisk commands.</long-description>
          <tag name="return" line="130" description="The control socket for giving Asterisk commands" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="142" package="global">
        <name>callsActive</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::callsActive()</full_name>
        <docblock line="142">
          <description>Returns the number of calls currently active on the Asterisk PBX.</description>
          <long-description>&gt; The number of calls currently active on the Asterisk PBX.</long-description>
          <tag name="return" line="142" description="The number of calls currently active on the Asterisk PBX." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="154" package="global">
        <name>callsProcessed</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::callsProcessed()</full_name>
        <docblock line="154">
          <description>Returns the total number of calls processed through the Asterisk PBX since last restart.</description>
          <long-description>&gt; The total number of calls processed through the Asterisk PBX since last restart.</long-description>
          <tag name="return" line="154" description="The total number of calls processed through the Asterisk PBX since last restart." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="166" package="global">
        <name>modules</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk::modules()</full_name>
        <docblock line="166">
          <description>Returns the number of modules currently loaded into Asterisk.</description>
          <long-description>&gt; Number of modules currently loaded into Asterisk.</long-description>
          <tag name="return" line="166" description="The number of modules currently loaded into Asterisk" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="MIB.php" generated-path="MIB.html" hash="f138c2361d3dab2d1913836c2c0935f9" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP" line="44" package="global">
      <extends/>
      <name>MIB</name>
      <full_name>\OSS_SNMP\MIB</full_name>
      <docblock line="44">
        <description>Parent class for all "MIB" extensions.</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <property static="false" visibility="private" namespace="OSS_SNMP" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1VU1v4zYQvftXDIIATQKv3e4x2W4jS4xNQJZcUYrXwAILWaJjtjJpiFS8wWL/e4eU/BEH3fbQ+iKZmnnz3huS8+G37Xrb6w1veoA/X21favG0NnBVXMP7n39534d4yyUw1dQFx0fVGKGkhlBshOFlH4JmWQnZB1rzKpelg/GqChyMhpprXj/zctDrCkiTF+YWRnldv0D8U6Ckes4lvIOlW7nKzTUoLKkPpa5KhWuCO4DDb23M9nY43O12g1fhA8GHba10LTSsRMUBn9u8NqBWYNYcYsa+sGg6w8Xiz/yJd9wSXgptarF0QIBioNGYLEG36u3KUsgcaa5UvdF92AmzBlW7p2qMg9moUqxEkVuQPuQ1hy2v0Sx0C7a1ehYlvph1bhyXlaoqtRPyCQolS9Eqtkkbbm57B8k3Z+y01dLRKlSJ4Y02aLbJka7FzZfq2X7q+nninVRGFLyPUWhLhZgW6rS4LM+YYeGiysWG14MfEMLCJ+bsCaHiskGS/x8naBWfoJWqaDYcN9q+j0NskcKYGja54bXIK31sheuhBT+Vcyo04sLl2hiZb7jl9sNDgXLqM0o2z/VM4JlAYW0hVWtk9AJLbncaSlTAZYmr3G4qZLhRhkNrodGnClEEHipYYUhrmlYrs7P7ptuKoLe8sPsQ04XdobXdgbLdi1o7ie0pmVAGLH5I515CAN9nSfxIAxLAaIEfCfjxbJHQ8SSFSRwGJGHgRQGuRmlCR1ka48KFxzDzwn5oz3+0APJplhDGIE6ATmchRUCskHhRSgnD6yLywyyg0bgPCAJRnEJIpzTFsDTuu8JdmkM8pkL8AFOS+BP8641oSNOFI/RA08jWe8CCHsy8JKV+FnoJzLJkFjMCKM9BBZT5oUenJBggC6wM5JFEKbCJF4ZniuN5RBIr4ZXcEUGu3igkbbFo0eEmxE+tsuObj0YizbAPbEZ8al/IJ4K6vGTR73AZ+T3DIPwIgTf1xoQ5uKt/cAjb5GcJmVrqaAnLRiylaZYSGMdx4HxnJHmkPmF3DjCMmTMvYwRvbS/1HAGEQefYnX0fZYw6D2mUkiTJZimNo2ts+xwdQq4epgaHJseR6zMaFicLC2w9cf3ow3xCcD2x/jrnPGsHQwf99DQMa6Kh6ZleiMg4pGMS+cRGxBZpThm5xhZSZgNoW3ruYd3MybdtQ3btK20d3G/qvmsw0AfwgkdqJXQJuC0Y7baQs9CfdC0Y9G5wiLhDizPiODHu7KTEUXkDMzxr0gDeQVrbCw9ynHkXUzq6AP4VD5p2swgjbfD94c77TyYsAuYNnvL6zRT94Ibo/flA/Ig5w17LFSn2vjl/nJL2iqNSm1wW3Cmx95wbj2r5By+6axrz7QMvk2e8QuHyi5abLfwKsqkqdOUckHFzxBEdevdxH3OPMznfwOe9uZ9d8KUD/rtcuMcZ19TyJAsFgScPge2Qxxvx2JpV1dheCYl3/wrbqV9LsvYWsGpk4eaF5sbiXnVMrl3Qt8Ple2nB333c63dB7QH7/saF8b9x4Y0gF01fyflBQ87YP3Xsz2l3VU7ZH1h/7/0FUa39Rw==</source>
  </file>
  <file path="MIBS/Extreme.php" generated-path="MIBS.Extreme.html" hash="09237de29caea24eddb8d3ceb0d070f2" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>Extreme</name>
      <full_name>\OSS_SNMP\MIBS\Extreme</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on Extreme devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012 - 2013, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1VcFu4zYQvfsrBntpEqh2m96yi3ZlibEJyJIrSvEaWKCQJTomKouuRMcbFP33PlJK4nWB7aX1RTLFefPem+Hwwy+H3WE0mtyMCL9AH55b9bgzdFVe0+0PP97S9/bxk0fJQTYk9LEtJR710SjddBSpvTKy8ig8bmrVeMRbWRdN5dD8uiaH1lErO9k+yWo8GvI0pijNHU2Ltn2m5LtQN/qpaJBt41auCnNNGim711RXlcaakg7g9bcz5nA3mZxOp/FX28dKTvpc2U51tFW1JDwPRWtIb8nsJCVC/CbixRKL5e/Foxy4pbJSnWnVxgERxNCxQ3BDXa/ermxUU4DmVrf7zqOTMjvSrXvqo3Ewe12prSoLC+JR0Uo6yBZmwS06tPpJVXgxu8I4Lltd1/qkmkcqdVOpXrEN2ktzN3qVfHPBrrNaBlqlrrD92BmYbQrQtbjFRj/ZT0NZz7xrtFGl9LALttTAtFDnyZvqghkSl3Wh9rIdf4MQEp+Z80IIiqsjSP5/nKhXfIZW6fK4l2i0lzpOUCKNPS3tCyNbVdTdWylcDS34uZxzobFULtbuaYq9tNy+eSggp72gZONczRTOBIT1iXTbgdEzbaTtNEjUJJsKq9I2FRjutZHUW2i6c4UQgUNFW2zpTev01pxs3wytSN1BlrYPEa5sh7a2A5u+F7vOSexPyZwLEsl9tvJTRnhfpskDD1lI0zU+MgqS5Trls3lG8yQKWSrIj0OsxlnKp3mWYOGdLxD5zn7oz3+8JvZpmTIhKEmJL5YRByAypH6ccSYwLuIgykMezzwCCMVJRhFf8AzbssRziYcwh/gWSsk9LVgazPHXn/KIZ2tH6J5nsc13j4Q+Lf0040Ee+Skt83SZCEaQ56BCLoLI5wsWjsECmYk9sDgjMfej6EJxsopZaiV8JXfKwNWfRqxPFq8H3JQFmVX29hbASNCMPBJLFnD7wj4x6PLTtTfgCvZrjk34SKG/8GdMOLirf3EIZQrylC0sdVgi8qnIeJZnjGZJEjrfBUsfeMDEewcYJcKZlwuGqe1nviMAGDgn3tv3aS6485DHGUvTfJnxJL5G2VdwCFx9hIavRU5iV2cYlqRrC2w9cfXwaDVnWE+tv84539oh4GCQnW9DThiaXeilmM0iPmNxwOyOxCKtuGDXKCEXdgPvU6985M2dfFs2sOtfee/gS1N7rsDE78kPH7iVMASgLQQfWshZGMyHEoxHN7hE3KHFHfF2Y3xe8CnsxK2Ja/MGfYYZ1HV24NmDZeeenU3ubnm4pT+OOKb22DfEvphWYnRU8gmDDkfZxX98nYX/5QUM3OKIIdD+45L94O7Yj5f35c+ImYx6KS9E5RdMi6qjz+fSR3+O8Ptr9DcC/4BJ</source>
  </file>
  <file path="Platforms/vendor_alcatel-lucent.php" generated-path="Platforms.vendor_alcatel-lucent.html" hash="37872d909a8605b37de797c1e6724bb9" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJzdVm1P20gQ/p5fMYeQ4rSOkwClLb3eybEXsqfEznkdKAV0MvaGWDh2zuuQoxX//WbXDnk56IvU00kHAq93Z5555pnx2D//OpvMarXWixrgj5XN7vP4ZlKAFjZgr93Zg6a87OvgzngKLJvnIcdLMi/iLBXQj6dxwSMd7Pl1Eqc60JwnQRo9jbYPvwXhn3MuYBDkKV/w8PY5QzeJoBvcA02juSjymAtlaSYJKEsBORc8v+ORUasw0iIIiyP0yvN7cOt2lmZ3QYoJXKsdLSgakGEW4pG9FmW4F3MFMCmK2VGrtVgsjA0rI+atMoQ/iQWM44QDXmdBXkA2hmLCwWXsD+YMhrgZ3gY3vKLk8SiW3K8VEKAsMBfonIIodZQ713EaILtxlk+FDou4mECWq2s2LxTMNIvicRwGEkSHIOcw4znKjrrDLM/u4ggXxSQoFJdxliTZIk5vIMzSKC4TlU5TXhyVvF5sMRMyj4pSmEVoipKjvkWAVCVmcJ3dyaOqSgoEIM2KOOQ6WqAcCeJJmPWgabTFCIOGSRBPeW48QwQDrgmyJIJZRnMk9+9wgTLLCinKwvmUYy8ta9bCcmR4nsM0KHgeB4lYya7qJYHX01gm5/BY+cnzNJhyyemLjxGmka9RkT6qNjG2OyZTBshygUzu4ZrLbsK0MuBphLtcNg4ym2YFh1KyQiyzQuL4rMAYj0uRRDYuFrIvqlYDMeOh7DN0jWUH5rLD0rLXhFBplU9BjzJg7rF/ZnoEcD303FNqExu653hIwHKH5x496fnQc/s28RiYjo27ju/R7sh3cWPHZOi5Iw/Kx9o5B/Jh6BHGwPWADoZ9ioAYwTMdnxKGg8Wx+iObOic6IAg4rg99OqA+mvmurgJXbgpx5QruMQyIZ/Xw1uzSPvXPFaFj6jsy3jEGNGFoej61Rn3Tg+HIG7qMAKanoGzKrL5JB8Q2kAVGBnJKHB9Yz+z3tzJ2zxziyRQ20u0S5Gp2+6QM5pxXuB6xfJnZamWhkEizrwMbEovKBflAMC/TO9crXEZ+H6ERHoJtDswTwhSc9hWFsEzWyCMDSR0lYaMu86k/8gmcuK6tdGfEO6UWYe8UYN9lSrwRIzjfTd9UBBAGlWPv5Lo7YlRpSB2feN5o6FPXaWDZz1Ah5Gqiq/1YZNdRdUbBXO9cAktNVD10OOsR3Pekvko5U8rBUEHLXzfDmCiov5UvOOSkT0+IYxFp4UqkM8pIA0tImTSgZegzE+OOVPqybMiuXNJSwWVT66rAQI/BtE+pTKFywLZgtGohJaHVq0pg1F7gS6LWasFZlt+Kci6Ie2FzEeYg5uEEAnGE59KkbiY4zXnS7ONQSwt8fbw9bLdbeHndbjet4wEcGgfGvvFqr2147Q6coPImPpUJtN/o8vXYNupP4xy+edVuDvcOvgWgFo81ZHaNc0uD3SVXHdo6dA6gAe/fbweoQ6P2WSm1K0dI8xfBi1M1e7QnTN9tWbpCWrlMHamzLxB48yQBqRS6w+dqqgHOKn7zB87lcILgrS1rzWXGS5SzAdpFu/nWbH4Mmp8utcvGpXH1siFVuRTaBe7hCW7gzWX0sqFX10ujVdcfA6lcVhx3VUyczstcNnMd4Fs00YD/NUtwpe20dlYuF52rxkX76hlPV5zyXE5bbeWwd7VUc9vWxnQ1wC8puJRLH19nGux8fvR8dfXQXN3tb9wdXD3soJb/RL55RG6oMBL1U5ZuB/qotuoj36qvYB6AJ/ITZwzfX9rD7y3tf1bXtVL+r8u4KsbuVGYO79fA5QdvLxOFhMdbxDA6OHMO8f8e/h28xn/V777RqW8IpfrjJz6dFfhdvgRvbJT/GeFLyzWor7fKD+mRb+mTr7dAZ6MFvrcNDjYKv7fdFFtt8INa4cl2eLI49VF6m2aLtP6lHB81+SbrSpF5kmzQKXu09lD7G0VOSW0=</source>
  </file>
  <file path="MIBS/Host.php" generated-path="MIBS.Host.html" hash="2d63e29887a3c58ee526dff4f50dba72" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>Host</name>
      <full_name>\OSS_SNMP\MIBS\Host</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on generic devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1VdFu4zYQfPdXLO6lSaDabR5zh/ZkibEJyJJPlOIzcEAhS3RMVBZdiY4bFPfvHVJK4nOB60trIJBCcWdnZnfJD78edofRaHIzIvwCfXhu1ePO0FV5Tbc//XzrUXKQDQl9bEuJR300SjcdRWqvjKw8Co+bWjUe8VbWRVM5GL+uycF01MpOtk+yGo+GBI0pSnNH06Jtnyn5IdSNfioa+pE2buWqMNekkbJ7TXVVaawp6QBefztjDneTyel0Gn+zfazkpM+V7VRHW1VLwvNQtIb0lsxOUiLEbyJeLLFY/l48yoFbKivVmVZtHBBBDB07BDfU9ertykY1BWhudbvvPDopsyPduqc+Ggez15XaqrKwIB4VraSDbGEW3KJDq59UhRezK4zjstV1rU+qeaRSN5XqFdugvTR3o1fJNxfsOqtloFXqCtuPnYHZpgBdi1ts9JP9NNTzzLtGG1VKD7tgSw1MC3WevKkumCFxWRdqL9vxdwgh8Zk5L4SguDqC5P/HiXrFZ2iVLo97iUZ7qeMEJdLY09K+MLJVRd29lcLV0IKfyzkXGkvlYu2epthLy+27QwE57QUlG+dqpjATENYn0m0HRs+0kbbTIFGTbCqsSttUYLjXRlJvoenOFUIEhoq22NKb1umtOdm+GVqRuoMsbR8iXNkObW0HNn0vdp2T2E/JnAsSyX228lNGeF+myQMPWUjTNT4yCpLlOuWzeUbzJApZKsiPQ6zGWcqneZZg4Z0vEPnOfujnP14T+7xMmRCUpMQXy4gDEBlSP844Ezgu4iDKQx7PPAIIxUlGEV/wDNuyxHOJhzCH+BZKyT0tWBrM8a8/5RHP1o7QPc9im+8eCX1a+mnGgzzyU1rm6TIRjCDPQYVcBJHPFywcgwUyE3tgcUZi7kfRheJkFbPUSvhG7pSBqz+NWJ8sXg+4KQsyq+ztLYCRoBl5JJYs4PaFfWbQ5adrb8AV7FOOTfhIob/wZ0w4uKt/cQhlCvKULSx1WCLyqch4lmeMZkkSOt8FSx94wMR7BxglwpmXC4ZT2898RwAwcE68t+/TXHDnIY8zlqb5MuNJfI2yr+AQuPoIDV+LnMSuzjAsSdcW2Hri6uHRas6wnlp/nXO+tUPAwSA734acMDS70Esxm0V8xuKA2R2JRVpxwa5RQi7sBt6nXvnImzv5tmxg17/y3sGXpvZcgYnfkx8+cCthCEBbCD60kLMwmA8lGI9ucIm4ocUd8XZjfFnwKezEdYn78gZ9hjOo6+yBZwfLnnv2bHJ3y8Mt/XHEmNqxb+hRNngvMbhPOOgwyi7+4+tZ+J/cvAAsjpj+9h+36wd3uX68vCh/Qcxk1GuYa5y68k+cEVVHX84Fj/4ajUZf8fc3Qvd8tA==</source>
  </file>
  <file path="MIBS/System.php" generated-path="MIBS.System.html" hash="47bc2885af62bb0f32665ecb42f728d8" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>System</name>
      <full_name>\OSS_SNMP\MIBS\System</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on generic devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS" line="46" package="global">
        <name>OID_SYSTEM_DESCRIPTION</name>
        <full_name>\OSS_SNMP\MIBS\System::OID_SYSTEM_DESCRIPTION</full_name>
        <value>'.1.3.6.1.2.1.1.1.0'</value>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="47" package="global">
        <name>OID_SYSTEM_OBJECT_ID</name>
        <full_name>\OSS_SNMP\MIBS\System::OID_SYSTEM_OBJECT_ID</full_name>
        <value>'.1.3.6.1.2.1.1.2.0'</value>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="48" package="global">
        <name>OID_SYSTEM_UPTIME</name>
        <full_name>\OSS_SNMP\MIBS\System::OID_SYSTEM_UPTIME</full_name>
        <value>'.1.3.6.1.2.1.1.3.0'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>OID_SYSTEM_CONTACT</name>
        <full_name>\OSS_SNMP\MIBS\System::OID_SYSTEM_CONTACT</full_name>
        <value>'.1.3.6.1.2.1.1.4.0'</value>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="50" package="global">
        <name>OID_SYSTEM_NAME</name>
        <full_name>\OSS_SNMP\MIBS\System::OID_SYSTEM_NAME</full_name>
        <value>'.1.3.6.1.2.1.1.5.0'</value>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="51" package="global">
        <name>OID_SYSTEM_LOCATION</name>
        <full_name>\OSS_SNMP\MIBS\System::OID_SYSTEM_LOCATION</full_name>
        <value>'.1.3.6.1.2.1.1.6.0'</value>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="52" package="global">
        <name>OID_SYSTEM_SERVICES</name>
        <full_name>\OSS_SNMP\MIBS\System::OID_SYSTEM_SERVICES</full_name>
        <value>'.1.3.6.1.2.1.1.7.0'</value>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="59" package="global">
        <name>description</name>
        <full_name>\OSS_SNMP\MIBS\System::description()</full_name>
        <docblock line="59">
          <description>Returns the system description of the device</description>
          <long-description></long-description>
          <tag name="return" line="59" description="The system description of the device" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="80" package="global">
        <name>systemObjectID</name>
        <full_name>\OSS_SNMP\MIBS\System::systemObjectID()</full_name>
        <docblock line="80">
          <description>Returns the system object ID</description>
          <long-description>"The vendor's authoritative identification of the
network management subsystem contained in the
entity.  This value is allocated within the SMI
enterprises subtree (1.3.6.1.4.1) and provides an
easy and unambiguous means for determining `what
kind of box' is being managed.  For example, if
vendor `Flintstones, Inc.' was assigned the
subtree 1.3.6.1.4.1.4242, it could assign the
identifier 1.3.6.1.4.1.4242.1.1 to its `Fred
Router'."</long-description>
          <tag name="return" line="80" description="The system object ID" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="96" package="global">
        <name>uptime</name>
        <full_name>\OSS_SNMP\MIBS\System::uptime()</full_name>
        <docblock line="96">
          <description>Returns the system uptime of the device</description>
          <long-description>"The time (in hundredths of a second) since the
network management portion of the system was last
re-initialized."</long-description>
          <tag name="return" line="96" description="The system uptime of the device (in timeticks)" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="106" package="global">
        <name>contact</name>
        <full_name>\OSS_SNMP\MIBS\System::contact()</full_name>
        <docblock line="106">
          <description>Returns the system contact of the device</description>
          <long-description></long-description>
          <tag name="return" line="106" description="The system contact of the device" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="116" package="global">
        <name>name</name>
        <full_name>\OSS_SNMP\MIBS\System::name()</full_name>
        <docblock line="116">
          <description>Returns the system name of the device</description>
          <long-description></long-description>
          <tag name="return" line="116" description="The system name of the device" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="126" package="global">
        <name>location</name>
        <full_name>\OSS_SNMP\MIBS\System::location()</full_name>
        <docblock line="126">
          <description>Returns the system location of the device</description>
          <long-description></long-description>
          <tag name="return" line="126" description="The system location of the device" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="161" package="global">
        <name>services</name>
        <full_name>\OSS_SNMP\MIBS\System::services()</full_name>
        <docblock line="161">
          <description>Returns the system services of the device</description>
          <long-description>"A value which indicates the set of services that
this entity primarily offers.

The value is a sum.  This sum initially takes the
value zero, Then, for each layer, L, in the range
1 through 7, that this node performs transactions
for, 2 raised to (L - 1) is added to the sum.  For
example, a node which performs primarily routing
functions would have a value of 4 (2^(3-1)).  In
contrast, a node which is a host offering
application services would have a value of 72
(2^(4-1) + 2^(7-1)).  Note that in the context of
the Internet suite of protocols, values should be
calculated accordingly:

    layer  functionality
        1  physical (e.g., repeaters)
        2  datalink/subnetwork (e.g., bridges)
        3  internet (e.g., IP gateways)
        4  end-to-end  (e.g., IP hosts)
        7  applications (e.g., mail relays)

For systems including OSI protocols, layers 5 and
6 may also be counted."</long-description>
          <tag name="return" line="161" description="The system services of the device" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="175" package="global">
        <name>getAll</name>
        <full_name>\OSS_SNMP\MIBS\System::getAll()</full_name>
        <docblock line="175">
          <description>Gets all system values as an associate array</description>
          <long-description>The keys of the array are contact, description, location,
    name, services, uptime</long-description>
          <tag name="return" line="175" description="All system values as an associate array" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="MIBS/Bridge.php" generated-path="MIBS.Bridge.html" hash="fed345505e7f1d1577d84f78ae94d5be" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>Bridge</name>
      <full_name>\OSS_SNMP\MIBS\Bridge</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on generic devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS" line="46" package="global">
        <name>OID_BRIDGE_BASE_PORT_IF_INDEX</name>
        <full_name>\OSS_SNMP\MIBS\Bridge::OID_BRIDGE_BASE_PORT_IF_INDEX</full_name>
        <value>'.1.3.6.1.2.1.17.1.4.1.2'</value>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="56" package="global">
        <name>basePortIfIndexes</name>
        <full_name>\OSS_SNMP\MIBS\Bridge::basePortIfIndexes()</full_name>
        <docblock line="56">
          <description>Returns an associate array of STP port IDs (key) to interface IDs (value)</description>
          <long-description>e.g.  [22] =&gt; 10122</long-description>
          <tag name="return" line="56" description="Associate array of STP port IDs (key) to interface IDs (value)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1VmFv2zYQ/e5fcSgG1A4ce/GGDUjbrLLE2ARkyRPlpMY6BLJE20Rl0ZPkuEGx/75HSkncDOi+dEFi0dTx3bt3x7u8/W2/3Xc6w7MO4cfV+4dSbbY1ddMejX68GPUp3MuChD6UqcQjP9RKFxX5aqdqmfXJO6xyVfSJlzJPiszCOHlOFqaiUlayvJfZoNM6KOokrS9pnJTlA4WvPV3o+6Sgc1rZnW5S90jDZfXkqptp7ClpAZ5+tnW9vxwOj8fj4CvzgZLDxle8VRWtVS4Jz31S1qTXVG8lhULciWA2x2b6KdnIllskM1XVpVpZIEIwdKhwuKCqid7srFSRgOZal7uqT0dVb0mX9qkPtYXZ6UytVZoYkD4lpaS9LCEW1KJ9qe9VhkW9TWrLZa3zXB9VsaFUF5lqIjaHdrK+7DyFfPaCXWViaWmlOoP5oaohdp2ArsFNVvrevGrzeaJdoWuVyj6sIEsOTAN16rzIXjCD4zRP1E6Wg28QguMTcR4JIeLsAJL/HydqIj5By3R62EkU2mMeh0iRhk1Ju6SWpUry6jkVNocG/DSc00ADqexZY1MkO2m4ffNSIJzyBSVzzuZM4U4gsMaRLisweqCVNJWGEDXJIsOuNEUFhjtdS2okrKvTCBEELhWtYdKIVul1fTR105YiVXuZmjrEcWUqtDQVWDS1WFU2xOaWTLkgEV7Ht07ECOt5FN5wj3k0XuIlIzecLyM+mcY0DX2PRYKcwMNuEEd8vIhDbLxyBE6+Mi+a+x8siX2YR0wICiPis7nPAQgPkRPEnAm0i8D1Fx4PJn0CCAVhTD6f8Rhmcdi3jttjFvH5KIXXNGORO8VXZ8x9Hi8toWseB8bfNRw6NHeimLsL34lovojmoWCE8CyUx4XrO3zGvAFYwDOxGxbEJKaO77+IOLwNWGRC+CrcMQNXZ+yzxlmwbHEj5sYmsueVCyFB0++TmDOXmwX7wBCXEy37La5gvy9ghJfkOTNnwoSF6/6HQkiTu4jYzFCHJGIxFjGPFzGjSRh6VnfBohvuMvHGAvqhsOItBEPXdmLHEgAMlBNvzHq8ENxqyIOYRdFiHvMw6CHtt1AIXB0c9Z6SHAY2zxAsjJYG2Ghi89Gn2ynDfmT0tco5Rg4BBd341Aw+IWj8Il4K2MTnExa4zFiEBumWC9ZDCrkwBrxxfevA78KGb9IGds2SNwo+FnXfJpj4NTneDTchtAdQFoK3JWQldKdtCgadMwwRe2kxI54nxscZH0NOjEvMyzPUGXpQVZmGZy6W6XumN9nZcjOivw64pubaF7SRBdYpLu49Gh2usj3//qkXfpfJC8DkgNtf/mu6vrXD9f3LQXmFM8NOE8O4VNlGkvyMLpFV9PE05M4XKyj6FjpzyL27ccS9CbsbO4LdzZHBO359h7pnH+gdvR5cDH4a/ILPEf4ufsXHz+bL6zdNw7HaPY6Q+lDa9k6goFOF7ozhV6IlolWKGBNaY2xzD/8EfJIPPdMgVYEOvjZJsdv3SX6QvRbwEVcONgOiP0ajP+ndFV1AzNHXFo+G70vLoPXpfA8OQ/vcm9yktD4UqR1Cq6SSc+DwNS8y+VlW3cb+y1NTb5n8YLr5+dVG1kb8bu/86pjkny6yLlUyX19eflv9XnPV/+508Nv5B0J/9Lo=</source>
  </file>
  <file path="Platforms/vendor_juniper.php" generated-path="Platforms.vendor_juniper.html" hash="f373e3df43eb14632ddc33dd3f020aca" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1VW1v4jgQ/s6vGKFKhW54bXdPZW/vFBIXvAoJFyel7Mut0sSAVUhQHNrrVv3vN3aAUq6n+3QgEWPPPPPMM+PJr7+vF+tKpXVWAfwECyFhJpYc8LmO8gKyGRQLDh5jP5g7GuNmfBfNebOi7X2eCFnk4nZTiCyFKE1gI9E5BZlt8pjrnVuRRvkjzLJ8JQ14EMUCslw/s02hYVZZImYijhSIAVHOYc3zlSgKnsA6z+5FgotiERWayyxbLrMHkc4hztJEKCepnVa86JW8zo6YSZXHllKcJWi6kQXkvIiQqsKMbrN7dbR+zMV8UbICSLNCxNxAC5RjiXgK5jBomhwxwqDxMhIrnjf/hQgGPBBkRwSzTDZI7v/hAmWWW6QkizcrnhbRrmYtLEeG5zmsooLnIlrKF9l1vRTwYRq75FwutJ86T6MVV5y8NU+BlVqzbLlN2xFYT4RLs/yAivLRtRGFVMmUAbJcIpNHuOWqmzCtDHia4C5XjYPMVlnBoZSskLuskPg9Gs/wuBRJZrPiQfXFttVArnms+gxdherAXHVYWvaalDqt8hYMKQPmXQUT0yeA67HvXVOb2NCf4iEByxtPfToYBjD0HJv4DEzXxl038Gk/DDzcqJoMPavqQGOa7hTIzdgnjIHnAx2NHYqAGME33YASZgB1LSe0qTswAEHA9QJw6IgGaBZ4hg68ddOIL67gXcGI+NYQ/5p96tBgqgld0cBV8a4woAlj0w+oFTqmD+PQH3uMAKanoWzKLMekI2I3kQVGBnJN3ADY0HSco4y9iUt8lcKrdPsEuZp9h5TB3OkW1ydWoDJ7WVkoJNJ0DGBjYlG1IDcE8zL9qbHFZeSPEI3wEGxzZA4I03C1/1AIy2SFPhkp6igJC/ssoEEYEBh4nq11Z8S/phZhHzWg4zEtXsiIgZECUxNAGFSOfVTrfsio1pC6AfH9cBxQz61j2SeoEHI10dXeF9lzdZ1RMM+fKmClia6HAZMhwX1f6auVM5UcDBW0gkMzjImCBkf5gksGDh0Q1yLKwlNIE8pIHUtImTKgZeiJiXFDnb4qG7Irl7RUcNfUhi4w0Csw7WuqUtg6YFswum0hLaE13JagWTlr4XuiBdd40WYCb1o0x+mJc4j5Nw09fgg+JZ7ilU74PU4rifbKhUWrNb5T5KO0uYzzntqrft6kAq8ezpDiIcvv8NVA07gJ/K+L9+1246I9A6JmS8oxAt7geGHAnfq7hM+h6zHodJvn/nnzAnthI5YJJDi7etBtd84b7Q+NzgW0O73zX3qdSwgDC6zdOIVaXIfO5eWHhjKFt1lUKxUxq4Hc3OLMq8HJjrkBbQO6XajDp09w+rbvKdQrT1rtdc7nP3CkxosanLZqx+b1bca1r39+k9/f1aF5tstwv6UXBq5ap8YhjRMNi0LXy04+UROv8ZvkxbUelbW9xdfO938ajfAduDyw6b5h48kDg/M3DbAV1Ng8sLvQdtpQCfhagcM61b4l5bex/6mXm739j0rfbHyJGj/fECDBItR1oKftG+A1NxvD1CDlD/BNLQN8D9ag+nSSoCDPoJ5dfL5rt3vtdrW+y+4AZb5HqWtIhfAzS49Bv+gthFMS7WCeK8+Vyt9sgM+n</source>
  </file>
  <file path="MIBS/Cisco/MST.php" generated-path="MIBS.Cisco.MST.html" hash="db83c15d1de741b398a8b093bbd72466" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Cisco" line="44" package="global">
      <extends>\OSS_SNMP\MIBS\Cisco</extends>
      <name>MST</name>
      <full_name>\OSS_SNMP\MIBS\Cisco\MST</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on Cisco devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012 - 2013, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="47" package="global">
        <name>OID_STP_X_MST_MAX_INSTANCE_NUMBER</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\MST::OID_STP_X_MST_MAX_INSTANCE_NUMBER</full_name>
        <value>'.1.3.6.1.4.1.9.9.82.1.11.1.0'</value>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="48" package="global">
        <name>OID_STP_X_MST_REGION_NAME</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\MST::OID_STP_X_MST_REGION_NAME</full_name>
        <value>'.1.3.6.1.4.1.9.9.82.1.11.2.0'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="49" package="global">
        <name>OID_STP_X_MST_REGION_REVISION</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\MST::OID_STP_X_MST_REGION_REVISION</full_name>
        <value>'.1.3.6.1.4.1.9.9.82.1.11.3.0'</value>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS\Cisco" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="64" package="global">
        <name>maxInstanceNumber</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\MST::maxInstanceNumber()</full_name>
        <docblock line="64">
          <description>Returns the maximum MST instance number</description>
          <long-description>&gt; "The maximum MST (Multiple Spanning Tree) instance id,
&gt; that can be supported by the device for Cisco proprietary
&gt; implementation of the MST Protocol.
&gt;
&gt; This object is deprecated and replaced by stpxSMSTMaxInstanceID."</long-description>
          <tag name="deprecated" line="64" description="Use \OSS_SNMP\MIBS\Cisco\SMST::maxInstanceID()"/>
          <tag name="return" line="64" description="The maximum MST instance number" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="74" package="global">
        <name>regionName</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\MST::regionName()</full_name>
        <docblock line="74">
          <description>Returns the operational MST region name.</description>
          <long-description></long-description>
          <tag name="return" line="74" description="The operational MST region name" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="85" package="global">
        <name>regionRevision</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\MST::regionRevision()</full_name>
        <docblock line="85">
          <description>Returns the operational MST region revision.</description>
          <long-description></long-description>
          <tag name="deprecated" line="85" description="Use \OSS_SNMP\MIBS\Cisco\SMST::regionRevision()"/>
          <tag name="return" line="85" description="The operational MST region revision" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="116" package="global">
        <name>portRoles</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\MST::portRoles()</full_name>
        <docblock line="116">
          <description>Get the device's MST port roles (by given instance id)</description>
          <long-description>Only ports participating in MST for the given instance id are returned.

&gt; "An entry containing the port role information for the RSTP
&gt; protocol on a port for a particular Spanning Tree instance."

The original OIDs for this are deprecated:

&gt; stpxMSTPortRoleTable - 1.3.6.1.4.1.9.9.82.1.11.12
&gt;
&gt; "A table containing a list of the bridge ports for a
&gt; particular MST instance. This table is only instantiated
&gt; when the stpxSpanningTreeType is mst(4).
&gt;
&gt; This table is deprecated and replaced with
&gt; stpxRSTPPortRoleTable."</long-description>
          <tag name="see" line="116" description="" link="\OSS_SNMP\MIBS\Cisco\RSTP::portRoles()"/>
          <tag name="param" line="116" description="&lt;p&gt;The MST instance ID to query port roles for&lt;/p&gt;" type="int" variable="$iid">
            <type>int</type>
          </tag>
          <tag name="param" line="116" description="&lt;p&gt;If true, return the string representation via RSTP::$STP_X_RSTP_PORT_ROLES&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="116" description="The device's MST port roles (by given instance id)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$iid</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="MIBS/Foundry/Chassis.php" generated-path="MIBS.Foundry.Chassis.html" hash="9c083b06b8b8c3ef1f65f8663c74dbf3" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Foundry" line="44" package="global">
      <extends>\OSS_SNMP\MIBS\Foundry</extends>
      <name>Chassis</name>
      <full_name>\OSS_SNMP\MIBS\Foundry\Chassis</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on Foundry devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2013, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="47" package="global">
        <name>OID_ACTUAL_TEMPERATURE</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_ACTUAL_TEMPERATURE</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.1.1.18.0'</value>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="48" package="global">
        <name>OID_WARNING_TEMPERATURE</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_WARNING_TEMPERATURE</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.1.1.19.0'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="49" package="global">
        <name>OID_SHUTDOWN_TEMPERATURE</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_SHUTDOWN_TEMPERATURE</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.1.1.20.0'</value>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="51" package="global">
        <name>OID_PSU_DESCRIPTION</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_PSU_DESCRIPTION</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.1.2.1.1.2'</value>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="52" package="global">
        <name>OID_PSU_STATE</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_PSU_STATE</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.1.2.1.1.3'</value>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="54" package="global">
        <name>OID_FAN_DESCRIPTION</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_FAN_DESCRIPTION</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.1.3.1.1.2'</value>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="55" package="global">
        <name>OID_FAN_STATE</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_FAN_STATE</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.1.3.1.1.3'</value>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="57" package="global">
        <name>OID_CPU_1SEC_UTILISATION</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_CPU_1SEC_UTILISATION</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.2.1.50.0'</value>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="58" package="global">
        <name>OID_CPU_5SEC_UTILISATION</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_CPU_5SEC_UTILISATION</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.2.1.51.0'</value>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="59" package="global">
        <name>OID_CPU_1MIN_UTILISATION</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_CPU_1MIN_UTILISATION</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.2.1.52.0'</value>
        <docblock line="59">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="61" package="global">
        <name>OID_MEMORY_UTILISATION</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_MEMORY_UTILISATION</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.2.1.53.0'</value>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="62" package="global">
        <name>OID_MEMORY_TOTAL</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_MEMORY_TOTAL</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.2.1.54.0'</value>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="63" package="global">
        <name>OID_MEMORY_FREE</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_MEMORY_FREE</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.2.1.55.0'</value>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="66" package="global">
        <name>OID_GLOBAL_QUEUE_OVERFLOW</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_GLOBAL_QUEUE_OVERFLOW</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.2.1.30.0'</value>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="67" package="global">
        <name>OID_GLOBAL_BUFFER_SHORTAGE</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_GLOBAL_BUFFER_SHORTAGE</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.2.1.31.0'</value>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="68" package="global">
        <name>OID_GLOBAL_DMA_FAILURE</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_GLOBAL_DMA_FAILURE</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.2.1.32.0'</value>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="69" package="global">
        <name>OID_GLOBAL_RESOURCE_LOW</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_GLOBAL_RESOURCE_LOW</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.2.1.33.0'</value>
        <docblock line="69">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="70" package="global">
        <name>OID_GLOBAL_EXCESSIVE_ERROR</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_GLOBAL_EXCESSIVE_ERROR</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.2.1.34.0'</value>
        <docblock line="70">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="72" package="global">
        <name>OID_SERIAL_NUMBER</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::OID_SERIAL_NUMBER</full_name>
        <value>'.1.3.6.1.4.1.1991.1.1.1.1.2.0'</value>
        <docblock line="72">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="140" package="global">
        <name>PSU_STATE_OTHER</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::PSU_STATE_OTHER</full_name>
        <value>1</value>
        <docblock line="140">
          <description>Constant for possible value of chassis PSU state - other (1)</description>
          <long-description></long-description>
          <tag name="see" line="140" description="" link="\OSS_SNMP\MIBS\Foundry\psuStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="146" package="global">
        <name>PSU_STATE_NORMAL</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::PSU_STATE_NORMAL</full_name>
        <value>2</value>
        <docblock line="146">
          <description>Constant for possible value of chassis PSU state - normal (2)</description>
          <long-description></long-description>
          <tag name="see" line="146" description="" link="\OSS_SNMP\MIBS\Foundry\psuStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="152" package="global">
        <name>PSU_STATE_FAILURE</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::PSU_STATE_FAILURE</full_name>
        <value>3</value>
        <docblock line="152">
          <description>Constant for possible value of chassis PSU state - failure (3)</description>
          <long-description></long-description>
          <tag name="see" line="152" description="" link="\OSS_SNMP\MIBS\Foundry\psuStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="200" package="global">
        <name>FAN_STATE_OTHER</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::FAN_STATE_OTHER</full_name>
        <value>1</value>
        <docblock line="200">
          <description>Constant for possible value of chassis fan state - other (1)</description>
          <long-description></long-description>
          <tag name="see" line="200" description="" link="\OSS_SNMP\MIBS\Foundry\fanStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="206" package="global">
        <name>FAN_STATE_NORMAL</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::FAN_STATE_NORMAL</full_name>
        <value>2</value>
        <docblock line="206">
          <description>Constant for possible value of chassis fan state - normal (2)</description>
          <long-description></long-description>
          <tag name="see" line="206" description="" link="\OSS_SNMP\MIBS\Foundry\fanStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Foundry" line="212" package="global">
        <name>FAN_STATE_FAILURE</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::FAN_STATE_FAILURE</full_name>
        <value>3</value>
        <docblock line="212">
          <description>Constant for possible value of chassis fan state - failure (3)</description>
          <long-description></long-description>
          <tag name="see" line="212" description="" link="\OSS_SNMP\MIBS\Foundry\fanStates()"/>
        </docblock>
      </constant>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="160" package="global">
        <name>$PSU_STATES</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::PSU_STATES</full_name>
        <default>array(self::PSU_STATE_OTHER =&gt; 'other', self::PSU_STATE_NORMAL =&gt; 'normal', self::PSU_STATE_FAILURE =&gt; 'failure')</default>
        <docblock line="160">
          <description>Text representation of PSU states</description>
          <long-description></long-description>
          <tag name="see" line="160" description="" link="\OSS_SNMP\MIBS\Foundry\psuStates()"/>
          <tag name="var" line="160" description="&lt;p&gt;Text representations of PSU states&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="220" package="global">
        <name>$FAN_STATES</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::FAN_STATES</full_name>
        <default>array(self::FAN_STATE_OTHER =&gt; 'other', self::FAN_STATE_NORMAL =&gt; 'normal', self::FAN_STATE_FAILURE =&gt; 'failure')</default>
        <docblock line="220">
          <description>Text representation of fan states</description>
          <long-description></long-description>
          <tag name="see" line="220" description="" link="\OSS_SNMP\MIBS\Foundry\fanStates()"/>
          <tag name="var" line="220" description="&lt;p&gt;Text representations of fan states&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS\Foundry" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="85" package="global">
        <name>actualTemperature</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::actualTemperature()</full_name>
        <docblock line="85">
          <description>Get the device's chassis temperature</description>
          <long-description>&gt; "Temperature of the chassis. Each unit is 0.5 degrees Celcius.
&gt; Only management module built with temperature sensor hardware
&gt; is applicable. For those non-applicable management module, it
&gt; returns no-such-name."</long-description>
          <tag name="return" line="85" description="The device's chassis temperature" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="102" package="global">
        <name>warningTemperature</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::warningTemperature()</full_name>
        <docblock line="102">
          <description>Get the device's chassis temperature warning threshold</description>
          <long-description>&gt; "Actual temperature higher than this threshold value will trigger
&gt; the switch to send a temperature warning trap. Each unit is 0.5
&gt; degrees Celcius. Only management module built with temperature
&gt; sensor hardware is applicable. For those non-applicable management
&gt; module, it returns no-such-name."</long-description>
          <tag name="return" line="102" description="The device's chassis temperature warning threshold" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="119" package="global">
        <name>shutdownTemperature</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::shutdownTemperature()</full_name>
        <docblock line="119">
          <description>Get the device's chassis shutdown temperature</description>
          <long-description>&gt; "Actual temperature higher than this threshold value will shutdown
&gt; a partial of the switch hardware to cool down the system. Each unit
&gt; is 0.5 degrees Celcius. Only management module built with temperature
&gt; sensor hardware is applicable. For those non-applicable management
&gt; module, it returns no-such-name"</long-description>
          <tag name="return" line="119" description="The device's chassis shutdown temperature" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="130" package="global">
        <name>psuDescriptions</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::psuDescriptions()</full_name>
        <docblock line="130">
          <description>Get the descriptions of the chassis' PSUs</description>
          <long-description></long-description>
          <tag name="return" line="130" description="Descriptions of the chassis' PSUs" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="175" package="global">
        <name>psuStates</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::psuStates()</full_name>
        <docblock line="175">
          <description>Get the device's PSU states</description>
          <long-description></long-description>
          <tag name="see" line="175" description="" link="\OSS_SNMP\MIBS\Foundry\$PSU_STATES"/>
          <tag name="param" line="175" description="&lt;p&gt;If true, return the string representation via self::$PSU_STATES&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="175" description="The device's PSU states" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="190" package="global">
        <name>fanDescriptions</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::fanDescriptions()</full_name>
        <docblock line="190">
          <description>Get the descriptions of the chassis' fans</description>
          <long-description></long-description>
          <tag name="return" line="190" description="Descriptions of the chassis' fans" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="235" package="global">
        <name>fanStates</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::fanStates()</full_name>
        <docblock line="235">
          <description>Get the device's fan states</description>
          <long-description></long-description>
          <tag name="see" line="235" description="" link="\OSS_SNMP\MIBS\Foundry\$FAN_STATES"/>
          <tag name="param" line="235" description="&lt;p&gt;If true, return the string representation via self::$FAN_STATES&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="235" description="The device's fan states" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="252" package="global">
        <name>cpu1secUtilisation</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::cpu1secUtilisation()</full_name>
        <docblock line="252">
          <description>Get the device's CPU utilisation - 1 sec average</description>
          <long-description></long-description>
          <tag name="return" line="252" description="The device's CPU utilisation - 1 sec average" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="262" package="global">
        <name>cpu5secUtilisation</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::cpu5secUtilisation()</full_name>
        <docblock line="262">
          <description>Get the device's CPU utilisation - 5 sec average</description>
          <long-description></long-description>
          <tag name="return" line="262" description="The device's CPU utilisation - 5 sec average" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="272" package="global">
        <name>cpu1minUtilisation</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::cpu1minUtilisation()</full_name>
        <docblock line="272">
          <description>Get the device's CPU utilisation - 1 min average</description>
          <long-description></long-description>
          <tag name="return" line="272" description="The device's CPU utilisation - 1 min average" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="290" package="global">
        <name>serialNumber</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::serialNumber()</full_name>
        <docblock line="290">
          <description>Get the device's serial number</description>
          <long-description>&gt; The serial number of the chassis. If the
&gt; serial number is unknown or unavailable then
&gt; the value should be a zero length string.</long-description>
          <tag name="see" line="290" description="" link="\OSS_SNMP\MIBS\Foundry\http://www.mibdepot.com/cgi-bin/getmib3.cgi?win=mib_a&amp;amp;i=1&amp;amp;n=FOUNDRY-SN-AGENT-MIB&amp;amp;r=foundry&amp;amp;f=sn_agent.mib&amp;amp;v=v1&amp;amp;t=sca&amp;amp;o=snChasSerNum"/>
          <tag name="return" line="290" description="The chassis serial number" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="304" package="global">
        <name>memoryUtilisation</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::memoryUtilisation()</full_name>
        <docblock line="304">
          <description>Get the device's dynamic memory utilisation (percentage)</description>
          <long-description>&gt; "The system dynamic memory utilization, in unit of percentage"</long-description>
          <tag name="return" line="304" description="The device's dynamic memory usage utilisation" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="314" package="global">
        <name>memoryTotal</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::memoryTotal()</full_name>
        <docblock line="314">
          <description>Get the device's total memory capacity (bytes)</description>
          <long-description></long-description>
          <tag name="return" line="314" description="The device's total memory capacity (bytes)" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="324" package="global">
        <name>memoryFree</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::memoryFree()</full_name>
        <docblock line="324">
          <description>Get the device's dynamic memory available / free (bytes)</description>
          <long-description></long-description>
          <tag name="return" line="324" description="The device's dynamic memory available / free (bytes)" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="335" package="global">
        <name>isQueueOverflow</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::isQueueOverflow()</full_name>
        <docblock line="335">
          <description>Are the device queues in overflow?</description>
          <long-description></long-description>
          <tag name="return" line="335" description="Queues in overflow" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="345" package="global">
        <name>isBufferShortage</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::isBufferShortage()</full_name>
        <docblock line="345">
          <description>Is the device buffers adequate</description>
          <long-description></long-description>
          <tag name="return" line="345" description="Buffers adequate" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="355" package="global">
        <name>isDMAFailure</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::isDMAFailure()</full_name>
        <docblock line="355">
          <description>Are the device's DMAs in good condition?</description>
          <long-description></long-description>
          <tag name="return" line="355" description="DMAs in failure condition?" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="365" package="global">
        <name>isResourceLow</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::isResourceLow()</full_name>
        <docblock line="365">
          <description>Does the device have a resource low warning?</description>
          <long-description></long-description>
          <tag name="return" line="365" description="Does the device have a resource low warning?" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="375" package="global">
        <name>isExcessiveError</name>
        <full_name>\OSS_SNMP\MIBS\Foundry\Chassis::isExcessiveError()</full_name>
        <docblock line="375">
          <description>Does the device have any excessive collision, FCS errors, alignment warning etc.</description>
          <long-description></long-description>
          <tag name="return" line="375" description="Does the device have any excessive collision, FCS errors, alignment warning etc." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Foundry" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Cache.php" generated-path="Cache.html" hash="7ff45107dca47e5732b52161b9104323" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="true" namespace="OSS_SNMP" line="48" package="global">
      <extends/>
      <name>Cache</name>
      <full_name>\OSS_SNMP\Cache</full_name>
      <docblock line="48">
        <description>An abstract cache for storing results of SNMP queries .</description>
        <long-description>See the implementation in \OSS_SNMP\Cache\Basic for proper examples and documentation.</long-description>
        <tag name="see" line="48" description="" link="\OSS_SNMP\Cache\Basic"/>
        <tag name="copyright" line="48" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="48" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP" line="51" package="global">
        <name>save</name>
        <full_name>\OSS_SNMP\Cache::save()</full_name>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$varName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$varValue</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP" line="52" package="global">
        <name>load</name>
        <full_name>\OSS_SNMP\Cache::load()</full_name>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$varName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP" line="53" package="global">
        <name>clear</name>
        <full_name>\OSS_SNMP\Cache::clear()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$varName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP" line="54" package="global">
        <name>clearAll</name>
        <full_name>\OSS_SNMP\Cache::clearAll()</full_name>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="51" code="PPC:ERR-50015">Argument $varName is missing from the Docblock of save()</error>
      <error line="51" code="PPC:ERR-50015">Argument $varValue is missing from the Docblock of save()</error>
      <error line="51" code="PPC:ERR-50008">No summary for method save()</error>
      <error line="52" code="PPC:ERR-50015">Argument $varName is missing from the Docblock of load()</error>
      <error line="52" code="PPC:ERR-50008">No summary for method load()</error>
      <error line="53" code="PPC:ERR-50015">Argument $varName is missing from the Docblock of clear()</error>
      <error line="53" code="PPC:ERR-50008">No summary for method clear()</error>
      <error line="54" code="PPC:ERR-50008">No summary for method clearAll()</error>
    </parse_markers>
    <source>eJy1VtFu4zYQfPdXLA4FmgRq0t5jcmhPlpiYgCy5opycgQAFLdExUVl0Jcq5oOi/d0g5sZMWd0XR+kUMyZ3dmV3u5sNP2/V2NLo4GxF+kdk+tfphbemkPKX33//wPqBsqxoSpm9LhU/dW22ajhK90VZVAcX9stZNQLxVtWwqDxPWNXmYjlrVqXanqvPR3kFjZWkvaSzb9omyb2PTmJ1s6Dta+p0TaU/JwGX34uqkMtjTygO8/NbWbi8vLh4fH89fXT/X6mLwVax1RytdK8J3K1tLZkV2rSgT4heRTmfYLH+VD2ofW64q3dlWLz0QgQz1HYwb6gb2bmepG4kwV6bddAE9arsm0/qv6a2H2ZhKr3QpHUhAslW0VS3Eglq0bc1OV1jYtbQ+lpWpa/OomwcqTVPpgbEz2ih7OXqhfPYmus5x2YdVmgrX+85CbCsRrsOVS7NzR/t8HmnXGKtLFeAWZKmB6aCOnTfVm8jguKyl3qj2/AsBwfGROM8BgXHVI8j/LyYaGB+hVabsNwqF9pzHC6TI4E5LG2lVq2XdHVLhc+jAj+kcE02V9rbuTiM3ysX2xUcBOu2bkJydz5nGmwCxwZFpO0T0REvlKg0UDammwq5yRYUIN8YqGiS03TFDkMCjohWuDKJ1ZmUfXd3sS5G6rSpdHcJcuwptXQU2Qy12nac4vJIJFySy6+IuzBlhPcuzWx6zmMYLHDKKstki5zeTgiZZErNcUJjG2E2LnI/nRYaNd6GA5Tt3MLz/dEHs0yxnQlCWE5/OEg5AeMjDtOBMoF2kUTKPeXoTEEAozQpK+JQXuFZkgXe8N/OIB1PKrmnK8miCP8MxT3ix8AFd8yJ1/q7hMKRZmBc8midhTrN5PssEI9DzUDEXURLyKYvPEQU8E7tlaUFiEibJG8bZXcpyR+EV3TFDrOE4YYOzdLHHzVlUOGaHVQQhEWYSkJixiLsF+8TAK8wXwR5XsJ/nuIRDisNpeMOEhzv5ikJIUzTP2dSFDknEfCwKXswLRjdZFnvdBctvecTElQdMMuHFmwuGrh0WoQ8AMFBOXLn1eC6415CnBcvz+azgWXqKtN9BIcQawjR+SXKW+jxDsCxfOGCnic9HQHcThv3c6euVC50cAgpGxfE1+ISgxRu+lLKbhN+wNGLuRuaQ7rhgp0ghF+4CH1zfhfA79/Rd2hDdsOSDgs9FHfgEE7+mML7ljsLeAGUh+L6EvITRZJ+C89EZhoh/tJgRh4lxNXKjErPyjEJ0liUaBqYZlbL0zamlDm/atSeMvb62/sX7SfNbjxeLDoC+4q2FGlqi3mxrdehVaGX3z77uI4d6P5YdHvFq6Ad4vaQ+S2c0NMVXre4Z/GMH9L/F8acvDfg/GfcAlD1aTvuXkf7BT/SPb6fzj7C5GB20q2XXkY9x9PvQkl7OwNiq0nXUVd+UXqFO7tQJfbOTbYrsBH51K+te0enVV41rI6uD8T+xKGsl239hgv+ATnB39AcK5k9DJ+Zk</source>
  </file>
  <file path="MIBS/Cisco.php" generated-path="MIBS.Cisco.html" hash="f3a08ae95fcbbf3be1843b8c31e970fb" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>Cisco</name>
      <full_name>\OSS_SNMP\MIBS\Cisco</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on Cisco devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1VcFu4zYQvfsrBntpEqh2m2N20a4sMTYBWfKKUrwGFihkiY6JyqIr0XGDYv+9j5SSeF1ge2l9kUxx3rz3Zob88OthdxiNJjcjwi/Qh+dWPe4MXZXXdPvTz7ceJQfZkNDHtpR41EejdNNRpPbKyMqj8LipVeMRb2VdNJWD8euaHExHrexk+ySr8WhI0JiiNHc0Ldr2mZIfQt3op6KhH2njVq4Kc00aKbvXVFeVxpqSDuD1tzPmcDeZnE6n8Tfbx0pO+lzZTnW0VbUkPA9Fa0hvyewkJUL8JuLFEovl78WjHLilslKdadXGARHE0LFDcENdr96ubFRTgOZWt/vOo5MyO9Kte+qjcTB7XamtKgsL4lHRSjrIFmbBLTq0+klVeDG7wjguW13X+qSaRyp1U6lesQ3aS3M3epV8c8Gus1oGWqWusP3YGZhtCtC1uMVGP9lPQz3PvGu0UaX0sAu21MC0UOfJm+qCGRKXdaH2sh1/hxASn5nzQgiKqyNI/n+cqFd8hlbp8riXaLSXOk5QIo09Le0LI1tV1N1bKVwNLfi5nHOhsVQu1u5pir203L47FJDTXlCyca5mCjMBYX0i3XZg9EwbaTsNEjXJpsKqtE0FhnttJPUWmu5cIURgqGiLLb1pnd6ak+2boRWpO8jS9iHCle3Q1nZg0/di1zmJ/ZTMuSCR3GcrP2WE92WaPPCQhTRd4yOjIFmuUz6bZzRPopClgvw4xGqcpXyaZwkW3vkCke/sh37+4zWxz8uUCUFJSnyxjDgAkSH144wzgeMiDqI85PHMI4BQnGQU8QXPsC1LPJd4CHOIb6GU3NOCpcEcf/0pj3i2doTueRbbfPdI6NPSTzMe5JGf0jJPl4lgBHkOKuQiiHy+YOEYLJCZ2AOLMxJzP4ouFCermKVWwjdypwxc/WnE+mTxesBNWZBZZW9vAYwEzcgjsWQBty/sM4MuP117A65gn3JswkcK/YU/Y8LBXf2LQyhTkKdsYanDEpFPRcazPGM0S5LQ+S5Y+sADJt47wCgRzrxcMJzafuY7AoCBc+K9fZ/mgjsPeZyxNM2XGU/ia5R9BYfA1Udo+FrkJHZ1hmFJurbA1hNXD49Wc4b11PrrnPOtHQIOBtn5NuSEodmFXorZLOIzFgfM7kgs0ooLdo0ScmE38D71ykfe3Mm3ZQO7/pX3Dr40tecKTPye/PCBWwlDANpC8KGFnIXBfCjBeHSDS8QNLe6Itxvjy4JPYSeuS9yXN+gznEFdZw88O1j23LNnk7tbHm7pjyPG1I59QwGOK42xfcIxh0F20R9fT8L/5N4FYHHE7Lf/uFs/uKv14+U1+QtiJqNeQc9P/okjouroy7ne0V8j/L6O/gYWl3wR</source>
  </file>
  <file path="Platforms/vendor_netgear.php" generated-path="Platforms.vendor_netgear.html" hash="0acc1f50f82ce41f467f34db0303fa61" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1Vu9v2zYQ/e6/4loEiN0pdpt265auG2iJtjnIkidScb1lKGSJjoXKoiHSMbJh//uOlPKj2dZ9mpFENHl89967E5nvf9xv973e6EUP8OOr/W1TXm8N9PMBnL98dQ5n9vHag3gva+Dq0OQSH9XBlKrWEJa70sjCg+CwrsraA9bIKqsLh0aqChyahkZq2dzIYtjr8tQmy80FjLOmuYX4NFC1uslqzLZ2M/3MDEBhSn2fql8onCulA9gas78YjY7H4/CzqGEpR20KsS01bMpKAj73WWNAbcBsJcScf+TRfIGT+afsWnaUElmU2jTl2gEBaoCDxs016Fa0nVmXdYbsNqrZaQ+OpdmCatxTHYyD2ami3JR5ZkE8yBoJe9mgR2gS7Bt1UxY4MNvMOC4bVVXqWNbXkKu6KFuhdtNOmouW14snzLTV0VHKVYGhB23QX5MhVYuZrdWNXeoq6UAAamXKXHoYgXZUiGdhHietiyeMMGleZeVONsN/IYIJHxlyRwRVFgck9/9wgVZlh1So/LCT2Et3NRthORSuN7DLjGzKrNIPtrt6WeDHMu7ERbJ0++x6ne2k5fTFnkcZzSMqdo+rTYntjmLaBKrRyOQW1tJ2E8pSIOsCZ6VtHGS2U0ZCa5nRd6qQOL4rsMHl1iStNuZo+6JrNdB7mds+w62l7cDGdljd9prWTlb7FswYBx5PxJIkFHC8SOJLFtAAxitcpODHi1XCpjMBszgMaMKBRAHORiJh41TEOPGccNz53C60r3W0AvphkVDOIU6AzRchQ0DMkJBIMMrxFIj8MA1YNPUAQSCKBYRszgSGidhzibttDvFhK8QTmNPEn+FXMmYhEytHaMJEZPNNMCGBBUkE89OQJLBIk0XMKaA8BxUw7oeEzWkwRBaYGegljQTwGQnDJ4rjZUQTK+EzuWOKXMk4pG2yaNXhJtQXVtnDyEcjkWboAV9Qn9kB/UBRF0lWXofL6c8pBuEiBGROppQ7uP5/OIRl8tOEzi11tISnYy6YSAWFaRwHzndOk0vmU/7OAYYxd+alnOJhTARxBBAGnePv7HiccuY8ZJGgSZIuBIujAZZ9iQ4hV4Jbg/six5GrMxoWJysLbD1x9fBgOaM4n1h/nXPE2sHRQV88DsOcaKh4ohciOg3ZlEY+tRGxRVoyTgdYQsZtAGtTLwnmTZ18WzZk1w5Z6+BdU3uuwMAmQIJLZiV0G7AtOOtayFnoz7oSDHsv8JIYjWByf8CsK5V/gqNqPun2mNC3OpA6b0Af8i1k+gLj7ZbTCX97/q1YnDoA93rhz08pF65dBMU6oQYyJSzCOYKNh0UFvmQC86M0Sy2eTLByHWIQu+pbfQ4O3zaCOLaNBH327FmvV276cHJP6P37BxIw6P3h3Ng38vojHnn5tg+no/CDvWHxUpQwz2q84xrvSuur0fFK38jGHg/v+7++PPsuO/udnP1yNfztq8HJ6NTrjp/2c5/QgxMHjKfb4F17qpzYQ+nsBy3NpTvNMGckzbXMmlMb83nIHC+p6rGAv0XE+osAsb5sSffvJq+lsTf4TGnTH7ivCDB8NXw9/Ab/vrG/X5/j8O3wHL+9RMx/Qg3whuhDfcD/UnD1z17vL9PvtDM=</source>
  </file>
  <file path="MIBS/Entity.php" generated-path="MIBS.Entity.html" hash="8511feb07aa3c4f2f367d9a6fdf0ff28" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>Entity</name>
      <full_name>\OSS_SNMP\MIBS\Entity</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on generic devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012 - 2013, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS" line="46" package="global">
        <name>OID_ENTITY_PHYSICAL_DESCRIPTION</name>
        <full_name>\OSS_SNMP\MIBS\Entity::OID_ENTITY_PHYSICAL_DESCRIPTION</full_name>
        <value>'.1.3.6.1.2.1.47.1.1.1.1.2'</value>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="47" package="global">
        <name>OID_ENTITY_PHYSICAL_CLASS</name>
        <full_name>\OSS_SNMP\MIBS\Entity::OID_ENTITY_PHYSICAL_CLASS</full_name>
        <value>'.1.3.6.1.2.1.47.1.1.1.1.5'</value>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="48" package="global">
        <name>OID_ENTITY_PHYSICAL_PARENT_REL_POS</name>
        <full_name>\OSS_SNMP\MIBS\Entity::OID_ENTITY_PHYSICAL_PARENT_REL_POS</full_name>
        <value>'.1.3.6.1.2.1.47.1.1.1.1.6'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>OID_ENTITY_PHYSICAL_NAME</name>
        <full_name>\OSS_SNMP\MIBS\Entity::OID_ENTITY_PHYSICAL_NAME</full_name>
        <value>'.1.3.6.1.2.1.47.1.1.1.1.7'</value>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="50" package="global">
        <name>OID_ENTITY_PHYSICAL_ALIAS</name>
        <full_name>\OSS_SNMP\MIBS\Entity::OID_ENTITY_PHYSICAL_ALIAS</full_name>
        <value>'.1.3.6.1.2.1.47.1.1.1.1.14'</value>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="96" package="global">
        <name>PHYSICAL_CLASS_CHASSIS</name>
        <full_name>\OSS_SNMP\MIBS\Entity::PHYSICAL_CLASS_CHASSIS</full_name>
        <value>3</value>
        <docblock line="96">
          <description>Physical entitly class type</description>
          <long-description></long-description>
          <tag name="var" line="96" description="&lt;p&gt;entitly class type&lt;/p&gt;" type="\OSS_SNMP\MIBS\Physical" variable="">
            <type>\OSS_SNMP\MIBS\Physical</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="102" package="global">
        <name>PHYSICAL_CLASS_CONTAINER</name>
        <full_name>\OSS_SNMP\MIBS\Entity::PHYSICAL_CLASS_CONTAINER</full_name>
        <value>5</value>
        <docblock line="102">
          <description>Physical entitly class type</description>
          <long-description></long-description>
          <tag name="var" line="102" description="&lt;p&gt;entitly class type&lt;/p&gt;" type="\OSS_SNMP\MIBS\Physical" variable="">
            <type>\OSS_SNMP\MIBS\Physical</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="108" package="global">
        <name>PHYSICAL_CLASS_POWER_SUPPLY</name>
        <full_name>\OSS_SNMP\MIBS\Entity::PHYSICAL_CLASS_POWER_SUPPLY</full_name>
        <value>6</value>
        <docblock line="108">
          <description>Physical entitly class type</description>
          <long-description></long-description>
          <tag name="var" line="108" description="&lt;p&gt;entitly class type&lt;/p&gt;" type="\OSS_SNMP\MIBS\Physical" variable="">
            <type>\OSS_SNMP\MIBS\Physical</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="114" package="global">
        <name>PHYSICAL_CLASS_FAN</name>
        <full_name>\OSS_SNMP\MIBS\Entity::PHYSICAL_CLASS_FAN</full_name>
        <value>7</value>
        <docblock line="114">
          <description>Physical entitly class type</description>
          <long-description></long-description>
          <tag name="var" line="114" description="&lt;p&gt;entitly class type&lt;/p&gt;" type="\OSS_SNMP\MIBS\Physical" variable="">
            <type>\OSS_SNMP\MIBS\Physical</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="120" package="global">
        <name>PHYSICAL_CLASS_SENSOR</name>
        <full_name>\OSS_SNMP\MIBS\Entity::PHYSICAL_CLASS_SENSOR</full_name>
        <value>8</value>
        <docblock line="120">
          <description>Physical entitly class type</description>
          <long-description></long-description>
          <tag name="var" line="120" description="&lt;p&gt;entitly class type&lt;/p&gt;" type="\OSS_SNMP\MIBS\Physical" variable="">
            <type>\OSS_SNMP\MIBS\Physical</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="126" package="global">
        <name>PHYSICAL_CLASS_MODULE</name>
        <full_name>\OSS_SNMP\MIBS\Entity::PHYSICAL_CLASS_MODULE</full_name>
        <value>9</value>
        <docblock line="126">
          <description>Physical entitly class type</description>
          <long-description></long-description>
          <tag name="var" line="126" description="&lt;p&gt;entitly class type&lt;/p&gt;" type="\OSS_SNMP\MIBS\Physical" variable="">
            <type>\OSS_SNMP\MIBS\Physical</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="132" package="global">
        <name>PHYSICAL_CLASS_PORT</name>
        <full_name>\OSS_SNMP\MIBS\Entity::PHYSICAL_CLASS_PORT</full_name>
        <value>10</value>
        <docblock line="132">
          <description>Physical entitly class type</description>
          <long-description></long-description>
          <tag name="var" line="132" description="&lt;p&gt;entitly class type&lt;/p&gt;" type="\OSS_SNMP\MIBS\Physical" variable="">
            <type>\OSS_SNMP\MIBS\Physical</type>
          </tag>
        </docblock>
      </constant>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS" line="139" package="global">
        <name>$ENTITY_PHSYICAL_CLASS</name>
        <full_name>\OSS_SNMP\MIBS\Entity::ENTITY_PHSYICAL_CLASS</full_name>
        <default>array(self::PHYSICAL_CLASS_CHASSIS =&gt; 'chassis', self::PHYSICAL_CLASS_CONTAINER =&gt; 'container', self::PHYSICAL_CLASS_POWER_SUPPLY =&gt; 'powerSupply', self::PHYSICAL_CLASS_FAN =&gt; 'fan', self::PHYSICAL_CLASS_SENSOR =&gt; 'sensor', self::PHYSICAL_CLASS_MODULE =&gt; 'module', self::PHYSICAL_CLASS_PORT =&gt; 'port')</default>
        <docblock line="139">
          <description>Translator array for physical class types</description>
          <long-description></long-description>
          <tag name="var" line="139" description="&lt;p&gt;Translator array for physical class types&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>physicalDescription</name>
        <full_name>\OSS_SNMP\MIBS\Entity::physicalDescription()</full_name>
        <docblock line="68">
          <description>Returns an associate array of entPhysicalDescr</description>
          <long-description>e.g.

    [1] = STRING: "Cisco Systems Catalyst 6500 9-slot Chassis System"
    [2] = STRING: "Cisco Systems Catalyst 6500 9-slot Physical Slot"
    [3] = STRING: "Cisco Systems Catalyst 6500 9-slot Physical Slot"
    [4] = STRING: "Cisco Systems Catalyst 6500 9-slot Physical Slot"</long-description>
          <tag name="return" line="68" description="Associate array of entPhysicalDescr" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="87" package="global">
        <name>physicalName</name>
        <full_name>\OSS_SNMP\MIBS\Entity::physicalName()</full_name>
        <docblock line="87">
          <description>Returns an associate array of entPhysicalName</description>
          <long-description>e.g.

    [1] = STRING: "WS-C6509-E"
    [2] = STRING: "Physical Slot 1"
    [3] = STRING: "Physical Slot 2"
    [4] = STRING: "Physical Slot 3"</long-description>
          <tag name="return" line="87" description="Associate array of entPhysicalName" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="158" package="global">
        <name>physicalClass</name>
        <full_name>\OSS_SNMP\MIBS\Entity::physicalClass()</full_name>
        <docblock line="158">
          <description>Returns an associate array of entPhysicalClass</description>
          <long-description>e.g.  [1005] =&gt; 10 / port</long-description>
          <tag name="param" line="158" description="&lt;p&gt;If true, return the string representation via self::$ENTITY_PHSYICAL_CLASS&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="158" description="Associate array of entPhysicalClass" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="177" package="global">
        <name>physicalParentRelPos</name>
        <full_name>\OSS_SNMP\MIBS\Entity::physicalParentRelPos()</full_name>
        <docblock line="177">
          <description>Returns an associate array of entPhysicalParentRelPos</description>
          <long-description>e.g.  [1005] =&gt; 1</long-description>
          <tag name="return" line="177" description="Associate array of entPhysicalParentRelPos" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="190" package="global">
        <name>physicalAlias</name>
        <full_name>\OSS_SNMP\MIBS\Entity::physicalAlias()</full_name>
        <docblock line="190">
          <description>Returns an associate array of physical aliases</description>
          <long-description>e.g.  [1005] =&gt; 10001</long-description>
          <tag name="return" line="190" description="Associate array of physical aliases" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="205" package="global">
        <name>relPosToAlias</name>
        <full_name>\OSS_SNMP\MIBS\Entity::relPosToAlias()</full_name>
        <docblock line="205">
          <description>Utility function for MIBS\Cisco\RSTP::rstpPortRole() to try and translate a port index
into a port ID</description>
          <long-description>Makes a number of assumptions including that it has to be of type port, that the ID must be &gt;10000,
etc.</long-description>
          <tag name="return" line="205" description="of relative positions to port IDs" type="Array">
            <type>Array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="MIBS/MRV.php" generated-path="MIBS.MRV.html" hash="ac8d899ff24e228b42b2b13dacb3b47e" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>MRV</name>
      <full_name>\OSS_SNMP\MIBS\MRV</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on MRV devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2013, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1VdGO4jYUfecrrvalM6MU2u3b7KrdkHjAUkioncAirVQFYharENPEDDuq+u89djIzLJW2Ly0vCY7vueece6/9/pfj7jgYjO4GhF9kjk+N/ryzdLO5pbc//PhTQNlR1STNqdkoPPYnq03dUqIP2qoqoPi03us6IN6ofVlXHibc78nDtNSoVjWPqhoO+gS1LTf2nsZl0zxR9l1savNY1vQ9rf3KTWlvySBl+5LqpjJY08oDvPx21h7vR6Pz+Tz8avtQq1GXK9/plrZ6rwjPY9lYMluyO0WZlL/JdDbH4ub38rPquQlV6dY2eu2BCGLo1CK4prZT71bWui5Bc2uaQxvQWdsdmcY/zcl6mIOp9FZvSgcSUNkoOqoGZsEtOjbmUVd4sbvSei5bs9+bs64/08bUle4Uu6CDsveDF8l3V+xap6WntTEVtp9aC7NtCboOt1ybR/epr+eFd7WxeqMC7IIte2A6qMvkdXXFDIk3+1IfVDP8BiEkvjDnmRAUVyeQ/P84Uaf4Aq0ym9NBodGe6zhCiQz2NHQorWp0uW9fS+Fr6MAv5VwKTZX2sW5PXR6U4/bNoYCc5oqSi/M105gJCOsSmaYFoydaK9dpkGhI1RVWlWsqMDwYq6iz0LaXCiECQ0VbbOlMa83Wnl3f9K1I7VFtXB8iXLsObVwH1l0vtq2X2E3JlEuS2UO+DAUjvM9FtuAxi2m8wkdGUTZfCT6Z5jTNkpgJSWEaYzXNBR8XeYaFN6FE5Bv3oZv/dEXs41wwKSkTxGfzhAMQGUSY5pxJHBdplBQxTycBAYTSLKeEz3iObXkW+MR9mEd8DaXsgWZMRFP8Dcc84fnKE3rgeeryPSBhSPNQ5DwqklDQvBDzTDKCPA8VcxklIZ+xeAgWyExswdKc5DRMkivF2TJlwkn4Su6YgWs4TliXLF31uIJFuVP2+hbBSNBMApJzFnH3wj4y6ArFKuhxJfu1wCZ8pDichRMmPdzNvziEMkWFYDNHHZbIYixznhc5o0mWxd53ycSCR0y+84BJJr15hWQ4tcM89AQAA+fkO/c+LiT3HvI0Z0IU85xn6S3KvoRD4BoiNH4pcpb6OsOwTKwcsPPE1yOg5ZRhXTh/vXOhs0PCwSi/3IacMDS/0kspmyR8wtKIuR2ZQ1pyyW5RQi7dBt6lXobIW3j5rmxg173yzsHnpg58gYk/UBgvuJPQB6AtJO9byFsYTfsSDAd3uET80OKOeL0xPs34GHbiusR9eYc+wxnUtu7Ac4Plzj13Nvm7ZfGW/jhhTN3Y1zQTCwztIw45jLGP/fByDv4nty4AyxMmv/nHzfreX6wfri/JnxEzGnT8HTv1BcdD1dKnS62DPweDvwZ/A/K5egc=</source>
  </file>
  <file path="Cache/APC.php" generated-path="Cache.APC.html" hash="6143d6fa24afcaefadc5f238a90db64e" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\Cache" line="44" package="global">
      <extends>\OSS_SNMP\Cache</extends>
      <name>APC</name>
      <full_name>\OSS_SNMP\Cache\APC</full_name>
      <docblock line="44">
        <description>APC cache implementation</description>
        <long-description>See the implementation in \OSS_SNMP\Cache\Basic for proper examples and documentation.</long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <property static="false" visibility="protected" namespace="OSS_SNMP\Cache" line="50" package="global">
        <name>$_ttl</name>
        <full_name>\OSS_SNMP\Cache\APC::_ttl</full_name>
        <default>300</default>
        <docblock line="50">
          <description>Default time to live for cache variables in seconds</description>
          <long-description></long-description>
          <tag name="var" line="50" description="&lt;p&gt;Default time to live for cache variables in seconds  (defaults to 300s - 5 mins)&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP\Cache" line="56" package="global">
        <name>$_prefix</name>
        <full_name>\OSS_SNMP\Cache\APC::_prefix</full_name>
        <default>'OSS_SNMP_'</default>
        <docblock line="56">
          <description>Prefix to use for caching items</description>
          <long-description></long-description>
          <tag name="var" line="56" description="&lt;p&gt;Prefix to use for caching items&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="67" package="global">
        <name>__construct</name>
        <full_name>\OSS_SNMP\Cache\APC::__construct()</full_name>
        <docblock line="67">
          <description>Cache constructor.</description>
          <long-description>For basic cache, takes no parameters.</long-description>
          <tag name="param" line="67" description="&lt;p&gt;Set the default ttl&lt;/p&gt;" type="int" variable="$ttl">
            <type>int</type>
          </tag>
          <tag name="param" line="67" description="&lt;p&gt;Set the default prefix for caching variable names&lt;/p&gt;" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="return" line="67" description="An instance of the cache ($this) for  fluent interfaces" type="\OSS_SNMP\Cache\Basic">
            <type>\OSS_SNMP\Cache\Basic</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ttl</name>
          <default>300</default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default>'OSS_SNMP_'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="87" package="global">
        <name>load</name>
        <full_name>\OSS_SNMP\Cache\APC::load()</full_name>
        <docblock line="87">
          <description>Load a named value from the cache (or null if not present)</description>
          <long-description></long-description>
          <tag name="param" line="87" description="&lt;p&gt;The name of the value to load&lt;/p&gt;" type="string" variable="$var">
            <type>string</type>
          </tag>
          <tag name="return" line="87" description="The value from the cache or null" type="mixed|null">
            <type>mixed</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$var</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="120" package="global">
        <name>save</name>
        <full_name>\OSS_SNMP\Cache\APC::save()</full_name>
        <docblock line="120">
          <description>Save a named value to the cache</description>
          <long-description></long-description>
          <tag name="param" line="120" description="&lt;p&gt;The name of the value to save&lt;/p&gt;" type="string" variable="$var">
            <type>string</type>
          </tag>
          <tag name="param" line="120" description="&lt;p&gt;The value to save&lt;/p&gt;" type="mixed" variable="$val">
            <type>mixed</type>
          </tag>
          <tag name="param" line="120" description="&lt;p&gt;The time to live of the variable if you want to override the default&lt;/p&gt;" type="int" variable="$ttl">
            <type>int</type>
          </tag>
          <tag name="return" line="120" description="The value (as passed)" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$var</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$val</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ttl</name>
          <default>null</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="136" package="global">
        <name>clear</name>
        <full_name>\OSS_SNMP\Cache\APC::clear()</full_name>
        <docblock line="136">
          <description>Clear a named value from the cache</description>
          <long-description></long-description>
          <tag name="param" line="136" description="&lt;p&gt;The name of the value to clear&lt;/p&gt;" type="string" variable="$var">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$var</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="146" package="global">
        <name>clearAll</name>
        <full_name>\OSS_SNMP\Cache\APC::clearAll()</full_name>
        <docblock line="146">
          <description>Clear all values from the cache</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP\Cache" line="51" package="global">
        <name>save</name>
        <full_name>\OSS_SNMP\Cache::save()</full_name>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$varName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$varValue</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP\Cache" line="52" package="global">
        <name>load</name>
        <full_name>\OSS_SNMP\Cache::load()</full_name>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$varName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP\Cache" line="53" package="global">
        <name>clear</name>
        <full_name>\OSS_SNMP\Cache::clear()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$varName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP\Cache" line="54" package="global">
        <name>clearAll</name>
        <full_name>\OSS_SNMP\Cache::clearAll()</full_name>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="MIBS/SNMP/Engine.php" generated-path="MIBS.SNMP.Engine.html" hash="0f96b7c4f1ead079bf3db309c4ffb705" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\SNMP" line="44" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>Engine</name>
      <full_name>\OSS_SNMP\MIBS\SNMP\Engine</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2013, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\SNMP" line="46" package="global">
        <name>OID_TIME</name>
        <full_name>\OSS_SNMP\MIBS\SNMP\Engine::OID_TIME</full_name>
        <value>'.1.3.6.1.6.3.10.2.1.3.0'</value>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS\SNMP" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\SNMP" line="61" package="global">
        <name>time</name>
        <full_name>\OSS_SNMP\MIBS\SNMP\Engine::time()</full_name>
        <docblock line="61">
          <description>Get the SNMP engine time</description>
          <long-description>&gt; "The number of seconds since the value of the snmpEngineBoots object last changed.
&gt; When incrementing this objects value would cause it to exceed its maximum, snmpEngineBoots
&gt; is incremented as if a re-initialization had occurred, and this objects value consequently
&gt; reverts to zero."</long-description>
          <tag name="see" line="61" description="" link="\OSS_SNMP\MIBS\SNMP\http://tools.cisco.com/Support/SNMP/do/BrowseOID.do?local=en&amp;amp;translate=Translate&amp;amp;objectInput=1.3.6.1.6.3.10.2.1.2#oidContent"/>
          <tag name="return" line="61" description="The SNMP engine time" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\SNMP" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\SNMP" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1VlFv2zYQfvevOGRDaweu3KRAH5KmrWwzNgFZ8kQ5roEChSzRMTdJ1Cgqblr0v+9IKbbrbt3LloeIpo7ffffd8U5v3pXbstMZnHcA/0ayfFTifquhm/Tg8uXFqz4EJS+AyVolHB9ZrYUsKvBELjRP+zCu15ko+kAVz+IitTBuloGFqUDxiqsHnjqd1kGh40RfwTBW6hGC52NZyIe4gBewtjvdWPdAostq76qbStwT3ALs/7Zal1eDwW63c74zdwQfNL6irahgIzIO+CxjpUFuQG85BIx9Yv5sjpvJH/E9b7mFPBWVVmJtgQCDgbrCwwVUTfRmZy2KGGlupMqrPuyE3oJU9ilrbWFymYqNSGID0odYcSi5QrFQLSiVfBApLvQ21pbLRmaZ3IniHhJZpKKJ2BzKub7q7EM+P2FXmVhaWolM0byuNIqtY6RrcOO1fDCv2nweaVdILRLeRyuUJUNMA3XsvEhPmKHjJItFzpXzE0Lo+EicJ0IYcVojyf+PEzQRH6GlMqlzjoX2lMcBpkiijYI81lyJOKsOqbA5NODH4RwH6nNhzxqbIs654fbTS4HhqBNK5pzNmcA7gYE1jqSqkNEjrLmpNAxRAi9S3OWmqJBhLjWHRkJdHUeIQeClgg2aNKJVcqN3pm7aUoSq5ImpQzwuTIUqU4FFU4tVZUNsbsmUMmDBbbR0QwK4nofBHR2TMQxX+JLAKJivQjqZRjANvDEJGbj+GHf9KKTDRRTgxpnL8OSZedHcf38F5MM8JIxBEAKdzT2KgOghdP2IEobtwh95izH1J31AEPCDCDw6oxGaRUHfOm6PWcTDUQhuYUbC0RR/ukPq0WhlCd3SyDf+btGhC3M3jOho4bkhzBfhPGAEMDwLNaZs5Ll0RsYOskDPQO6IHwGbup53EnGw9EloQvgu3CFBru7QI40zf9XihmQUmcgOqxEKiTS9PrA5GVGzIB8IxuWGq36Ly8hvCzTClzB2Z+6EMAvX/ReFME2jRUhmhjpKwhZDFtFoERGYBMHY6s5IeEdHhF1bQC9gVrwFI9i13ci1BBAGlWPXZj1cMGo1pH5EwnAxj2jg9zDtS1QIubp4dLxPcuDbPKNgQbgywEYTm48+LKcE90Ojr1XONXIwVHAUHZuhTxQ0OokXfDLx6IT4I2IsAoO0pIz0MIWUGQPauF666HdhwzdpQ3bNkjYKPhV13yYY6C244ztqQmgPYFkw2paQlXA0bVPgdM5xiNhLizPiMDE+zuiQfTSrazMzcWieY7FhI6oq0/XM7TLNzzQoO2DuLuHPGu8qx8trjd/vu99/MmsRMK7xvqsf5ukbO07fn47Gt3hm0GkIk+JeFBz4Z+wLaQUfj4PsfLUSYqfCXhzQ8acIL8yh/9zAc+fCeeW8xv+v8Xnx0rm0Gy+fXzdtxYrT9M8Jb0adVYQ3TjV27vb99w94C2eRabR1vsaea6YcN4MAO5wo2jnyEGc1fxrmVZGXTSRDKbG5yvXvPNGAEWpItnFxb7499tjLLQqMQIqbAWHyZLtnc6hqkXeyzlJIYjv9te3KnxOO7dY07zz+LPI67586PvgQ1cEDHorx5wZinIUvRIHzLM7El2YybeMUZJLUSpnkNjPuBzImBRyLqNDZ48GH4g9coQ1y+8KVdM5OVHxfcf70iaSlzConwYEpnUTmA1aXpVR6YPIxSOVgqOSu4phkJ5XvMpnE2Q0vnmkVF1WG4/Imelo9a5jRoqz1zd+k//IXKVLzhYdkT/ngp0mtjPQaon+uhYF9lqbME9jURWJ1Mgbdnn31dT8EW8BfjWQv3t5zbSC7PbvsYtFkm6urfeH2mhb4rdP51vkLSMhTCA==</source>
  </file>
  <file path="Platform.php" generated-path="Platform.html" hash="be3c51e915fd76353fc1e62392cc97aa" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP" line="45" package="global">
      <extends/>
      <name>Platform</name>
      <full_name>\OSS_SNMP\Platform</full_name>
      <docblock line="45">
        <description>A class for parsing device / host / platform details</description>
        <long-description></long-description>
        <tag name="copyright" line="45" description="Copyright (c) 2012 - 2013, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="45" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="52" package="global">
        <name>$_vendor</name>
        <full_name>\OSS_SNMP\Platform::_vendor</full_name>
        <default>'Unknown'</default>
        <docblock line="52">
          <description>The platform vendor</description>
          <long-description></long-description>
          <tag name="var" line="52" description="&lt;p&gt;The platform vendor&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="59" package="global">
        <name>$_model</name>
        <full_name>\OSS_SNMP\Platform::_model</full_name>
        <default>'Unknown'</default>
        <docblock line="59">
          <description>The platform model</description>
          <long-description></long-description>
          <tag name="var" line="59" description="&lt;p&gt;The platform model&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="66" package="global">
        <name>$_os</name>
        <full_name>\OSS_SNMP\Platform::_os</full_name>
        <default>'Unknown'</default>
        <docblock line="66">
          <description>The platform operating system</description>
          <long-description></long-description>
          <tag name="var" line="66" description="&lt;p&gt;The platform operating system&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="73" package="global">
        <name>$_osver</name>
        <full_name>\OSS_SNMP\Platform::_osver</full_name>
        <default>'Unknown'</default>
        <docblock line="73">
          <description>The platform operating system version</description>
          <long-description></long-description>
          <tag name="var" line="73" description="&lt;p&gt;The platform operating system version&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="80" package="global">
        <name>$_osdate</name>
        <full_name>\OSS_SNMP\Platform::_osdate</full_name>
        <default>null</default>
        <docblock line="80">
          <description>The platform operating system (compile) date</description>
          <long-description></long-description>
          <tag name="var" line="80" description="&lt;p&gt;The platform operating system (compile) date&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="87" package="global">
        <name>$_serial</name>
        <full_name>\OSS_SNMP\Platform::_serial</full_name>
        <default>'(not implemented)'</default>
        <docblock line="87">
          <description>The platform serial number</description>
          <long-description></long-description>
          <tag name="var" line="87" description="&lt;p&gt;The platform serial number&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="94" package="global">
        <name>$_snmpHost</name>
        <full_name>\OSS_SNMP\Platform::_snmpHost</full_name>
        <default></default>
        <docblock line="94">
          <description>The \OSS_SNMP\SNMP object</description>
          <long-description></long-description>
          <tag name="var" line="94" description="&lt;p&gt;The \OSS_SNMP\SNMP object&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="103" package="global">
        <name>__construct</name>
        <full_name>\OSS_SNMP\Platform::__construct()</full_name>
        <docblock line="103">
          <description>The constructor.</description>
          <long-description></long-description>
          <tag name="param" line="103" description="&lt;p&gt;The SNMP Host object&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmpHost">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="103" description="An instance of $this (for fluent interfaces)" type="\OSS_SNMP\Platform">
            <type>\OSS_SNMP\Platform</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmpHost</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="114" package="global">
        <name>parse</name>
        <full_name>\OSS_SNMP\Platform::parse()</full_name>
        <docblock line="114">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="137" package="global">
        <name>setSNMPHost</name>
        <full_name>\OSS_SNMP\Platform::setSNMPHost()</full_name>
        <docblock line="137">
          <description>Set the SNMPT Host</description>
          <long-description></long-description>
          <tag name="param" line="137" description="&lt;p&gt;The SNMP Host object&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$s">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="137" description="For fluent interfaces" type="\OSS_SNMP\Platform">
            <type>\OSS_SNMP\Platform</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$s</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="148" package="global">
        <name>getSNMPHost</name>
        <full_name>\OSS_SNMP\Platform::getSNMPHost()</full_name>
        <docblock line="148">
          <description>Get the SNMPHost object</description>
          <long-description></long-description>
          <tag name="return" line="148" description="The SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="159" package="global">
        <name>setVendor</name>
        <full_name>\OSS_SNMP\Platform::setVendor()</full_name>
        <docblock line="159">
          <description>Set vendor</description>
          <long-description></long-description>
          <tag name="param" line="159" description="" type="string" variable="$s">
            <type>string</type>
          </tag>
          <tag name="return" line="159" description="For fluent interfaces" type="\OSS_SNMP\Platform">
            <type>\OSS_SNMP\Platform</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$s</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="171" package="global">
        <name>setModel</name>
        <full_name>\OSS_SNMP\Platform::setModel()</full_name>
        <docblock line="171">
          <description>Set model</description>
          <long-description></long-description>
          <tag name="param" line="171" description="" type="string" variable="$s">
            <type>string</type>
          </tag>
          <tag name="return" line="171" description="For fluent interfaces" type="\OSS_SNMP\Platform">
            <type>\OSS_SNMP\Platform</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$s</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="183" package="global">
        <name>setOs</name>
        <full_name>\OSS_SNMP\Platform::setOs()</full_name>
        <docblock line="183">
          <description>Set operating system</description>
          <long-description></long-description>
          <tag name="param" line="183" description="" type="string" variable="$s">
            <type>string</type>
          </tag>
          <tag name="return" line="183" description="For fluent interfaces" type="\OSS_SNMP\Platform">
            <type>\OSS_SNMP\Platform</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$s</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="195" package="global">
        <name>setOsVersion</name>
        <full_name>\OSS_SNMP\Platform::setOsVersion()</full_name>
        <docblock line="195">
          <description>Set OS version</description>
          <long-description></long-description>
          <tag name="param" line="195" description="" type="string" variable="$s">
            <type>string</type>
          </tag>
          <tag name="return" line="195" description="For fluent interfaces" type="\OSS_SNMP\Platform">
            <type>\OSS_SNMP\Platform</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$s</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="207" package="global">
        <name>setOsDate</name>
        <full_name>\OSS_SNMP\Platform::setOsDate()</full_name>
        <docblock line="207">
          <description>Set OS date</description>
          <long-description></long-description>
          <tag name="param" line="207" description="" type="string" variable="$s">
            <type>string</type>
          </tag>
          <tag name="return" line="207" description="For fluent interfaces" type="\OSS_SNMP\Platform">
            <type>\OSS_SNMP\Platform</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$s</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="219" package="global">
        <name>setSerialNumber</name>
        <full_name>\OSS_SNMP\Platform::setSerialNumber()</full_name>
        <docblock line="219">
          <description>Set the serial number</description>
          <long-description></long-description>
          <tag name="param" line="219" description="" type="string" variable="$s">
            <type>string</type>
          </tag>
          <tag name="return" line="219" description="For fluent interfaces" type="\OSS_SNMP\Platform">
            <type>\OSS_SNMP\Platform</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$s</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="230" package="global">
        <name>getVendor</name>
        <full_name>\OSS_SNMP\Platform::getVendor()</full_name>
        <docblock line="230">
          <description>Get vendor</description>
          <long-description></long-description>
          <tag name="return" line="230" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="240" package="global">
        <name>getModel</name>
        <full_name>\OSS_SNMP\Platform::getModel()</full_name>
        <docblock line="240">
          <description>Get model</description>
          <long-description></long-description>
          <tag name="return" line="240" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="250" package="global">
        <name>getOs</name>
        <full_name>\OSS_SNMP\Platform::getOs()</full_name>
        <docblock line="250">
          <description>Get operating system</description>
          <long-description></long-description>
          <tag name="return" line="250" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="260" package="global">
        <name>getOsVersion</name>
        <full_name>\OSS_SNMP\Platform::getOsVersion()</full_name>
        <docblock line="260">
          <description>Get OS version</description>
          <long-description></long-description>
          <tag name="return" line="260" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="270" package="global">
        <name>getOsDate</name>
        <full_name>\OSS_SNMP\Platform::getOsDate()</full_name>
        <docblock line="270">
          <description>Get OS date</description>
          <long-description>return \DateTime</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="280" package="global">
        <name>getSerialNumber</name>
        <full_name>\OSS_SNMP\Platform::getSerialNumber()</full_name>
        <docblock line="280">
          <description>Get the serial number</description>
          <long-description>return string</long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="114" code="PPC:ERR-50008">No summary for method parse()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="MIBS/SNMP.php" generated-path="MIBS.SNMP.html" hash="510698bcf1e4c70a9baa33f8e12f4a9f" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>SNMP</name>
      <full_name>\OSS_SNMP\MIBS\SNMP</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2013, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1VdFu2zYUffdXXPRlSaDZW/eWFltlibEJyJIrSnENFBhkiY6JyaIn0XGDYf/eQ0pJXA/oXja/SKbuPfeccy/J978ddofRaHIzIvwCfXhq1cPO0FV5TW9/+vkXj5KDbEjoY1tKPOqjUbrpKFJ7ZWTlUXjc1KrxiLeyLprKwfh1TQ6mo1Z2sn2U1Xg0FGhMUZpbmhZt+0TJD6Fu9GPR0I+0cStXhbkmjZLdS6mrSmNNSQfw8tsZc7idTE6n0/ib8LGSk75WtlMdbVUtCc9D0RrSWzI7SYkQv4t4scRi+UfxIAduqaxUZ1q1cUAEMXTskNxQ16u3KxvVFKC51e2+8+ikzI506576aBzMXldqq8rCgnhUtJIOsoVZcIsOrX5UFV7MrjCOy1bXtT6p5oFK3VSqV2yT9tLcjl4k31yw66yWgVapK4QfOwOzTQG6FrfY6Ef7aejnmXeNNqqUHqJgSw1MC3VevKkumKFwWRdqL9vxdwih8Jk5z4SguDqC5P/HiXrFZ2iVLo97iUF77uMELdKIaWlfGNmqou5eW+F6aMHP5ZwLjaVyuTamKfbScvvupoCc9oKSzXM9U9gTENYX0m0HRk+0kXbSIFGTbCqsSjtUYLjXRlJvoenOFUIENhVtEdKb1umtOdm5GUaRuoMs7RwiXdkJbe0ENv0sdp2T2O+SORckkrts5aeM8L5Mk3sespCma3xkFCTLdcpn84zmSRSyVJAfh1iNs5RP8yzBwhtfIPON/dDv/3hN7NMyZUJQkhJfLCMOQFRI/TjjTOC4iIMoD3k88wggFCcZRXzBM4RliecKD2kO8TWVkjtasDSY468/5RHP1o7QHc9iW+8OBX1a+mnGgzzyU1rm6TIRjCDPQYVcBJHPFywcgwUqE7tncUZi7kfRheJkFbPUSvhG7pSBqz+NWF8sXg+4KQsyq+z1LYCRoBl5JJYs4PaFfWLQ5adrb8AV7GOOIHyk0F/4MyYc3NW/OIQ2BXnKFpY6LBH5VGQ8yzNGsyQJne+Cpfc8YOKdA4wS4czLBcOp7We+IwAYOCfe2fdpLrjzkMcZS9N8mfEkvkbbV3AIXH2khi9NTmLXZxiWpGsLbD1x/fBoNWdYT62/zjnf2iHgYJCdh6EmDM0u9FLMZhGfsThgNiKxSCsu2DVayIUN4H3plY+6uZNv2wZ2/SvvHXweas81mPgd+eE9txKGBIyF4MMIOQuD+dCC8egGl4jbtLgjXm+Mzws+hZ24LnFf3mDOcAZ1nT3w7May5549m9zdcv+W/jxim0rsWxf84eXg+0+uWQAWR2z19h9X6Xt3k364vBV/Rc5k1BN2DOUXHAhVR5/P1Y3+Gv09+grRWXUx</source>
  </file>
  <file path="MIBS/MRV/System.php" generated-path="MIBS.MRV.System.html" hash="3938ef92d7cd4406d673c87de8ddc48c" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\MRV" line="49" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>System</name>
      <full_name>\OSS_SNMP\MIBS\MRV\System</full_name>
      <docblock line="49">
        <description>A class for performing SNMP V2 queries on MRV devices</description>
        <long-description>Specifically written for the LX-40xx series console servers</long-description>
        <tag name="see" line="49" description="" link="\OSS_SNMP\MIBS\MRV\http://service.mrv.com/downloads/mibs5.3.2.zip"/>
        <tag name="see" line="49" description="" link="\OSS_SNMP\MIBS\MRV\http://service.mrv.com/support/tech_docs/36/974"/>
        <tag name="copyright" line="49" description="Copyright (c) 2013, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="49" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\MRV" line="52" package="global">
        <name>OID_MRV_OS_IMAGE</name>
        <full_name>\OSS_SNMP\MIBS\MRV\System::OID_MRV_OS_IMAGE</full_name>
        <value>'.1.3.6.1.4.1.33.100.1.1.1.0'</value>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\MRV" line="53" package="global">
        <name>OID_MRV_MODEL</name>
        <full_name>\OSS_SNMP\MIBS\MRV\System::OID_MRV_MODEL</full_name>
        <value>'.1.3.6.1.4.1.33.100.1.1.12.0'</value>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS\MRV" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\MRV" line="60" package="global">
        <name>osImage</name>
        <full_name>\OSS_SNMP\MIBS\MRV\System::osImage()</full_name>
        <docblock line="60">
          <description>Returns the operating system image name</description>
          <long-description></long-description>
          <tag name="return" line="60" description="The operating system image name" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\MRV" line="70" package="global">
        <name>model</name>
        <full_name>\OSS_SNMP\MIBS\MRV\System::model()</full_name>
        <docblock line="70">
          <description>Returns the hardware model</description>
          <long-description></long-description>
          <tag name="return" line="70" description="The hardware model" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\MRV" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\MRV" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1Vmtv2zYU/e5fcVEMqB24dpp0HZZ0XWWJiQnIkifKSQ0UCGSJjolJokvScbOi/32XlOy4aZEO2JYAEUPd1zn3pTe/r1frTmd41AH88eX6XonblYFu3oOT45enfYjXvAYmNyrn+Cg3RshaQygqYXjRh2CzKEXdB6p4mdWFM+OVJTgzGhTXXN3xYtBpHdQmy80ZjDKl7iF+Hsha3mU1vICFu+lmpgcSXeq9q24h8U5wZ2D/szJmfTYcbrfbwVfiA8GHja90JTQsRckBn+tMGZBLMCsOMWM3LJpM8TL/M7vlbWwJL4Q2SiycIUAwsNGoXINu0NubhagzDHMpVaX7sBVmBVK5p9wYZ6aShViKPLNG+pApDmuukCxkC9ZK3okCD2aVGRfLUpal3Ir6FnJZF6JBbJUqbs46e8hHj6LTFksbVi4LFN9og2SbDMO1drOFvLOv2nwecFdLI3LeRymkpUSb1tSh87p4FBk6zstMVFwNnggIHR+QswsIERcbDPL/iwkaxAfWCplvKo6FtsvjEFMkUUZBlRmuRFbqh1S4HFrjh3AOgUZcOF0rU2cVt7E92RQIRz0Kyeq5nAnsCQTWOJJKY0T3sOC20hCiBF4XeMttUWGElTQcGgqNPkSIILCpYIkiDWlaLs3W1k1biqDXPLd1iOrCVqiyFVg3tai1g9h0yZgyYPFFeu0lBPA8TeIrGpAARnN8ScCPp/OEXo5TGMdhQBIGXhTgbZQmdDRLY7x45jHUfGZfNP0fzYG8nyaEMYgToJNpSNEgeki8KKWE4biI/HAW0OiyD2gEojiFkE5oimJp3HeOWzVn8UEV4guYkMQf47/eiIY0nbuALmgaWX8X6NCDqZek1J+FXgLTWTKNGQGE50wFlPmhRyckGGAU6BnIFYlSYGMvDB8hjq8jklgIX8EdEYzVG4WkcRbNW7sJ8VOL7OHkI5EYZtgHNiU+tQfyniAuL5n3W7uM/DFDIXwJgTfxLglz5ro/YAjT5M8SMrGhIyVsNmIpTWcpgcs4DhzvjCRX1Cfs3BkMY+bImzGCU9tLPRcAmkHm2Lk9j2aMOg5plJIkmU1TGkc9TPs1MoSxeqga7JMcRy7PSFiczK1hy4nLRx+uxwTvE8uvY86zdDBk0E8PxdAnEpo+wgsRuQzpJYl8YiVia+maMtLDFFJmBWjj+tpDvzMH36YNo2uOtGFwV9R9l2CgF+AFV9RCaBWwLBhtS8hR6I/bFAw6R7hEXNPijnjYGB8mdMQ+TJKrc7sycWceYa3hHNLaDj3bXHb22fnk9svVCXzcYKva1q8B1bBx73DQYSs7Xdb2aFaW9/sOXTbDA8L3L14df/oEujGAQwN3HAe3TtXOwjvN+W4V2jdofFCpu0Euq2Eht3Ups0IPK7HQPw9OByeDv8T6R2p6s15LZYaG56sbHKV6ePp6+Osvr3Ye9/P7P/laQIPZBieW+uaL4I37IHj3eLm/RZ1hp+Gc3WvDK+CfkLdCw4fDNHU+N/PN8mYgpsEN8n8TsxtqEwy/wfPBS6TkNf59ZU+ng5fHx3iwv8fPz7+jO4kDEtrrp3RPnLLTdgWy25Vmo5AHm1cEpHAzYY3oJnxR4TeI2xCt+E7rnXJqYNcSiqf/SHnonmvLcw7LTZ27JSg1tYLdnnv7eb9KWg8/2R3y4u0tN5a+bs8du1hr5fLs7Bvueg07X56EucpU4RYSfg/x8sfIviv/fTBO4l9BaVL5gONL52+1TVAQ</source>
  </file>
  <file path="Exception.php" generated-path="Exception.html" hash="3a04488c534e50e0581202fc64f04114" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP" line="43" package="global">
      <extends>\Exception</extends>
      <name>Exception</name>
      <full_name>\OSS_SNMP\Exception</full_name>
      <docblock line="43">
        <description>OSS_SNMP\Exception class</description>
        <long-description></long-description>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1VcFu4zYQvfsrBntpEqh2u8ekQEFLjE1AFl2SitdAgUKW6JioLBoSHW+w6L93SCm214ftqb6IpmbevPdmKP72+2F3GI0mDyPAX2wP76153Tm4K+/h8y+/fo6AH3QD0h7bUuOjPjpjmw5SszdOVxEkx01tmghYq+uiqQIMqWsIMB20utPtm67Go6FA44rSPcK0aNt34D8ltrFvRQM/wybs3BXuHiyW7M6l7iqLe0YHgPNv59zhcTI5nU7j78LHRk/6WmpnOtiaWgM+D0XrwG7B7TRwKf+S2WKJm+XfxaseuAldmc61ZhOAAMXAscPkBrpevd/ZmKZAmlvb7rsITsbtwLbhaY8uwOxtZbamLDxIBEWr4aBbNAvdgkNr30yFC7crXOCytXVtT6Z5hdI2lekV+6S9do+js+SHG3ad1zLQKm2F4cfOodmuQLoet9jYN/9q6OeVd411ptQRRqEtNWJ6qOviTXXDDAuXdWH2uh3/gBAWvjLngxAqro5I8v/jBL3iK7TKlse9xkH76OMEW2QxpoV94XRrirq7tCL00INfy7kWmmkTcn1MU+y15/bDQ4Fy2htKPi/0zOCZQGF9Idt2yOgdNtpPGkq0oJsKd7UfKmS4t05Db6HrrhWiCDxUsMWQ3rTObt3Jz80witAddOnnENONn9DWT2DTz2LXBYn9KZkzCZI/qxURFHC9FPyFJTSB6RpfUoj5ci3YbK5gztOECgkkS3A3U4JNc8Vx4xORmPnJv+jPf7YG+mUpqJTABbDFMmUIiBUEyRSjEj8XWZzmCctmESAIZFxByhZMYZjiUSg8pAXESyrwZ1hQEc/xL5mylKl1IPTMVObrPWNBAksiFIvzlAhY5mLJJQWUF6ASJuOUsAVNxsgCKwN9oZkCOSdpeqOYrzIqvITv5E4pciXTlPbFsvWAK2isvLLLKkYjkWYagVzSmPkF/UJRFxHraMCV9I8cg/AlJGRBZlQGuLv/cAjbFOeCLjx1tETmU6mYyhWFGedJ8F1S8cJiKp8CYMplMC+XFL/aRJFAAGHQOfnk19NcsuAhyxQVIl8qxrN7bPsKHUKuBFOTc5N5FvqMhnGx9sDek9CPCFZzivvC+xucI94OiQ7G6joMa6Kh6kYvZHSWshnNYuojuEdaMUnvsYVM+gDWl14RrJsH+b5tyK5fst7Bj6GOQoOBPQNJXpiXMCTgWEg2jFCwMJ4PLRiPHvASGYVTi5fE5cp4Gvm7Ei/Lh/PWn/RrqQ/hU4NfpA6PKeaGFVze6K94+KoOLsGjb/8g1r9tykO/</source>
  </file>
  <file path="Platforms/vendor_brocade.php" generated-path="Platforms.vendor_brocade.html" hash="ddfc0195fba34a1ebdb69ae07e0b49db" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="MIBS/Asterisk/Indications.php" generated-path="MIBS.Asterisk.Indications.html" hash="e1e9f54c04003dccb0675e92c0f813c0" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Asterisk" line="45" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>Indications</name>
      <full_name>\OSS_SNMP\MIBS\Asterisk\Indications</full_name>
      <docblock line="45">
        <description>A class for performing SNMP V2 queries on Asterisk</description>
        <long-description></long-description>
        <tag name="see" line="45" description="" link="\OSS_SNMP\MIBS\Asterisk\https://wiki.asterisk.org/wiki/display/AST/Asterisk+MIB+Definitions"/>
        <tag name="copyright" line="45" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="45" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="48" package="global">
        <name>OID_ASTERISK_INDICATIONS_COUNT</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Indications::OID_ASTERISK_INDICATIONS_COUNT</full_name>
        <value>'.1.3.6.1.4.1.22736.1.4.1.0'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="50" package="global">
        <name>OID_ASTERISK_DEFAULT_INDICATION</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Indications::OID_ASTERISK_DEFAULT_INDICATION</full_name>
        <value>'.1.3.6.1.4.1.22736.1.4.2.0'</value>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="52" package="global">
        <name>OID_ASTERISK_INDICATIONS_COUNTRY</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Indications::OID_ASTERISK_INDICATIONS_COUNTRY</full_name>
        <value>'.1.3.6.1.4.1.22736.1.4.3.1.2'</value>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="53" package="global">
        <name>OID_ASTERISK_INDICATIONS_DESCRIPTION</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Indications::OID_ASTERISK_INDICATIONS_DESCRIPTION</full_name>
        <value>'.1.3.6.1.4.1.22736.1.4.3.1.4'</value>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS\Asterisk" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="62" package="global">
        <name>number</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Indications::number()</full_name>
        <docblock line="62">
          <description>Returns the number of indications defined in Asterisk</description>
          <long-description>&gt; Number of indications currently defined in Asterisk.</long-description>
          <tag name="return" line="62" description="The number of indications defined in Asterisk" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="75" package="global">
        <name>defaultZone</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Indications::defaultZone()</full_name>
        <docblock line="75">
          <description>Returns the default indication zone to use.</description>
          <long-description>&gt; Default indication zone to use.</long-description>
          <tag name="return" line="75" description="The default indication zone to use" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="88" package="global">
        <name>countryCodes</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Indications::countryCodes()</full_name>
        <docblock line="88">
          <description>Returns an array of ISO country codes for the defined indications zones (indexed by SNMP table entry)</description>
          <long-description>&gt; Country for which the indication zone is valid,
&gt; typically this is the ISO 2-letter code of the country.</long-description>
          <tag name="return" line="88" description="An array of ISO country codes for the defined indications zones (indexed by SNMP table entry)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="101" package="global">
        <name>descriptions</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Indications::descriptions()</full_name>
        <docblock line="101">
          <description>Returns an array of indications zone descriptions (indexed by SNMP table entry)</description>
          <long-description>&gt; Description of the indication zone, usually the full
&gt; name of the country it is valid for.</long-description>
          <tag name="return" line="101" description="An array of indications zone descriptions" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="MIBS/Iface.php" generated-path="MIBS.Iface.html" hash="60454a81f0569069b1f841b3b770f14a" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>Iface</name>
      <full_name>\OSS_SNMP\MIBS\Iface</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on generic devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS" line="46" package="global">
        <name>OID_IF_NUMBER</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_NUMBER</full_name>
        <value>'.1.3.6.1.2.1.2.1.0'</value>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="48" package="global">
        <name>OID_IF_INDEX</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_INDEX</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.1'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>OID_IF_DESCRIPTION</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_DESCRIPTION</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.2'</value>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="50" package="global">
        <name>OID_IF_TYPE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_TYPE</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.3'</value>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="51" package="global">
        <name>OID_IF_MTU</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_MTU</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.4'</value>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="52" package="global">
        <name>OID_IF_SPEED</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_SPEED</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.5'</value>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="53" package="global">
        <name>OID_IF_PHYS_ADDRESS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_PHYS_ADDRESS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.6'</value>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="54" package="global">
        <name>OID_IF_ADMIN_STATUS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_ADMIN_STATUS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.7'</value>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="55" package="global">
        <name>OID_IF_OPER_STATUS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_OPER_STATUS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.8'</value>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="56" package="global">
        <name>OID_IF_LAST_CHANGE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_LAST_CHANGE</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.9'</value>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>OID_IF_IN_OCTETS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_IN_OCTETS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.10'</value>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="59" package="global">
        <name>OID_IF_IN_UNICAST_PACKETS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_IN_UNICAST_PACKETS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.11'</value>
        <docblock line="59">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="60" package="global">
        <name>OID_IF_IN_NON_UNICAST_PACKETS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_IN_NON_UNICAST_PACKETS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.12'</value>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="61" package="global">
        <name>OID_IF_IN_DISCARDS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_IN_DISCARDS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.13'</value>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="62" package="global">
        <name>OID_IF_IN_ERRORS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_IN_ERRORS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.14'</value>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="63" package="global">
        <name>OID_IF_IN_UNKNOWN_PROTOCOLS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_IN_UNKNOWN_PROTOCOLS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.15'</value>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="65" package="global">
        <name>OID_IF_OUT_OCTETS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_OUT_OCTETS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.16'</value>
        <docblock line="65">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="66" package="global">
        <name>OID_IF_OUT_UNICAST_PACKETS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_OUT_UNICAST_PACKETS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.17'</value>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="67" package="global">
        <name>OID_IF_OUT_NON_UNICAST_PACKETS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_OUT_NON_UNICAST_PACKETS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.18'</value>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>OID_IF_OUT_DISCARDS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_OUT_DISCARDS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.19'</value>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="69" package="global">
        <name>OID_IF_OUT_ERRORS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_OUT_ERRORS</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.20'</value>
        <docblock line="69">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="70" package="global">
        <name>OID_IF_OUT_QUEUE_LENGTH</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_OUT_QUEUE_LENGTH</full_name>
        <value>'.1.3.6.1.2.1.2.2.1.21'</value>
        <docblock line="70">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="72" package="global">
        <name>OID_IF_NAME</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_NAME</full_name>
        <value>'.1.3.6.1.2.1.31.1.1.1.1'</value>
        <docblock line="72">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="73" package="global">
        <name>OID_IF_HIGH_SPEED</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_HIGH_SPEED</full_name>
        <value>'.1.3.6.1.2.1.31.1.1.1.15'</value>
        <docblock line="73">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="74" package="global">
        <name>OID_IF_ALIAS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::OID_IF_ALIAS</full_name>
        <value>'.1.3.6.1.2.1.31.1.1.1.18'</value>
        <docblock line="74">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="127" package="global">
        <name>IF_ADMIN_STATUS_UP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_ADMIN_STATUS_UP</full_name>
        <value>1</value>
        <docblock line="127">
          <description>Constant for possible value of interface admin status.</description>
          <long-description></long-description>
          <tag name="see" line="127" description="" link="\OSS_SNMP\MIBS\adminStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="133" package="global">
        <name>IF_ADMIN_STATUS_DOWN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_ADMIN_STATUS_DOWN</full_name>
        <value>2</value>
        <docblock line="133">
          <description>Constant for possible value of interface admin status.</description>
          <long-description></long-description>
          <tag name="see" line="133" description="" link="\OSS_SNMP\MIBS\adminStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="139" package="global">
        <name>IF_ADMIN_STATUS_TESTING</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_ADMIN_STATUS_TESTING</full_name>
        <value>3</value>
        <docblock line="139">
          <description>Constant for possible value of interface admin status.</description>
          <long-description></long-description>
          <tag name="see" line="139" description="" link="\OSS_SNMP\MIBS\adminStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="534" package="global">
        <name>IF_OPER_STATUS_UP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_OPER_STATUS_UP</full_name>
        <value>1</value>
        <docblock line="534">
          <description>Constant for possible value of interface operation status.</description>
          <long-description></long-description>
          <tag name="see" line="534" description="" link="\OSS_SNMP\MIBS\operationStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="539" package="global">
        <name>IF_OPER_STATUS_DOWN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_OPER_STATUS_DOWN</full_name>
        <value>2</value>
        <docblock line="539">
          <description>Constant for possible value of interface operation status.</description>
          <long-description></long-description>
          <tag name="see" line="539" description="" link="\OSS_SNMP\MIBS\operationStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="544" package="global">
        <name>IF_OPER_STATUS_TESTING</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_OPER_STATUS_TESTING</full_name>
        <value>3</value>
        <docblock line="544">
          <description>Constant for possible value of interface operation status.</description>
          <long-description></long-description>
          <tag name="see" line="544" description="" link="\OSS_SNMP\MIBS\operationStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="549" package="global">
        <name>IF_OPER_STATUS_UNKNOWN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_OPER_STATUS_UNKNOWN</full_name>
        <value>4</value>
        <docblock line="549">
          <description>Constant for possible value of interface operation status.</description>
          <long-description></long-description>
          <tag name="see" line="549" description="" link="\OSS_SNMP\MIBS\operationStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="554" package="global">
        <name>IF_OPER_STATUS_DORMANT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_OPER_STATUS_DORMANT</full_name>
        <value>5</value>
        <docblock line="554">
          <description>Constant for possible value of interface operation status.</description>
          <long-description></long-description>
          <tag name="see" line="554" description="" link="\OSS_SNMP\MIBS\operationStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="559" package="global">
        <name>IF_OPER_STATUS_NOT_PRESENT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_OPER_STATUS_NOT_PRESENT</full_name>
        <value>6</value>
        <docblock line="559">
          <description>Constant for possible value of interface operation status.</description>
          <long-description></long-description>
          <tag name="see" line="559" description="" link="\OSS_SNMP\MIBS\operationStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="565" package="global">
        <name>IF_OPER_STATUS_LOWER_LAYER_DOWN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_OPER_STATUS_LOWER_LAYER_DOWN</full_name>
        <value>7</value>
        <docblock line="565">
          <description>Constant for possible value of interface operation status.</description>
          <long-description></long-description>
          <tag name="see" line="565" description="" link="\OSS_SNMP\MIBS\operationStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="614" package="global">
        <name>IF_TYPE_OTHER</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_OTHER</full_name>
        <value>1</value>
        <docblock line="614">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="614" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="620" package="global">
        <name>IF_TYPE_REGULAR1822</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_REGULAR1822</full_name>
        <value>2</value>
        <docblock line="620">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="620" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="626" package="global">
        <name>IF_TYPE_HDH1822</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_HDH1822</full_name>
        <value>3</value>
        <docblock line="626">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="626" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="632" package="global">
        <name>IF_TYPE_DDNX25</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DDNX25</full_name>
        <value>4</value>
        <docblock line="632">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="632" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="638" package="global">
        <name>IF_TYPE_RFC877X25</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_RFC877X25</full_name>
        <value>5</value>
        <docblock line="638">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="638" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="644" package="global">
        <name>IF_TYPE_ETHERNETCSMACD</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ETHERNETCSMACD</full_name>
        <value>6</value>
        <docblock line="644">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="644" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="650" package="global">
        <name>IF_TYPE_ISO88023CSMACD</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ISO88023CSMACD</full_name>
        <value>7</value>
        <docblock line="650">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="650" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="656" package="global">
        <name>IF_TYPE_ISO88024TOKENBUS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ISO88024TOKENBUS</full_name>
        <value>8</value>
        <docblock line="656">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="656" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="662" package="global">
        <name>IF_TYPE_ISO88025TOKENRING</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ISO88025TOKENRING</full_name>
        <value>9</value>
        <docblock line="662">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="662" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="668" package="global">
        <name>IF_TYPE_ISO88026MAN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ISO88026MAN</full_name>
        <value>10</value>
        <docblock line="668">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="668" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="674" package="global">
        <name>IF_TYPE_STARLAN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_STARLAN</full_name>
        <value>11</value>
        <docblock line="674">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="674" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="680" package="global">
        <name>IF_TYPE_PROTEON10MBIT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PROTEON10MBIT</full_name>
        <value>12</value>
        <docblock line="680">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="680" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="686" package="global">
        <name>IF_TYPE_PROTEON80MBIT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PROTEON80MBIT</full_name>
        <value>13</value>
        <docblock line="686">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="686" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="692" package="global">
        <name>IF_TYPE_HYPERCHANNEL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_HYPERCHANNEL</full_name>
        <value>14</value>
        <docblock line="692">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="692" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="698" package="global">
        <name>IF_TYPE_FDDI</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_FDDI</full_name>
        <value>15</value>
        <docblock line="698">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="698" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="704" package="global">
        <name>IF_TYPE_LAPB</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_LAPB</full_name>
        <value>16</value>
        <docblock line="704">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="704" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="710" package="global">
        <name>IF_TYPE_SDLC</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SDLC</full_name>
        <value>17</value>
        <docblock line="710">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="710" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="716" package="global">
        <name>IF_TYPE_DS1</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DS1</full_name>
        <value>18</value>
        <docblock line="716">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="716" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="722" package="global">
        <name>IF_TYPE_E1</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_E1</full_name>
        <value>19</value>
        <docblock line="722">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="722" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="728" package="global">
        <name>IF_TYPE_BASICISDN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_BASICISDN</full_name>
        <value>20</value>
        <docblock line="728">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="728" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="734" package="global">
        <name>IF_TYPE_PRIMARYISDN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PRIMARYISDN</full_name>
        <value>21</value>
        <docblock line="734">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="734" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="740" package="global">
        <name>IF_TYPE_PROPPOINTTOPOINTSERIAL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PROPPOINTTOPOINTSERIAL</full_name>
        <value>22</value>
        <docblock line="740">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="740" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="746" package="global">
        <name>IF_TYPE_PPP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PPP</full_name>
        <value>23</value>
        <docblock line="746">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="746" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="752" package="global">
        <name>IF_TYPE_SOFTWARELOOPBACK</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SOFTWARELOOPBACK</full_name>
        <value>24</value>
        <docblock line="752">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="752" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="758" package="global">
        <name>IF_TYPE_EON</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_EON</full_name>
        <value>25</value>
        <docblock line="758">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="758" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="764" package="global">
        <name>IF_TYPE_ETHERNET3MBIT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ETHERNET3MBIT</full_name>
        <value>26</value>
        <docblock line="764">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="764" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="770" package="global">
        <name>IF_TYPE_NSIP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_NSIP</full_name>
        <value>27</value>
        <docblock line="770">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="770" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="776" package="global">
        <name>IF_TYPE_SLIP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SLIP</full_name>
        <value>28</value>
        <docblock line="776">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="776" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="782" package="global">
        <name>IF_TYPE_ULTRA</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ULTRA</full_name>
        <value>29</value>
        <docblock line="782">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="782" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="788" package="global">
        <name>IF_TYPE_DS3</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DS3</full_name>
        <value>30</value>
        <docblock line="788">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="788" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="794" package="global">
        <name>IF_TYPE_SIP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SIP</full_name>
        <value>31</value>
        <docblock line="794">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="794" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="800" package="global">
        <name>IF_TYPE_FRAMERELAY</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_FRAMERELAY</full_name>
        <value>32</value>
        <docblock line="800">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="800" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="806" package="global">
        <name>IF_TYPE_RS232</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_RS232</full_name>
        <value>33</value>
        <docblock line="806">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="806" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="812" package="global">
        <name>IF_TYPE_PARA</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PARA</full_name>
        <value>34</value>
        <docblock line="812">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="812" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="818" package="global">
        <name>IF_TYPE_ARCNET</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ARCNET</full_name>
        <value>35</value>
        <docblock line="818">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="818" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="824" package="global">
        <name>IF_TYPE_ARCNETPLUS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ARCNETPLUS</full_name>
        <value>36</value>
        <docblock line="824">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="824" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="830" package="global">
        <name>IF_TYPE_ATM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ATM</full_name>
        <value>37</value>
        <docblock line="830">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="830" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="836" package="global">
        <name>IF_TYPE_MIOX25</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_MIOX25</full_name>
        <value>38</value>
        <docblock line="836">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="836" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="842" package="global">
        <name>IF_TYPE_SONET</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SONET</full_name>
        <value>39</value>
        <docblock line="842">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="842" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="848" package="global">
        <name>IF_TYPE_X25PLE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_X25PLE</full_name>
        <value>40</value>
        <docblock line="848">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="848" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="854" package="global">
        <name>IF_TYPE_ISO88022LLC</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ISO88022LLC</full_name>
        <value>41</value>
        <docblock line="854">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="854" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="860" package="global">
        <name>IF_TYPE_LOCALTALK</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_LOCALTALK</full_name>
        <value>42</value>
        <docblock line="860">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="860" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="866" package="global">
        <name>IF_TYPE_SMDSDXI</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SMDSDXI</full_name>
        <value>43</value>
        <docblock line="866">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="866" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="872" package="global">
        <name>IF_TYPE_FRAMERELAYSERVICE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_FRAMERELAYSERVICE</full_name>
        <value>44</value>
        <docblock line="872">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="872" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="878" package="global">
        <name>IF_TYPE_V35</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_V35</full_name>
        <value>45</value>
        <docblock line="878">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="878" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="884" package="global">
        <name>IF_TYPE_HSSI</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_HSSI</full_name>
        <value>46</value>
        <docblock line="884">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="884" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="890" package="global">
        <name>IF_TYPE_HIPPI</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_HIPPI</full_name>
        <value>47</value>
        <docblock line="890">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="890" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="896" package="global">
        <name>IF_TYPE_MODEM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_MODEM</full_name>
        <value>48</value>
        <docblock line="896">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="896" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="902" package="global">
        <name>IF_TYPE_AAL5</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_AAL5</full_name>
        <value>49</value>
        <docblock line="902">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="902" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="908" package="global">
        <name>IF_TYPE_SONETPATH</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SONETPATH</full_name>
        <value>50</value>
        <docblock line="908">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="908" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="914" package="global">
        <name>IF_TYPE_SONETVT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SONETVT</full_name>
        <value>51</value>
        <docblock line="914">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="914" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="920" package="global">
        <name>IF_TYPE_SMDSICIP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SMDSICIP</full_name>
        <value>52</value>
        <docblock line="920">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="920" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="926" package="global">
        <name>IF_TYPE_PROPVIRTUAL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PROPVIRTUAL</full_name>
        <value>53</value>
        <docblock line="926">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="926" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="932" package="global">
        <name>IF_TYPE_PROPMULTIPLEXOR</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PROPMULTIPLEXOR</full_name>
        <value>54</value>
        <docblock line="932">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="932" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="938" package="global">
        <name>IF_TYPE_IEEE80212</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IEEE80212</full_name>
        <value>55</value>
        <docblock line="938">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="938" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="944" package="global">
        <name>IF_TYPE_FIBRECHANNEL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_FIBRECHANNEL</full_name>
        <value>56</value>
        <docblock line="944">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="944" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="950" package="global">
        <name>IF_TYPE_HIPPIINTERFACE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_HIPPIINTERFACE</full_name>
        <value>57</value>
        <docblock line="950">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="950" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="956" package="global">
        <name>IF_TYPE_FRAMERELAYINTERCONNECT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_FRAMERELAYINTERCONNECT</full_name>
        <value>58</value>
        <docblock line="956">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="956" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="962" package="global">
        <name>IF_TYPE_AFLANE8023</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_AFLANE8023</full_name>
        <value>59</value>
        <docblock line="962">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="962" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="968" package="global">
        <name>IF_TYPE_AFLANE8025</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_AFLANE8025</full_name>
        <value>60</value>
        <docblock line="968">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="968" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="974" package="global">
        <name>IF_TYPE_CCTEMUL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_CCTEMUL</full_name>
        <value>61</value>
        <docblock line="974">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="974" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="980" package="global">
        <name>IF_TYPE_FASTETHER</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_FASTETHER</full_name>
        <value>62</value>
        <docblock line="980">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="980" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="986" package="global">
        <name>IF_TYPE_ISDN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ISDN</full_name>
        <value>63</value>
        <docblock line="986">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="986" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="992" package="global">
        <name>IF_TYPE_V11</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_V11</full_name>
        <value>64</value>
        <docblock line="992">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="992" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="998" package="global">
        <name>IF_TYPE_V36</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_V36</full_name>
        <value>65</value>
        <docblock line="998">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="998" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1004" package="global">
        <name>IF_TYPE_G703AT64K</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_G703AT64K</full_name>
        <value>66</value>
        <docblock line="1004">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1004" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1010" package="global">
        <name>IF_TYPE_G703AT2MB</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_G703AT2MB</full_name>
        <value>67</value>
        <docblock line="1010">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1010" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1016" package="global">
        <name>IF_TYPE_QLLC</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_QLLC</full_name>
        <value>68</value>
        <docblock line="1016">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1016" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1022" package="global">
        <name>IF_TYPE_FASTETHERFX</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_FASTETHERFX</full_name>
        <value>69</value>
        <docblock line="1022">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1022" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1028" package="global">
        <name>IF_TYPE_CHANNEL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_CHANNEL</full_name>
        <value>70</value>
        <docblock line="1028">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1028" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1034" package="global">
        <name>IF_TYPE_IEEE80211</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IEEE80211</full_name>
        <value>71</value>
        <docblock line="1034">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1034" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1040" package="global">
        <name>IF_TYPE_IBM370PARCHAN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IBM370PARCHAN</full_name>
        <value>72</value>
        <docblock line="1040">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1040" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1046" package="global">
        <name>IF_TYPE_ESCON</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ESCON</full_name>
        <value>73</value>
        <docblock line="1046">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1046" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1052" package="global">
        <name>IF_TYPE_DLSW</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DLSW</full_name>
        <value>74</value>
        <docblock line="1052">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1052" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1058" package="global">
        <name>IF_TYPE_ISDNS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ISDNS</full_name>
        <value>75</value>
        <docblock line="1058">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1058" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1064" package="global">
        <name>IF_TYPE_ISDNU</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ISDNU</full_name>
        <value>76</value>
        <docblock line="1064">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1064" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1070" package="global">
        <name>IF_TYPE_LAPD</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_LAPD</full_name>
        <value>77</value>
        <docblock line="1070">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1070" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1076" package="global">
        <name>IF_TYPE_IPSWITCH</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IPSWITCH</full_name>
        <value>78</value>
        <docblock line="1076">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1076" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1082" package="global">
        <name>IF_TYPE_RSRB</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_RSRB</full_name>
        <value>79</value>
        <docblock line="1082">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1082" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1088" package="global">
        <name>IF_TYPE_ATMLOGICAL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ATMLOGICAL</full_name>
        <value>80</value>
        <docblock line="1088">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1088" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1094" package="global">
        <name>IF_TYPE_DS0</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DS0</full_name>
        <value>81</value>
        <docblock line="1094">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1094" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1100" package="global">
        <name>IF_TYPE_DS0BUNDLE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DS0BUNDLE</full_name>
        <value>82</value>
        <docblock line="1100">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1100" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1106" package="global">
        <name>IF_TYPE_BSC</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_BSC</full_name>
        <value>83</value>
        <docblock line="1106">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1106" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1112" package="global">
        <name>IF_TYPE_ASYNC</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ASYNC</full_name>
        <value>84</value>
        <docblock line="1112">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1112" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1118" package="global">
        <name>IF_TYPE_CNR</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_CNR</full_name>
        <value>85</value>
        <docblock line="1118">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1118" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1124" package="global">
        <name>IF_TYPE_ISO88025DTR</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ISO88025DTR</full_name>
        <value>86</value>
        <docblock line="1124">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1124" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1130" package="global">
        <name>IF_TYPE_EPLRS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_EPLRS</full_name>
        <value>87</value>
        <docblock line="1130">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1130" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1136" package="global">
        <name>IF_TYPE_ARAP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ARAP</full_name>
        <value>88</value>
        <docblock line="1136">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1136" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1142" package="global">
        <name>IF_TYPE_PROPCNLS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PROPCNLS</full_name>
        <value>89</value>
        <docblock line="1142">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1142" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1148" package="global">
        <name>IF_TYPE_HOSTPAD</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_HOSTPAD</full_name>
        <value>90</value>
        <docblock line="1148">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1148" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1154" package="global">
        <name>IF_TYPE_TERMPAD</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_TERMPAD</full_name>
        <value>91</value>
        <docblock line="1154">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1154" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1160" package="global">
        <name>IF_TYPE_FRAMERELAYMPI</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_FRAMERELAYMPI</full_name>
        <value>92</value>
        <docblock line="1160">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1160" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1166" package="global">
        <name>IF_TYPE_X213</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_X213</full_name>
        <value>93</value>
        <docblock line="1166">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1166" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1172" package="global">
        <name>IF_TYPE_ADSL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ADSL</full_name>
        <value>94</value>
        <docblock line="1172">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1172" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1178" package="global">
        <name>IF_TYPE_RADSL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_RADSL</full_name>
        <value>95</value>
        <docblock line="1178">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1178" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1184" package="global">
        <name>IF_TYPE_SDSL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SDSL</full_name>
        <value>96</value>
        <docblock line="1184">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1184" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1190" package="global">
        <name>IF_TYPE_VDSL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VDSL</full_name>
        <value>97</value>
        <docblock line="1190">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1190" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1196" package="global">
        <name>IF_TYPE_ISO88025CRFPINT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ISO88025CRFPINT</full_name>
        <value>98</value>
        <docblock line="1196">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1196" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1202" package="global">
        <name>IF_TYPE_MYRINET</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_MYRINET</full_name>
        <value>99</value>
        <docblock line="1202">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1202" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1208" package="global">
        <name>IF_TYPE_VOICEEM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VOICEEM</full_name>
        <value>100</value>
        <docblock line="1208">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1208" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1214" package="global">
        <name>IF_TYPE_VOICEFXO</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VOICEFXO</full_name>
        <value>101</value>
        <docblock line="1214">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1214" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1220" package="global">
        <name>IF_TYPE_VOICEFXS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VOICEFXS</full_name>
        <value>102</value>
        <docblock line="1220">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1220" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1226" package="global">
        <name>IF_TYPE_VOICEENCAP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VOICEENCAP</full_name>
        <value>103</value>
        <docblock line="1226">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1226" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1232" package="global">
        <name>IF_TYPE_VOICEOVERIP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VOICEOVERIP</full_name>
        <value>104</value>
        <docblock line="1232">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1232" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1238" package="global">
        <name>IF_TYPE_ATMDXI</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ATMDXI</full_name>
        <value>105</value>
        <docblock line="1238">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1238" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1244" package="global">
        <name>IF_TYPE_ATMFUNI</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ATMFUNI</full_name>
        <value>106</value>
        <docblock line="1244">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1244" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1250" package="global">
        <name>IF_TYPE_ATMIMA</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ATMIMA</full_name>
        <value>107</value>
        <docblock line="1250">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1250" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1256" package="global">
        <name>IF_TYPE_PPPMULTILINKBUNDLE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PPPMULTILINKBUNDLE</full_name>
        <value>108</value>
        <docblock line="1256">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1256" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1262" package="global">
        <name>IF_TYPE_IPOVERCDLC</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IPOVERCDLC</full_name>
        <value>109</value>
        <docblock line="1262">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1262" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1268" package="global">
        <name>IF_TYPE_IPOVERCLAW</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IPOVERCLAW</full_name>
        <value>110</value>
        <docblock line="1268">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1268" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1274" package="global">
        <name>IF_TYPE_STACKTOSTACK</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_STACKTOSTACK</full_name>
        <value>111</value>
        <docblock line="1274">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1274" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1280" package="global">
        <name>IF_TYPE_VIRTUALIPADDRESS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VIRTUALIPADDRESS</full_name>
        <value>112</value>
        <docblock line="1280">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1280" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1286" package="global">
        <name>IF_TYPE_MPC</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_MPC</full_name>
        <value>113</value>
        <docblock line="1286">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1286" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1292" package="global">
        <name>IF_TYPE_IPOVERATM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IPOVERATM</full_name>
        <value>114</value>
        <docblock line="1292">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1292" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1298" package="global">
        <name>IF_TYPE_ISO88025FIBER</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ISO88025FIBER</full_name>
        <value>115</value>
        <docblock line="1298">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1298" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1304" package="global">
        <name>IF_TYPE_TDLC</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_TDLC</full_name>
        <value>116</value>
        <docblock line="1304">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1304" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1310" package="global">
        <name>IF_TYPE_GIGABITETHERNET</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_GIGABITETHERNET</full_name>
        <value>117</value>
        <docblock line="1310">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1310" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1316" package="global">
        <name>IF_TYPE_HDLC</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_HDLC</full_name>
        <value>118</value>
        <docblock line="1316">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1316" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1322" package="global">
        <name>IF_TYPE_LAPF</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_LAPF</full_name>
        <value>119</value>
        <docblock line="1322">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1322" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1328" package="global">
        <name>IF_TYPE_V37</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_V37</full_name>
        <value>120</value>
        <docblock line="1328">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1328" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1334" package="global">
        <name>IF_TYPE_X25MLP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_X25MLP</full_name>
        <value>121</value>
        <docblock line="1334">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1334" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1340" package="global">
        <name>IF_TYPE_X25HUNTGROUP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_X25HUNTGROUP</full_name>
        <value>122</value>
        <docblock line="1340">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1340" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1346" package="global">
        <name>IF_TYPE_TRASNPHDLC</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_TRASNPHDLC</full_name>
        <value>123</value>
        <docblock line="1346">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1346" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1352" package="global">
        <name>IF_TYPE_INTERLEAVE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_INTERLEAVE</full_name>
        <value>124</value>
        <docblock line="1352">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1352" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1358" package="global">
        <name>IF_TYPE_FAST</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_FAST</full_name>
        <value>125</value>
        <docblock line="1358">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1358" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1364" package="global">
        <name>IF_TYPE_IP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IP</full_name>
        <value>126</value>
        <docblock line="1364">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1364" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1370" package="global">
        <name>IF_TYPE_DOCSCABLEMACLAYER</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DOCSCABLEMACLAYER</full_name>
        <value>127</value>
        <docblock line="1370">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1370" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1376" package="global">
        <name>IF_TYPE_DOCSCABLEDOWNSTREAM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DOCSCABLEDOWNSTREAM</full_name>
        <value>128</value>
        <docblock line="1376">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1376" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1382" package="global">
        <name>IF_TYPE_DOCSCABLEUPSTREAM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DOCSCABLEUPSTREAM</full_name>
        <value>129</value>
        <docblock line="1382">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1382" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1388" package="global">
        <name>IF_TYPE_A12MPPSWITCH</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_A12MPPSWITCH</full_name>
        <value>130</value>
        <docblock line="1388">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1388" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1394" package="global">
        <name>IF_TYPE_TUNNEL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_TUNNEL</full_name>
        <value>131</value>
        <docblock line="1394">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1394" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1400" package="global">
        <name>IF_TYPE_COFFEE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_COFFEE</full_name>
        <value>132</value>
        <docblock line="1400">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1400" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1406" package="global">
        <name>IF_TYPE_CES</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_CES</full_name>
        <value>133</value>
        <docblock line="1406">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1406" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1412" package="global">
        <name>IF_TYPE_ATMSUBINTERFACE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ATMSUBINTERFACE</full_name>
        <value>134</value>
        <docblock line="1412">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1412" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1418" package="global">
        <name>IF_TYPE_L2VLAN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_L2VLAN</full_name>
        <value>135</value>
        <docblock line="1418">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1418" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1424" package="global">
        <name>IF_TYPE_L3IPVLAN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_L3IPVLAN</full_name>
        <value>136</value>
        <docblock line="1424">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1424" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1430" package="global">
        <name>IF_TYPE_L3IPXVLAN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_L3IPXVLAN</full_name>
        <value>137</value>
        <docblock line="1430">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1430" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1436" package="global">
        <name>IF_TYPE_DIGITALPOWERLINE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DIGITALPOWERLINE</full_name>
        <value>138</value>
        <docblock line="1436">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1436" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1442" package="global">
        <name>IF_TYPE_MEDIAMAILOVERIP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_MEDIAMAILOVERIP</full_name>
        <value>139</value>
        <docblock line="1442">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1442" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1448" package="global">
        <name>IF_TYPE_DTM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DTM</full_name>
        <value>140</value>
        <docblock line="1448">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1448" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1454" package="global">
        <name>IF_TYPE_DCN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DCN</full_name>
        <value>141</value>
        <docblock line="1454">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1454" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1460" package="global">
        <name>IF_TYPE_IPFORWARD</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IPFORWARD</full_name>
        <value>142</value>
        <docblock line="1460">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1460" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1466" package="global">
        <name>IF_TYPE_MSDSL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_MSDSL</full_name>
        <value>143</value>
        <docblock line="1466">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1466" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1472" package="global">
        <name>IF_TYPE_IEEE1394</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IEEE1394</full_name>
        <value>144</value>
        <docblock line="1472">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1472" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1478" package="global">
        <name>IF_TYPE_IF_GSN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IF_GSN</full_name>
        <value>145</value>
        <docblock line="1478">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1478" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1484" package="global">
        <name>IF_TYPE_DVBRCCMACLAYER</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DVBRCCMACLAYER</full_name>
        <value>146</value>
        <docblock line="1484">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1484" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1490" package="global">
        <name>IF_TYPE_DVBRCCDOWNSTREAM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DVBRCCDOWNSTREAM</full_name>
        <value>147</value>
        <docblock line="1490">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1490" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1496" package="global">
        <name>IF_TYPE_DVBRCCUPSTREAM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DVBRCCUPSTREAM</full_name>
        <value>148</value>
        <docblock line="1496">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1496" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1502" package="global">
        <name>IF_TYPE_ATMVIRTUAL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ATMVIRTUAL</full_name>
        <value>149</value>
        <docblock line="1502">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1502" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1508" package="global">
        <name>IF_TYPE_MPLSTUNNEL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_MPLSTUNNEL</full_name>
        <value>150</value>
        <docblock line="1508">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1508" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1514" package="global">
        <name>IF_TYPE_SRP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SRP</full_name>
        <value>151</value>
        <docblock line="1514">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1514" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1520" package="global">
        <name>IF_TYPE_VOICEOVERATM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VOICEOVERATM</full_name>
        <value>152</value>
        <docblock line="1520">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1520" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1526" package="global">
        <name>IF_TYPE_VOICEOVERFRAMERELAY</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VOICEOVERFRAMERELAY</full_name>
        <value>153</value>
        <docblock line="1526">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1526" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1532" package="global">
        <name>IF_TYPE_IDSL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IDSL</full_name>
        <value>154</value>
        <docblock line="1532">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1532" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1538" package="global">
        <name>IF_TYPE_COMPOSITELINK</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_COMPOSITELINK</full_name>
        <value>155</value>
        <docblock line="1538">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1538" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1544" package="global">
        <name>IF_TYPE_SS7SIGLINK</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SS7SIGLINK</full_name>
        <value>156</value>
        <docblock line="1544">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1544" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1550" package="global">
        <name>IF_TYPE_PROPWIRELESSP2P</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PROPWIRELESSP2P</full_name>
        <value>157</value>
        <docblock line="1550">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1550" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1556" package="global">
        <name>IF_TYPE_FRFORWARD</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_FRFORWARD</full_name>
        <value>158</value>
        <docblock line="1556">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1556" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1562" package="global">
        <name>IF_TYPE_RFC1483</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_RFC1483</full_name>
        <value>159</value>
        <docblock line="1562">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1562" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1568" package="global">
        <name>IF_TYPE_USB</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_USB</full_name>
        <value>160</value>
        <docblock line="1568">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1568" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1574" package="global">
        <name>IF_TYPE_IEEE8023ADLAG</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IEEE8023ADLAG</full_name>
        <value>161</value>
        <docblock line="1574">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1574" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1580" package="global">
        <name>IF_TYPE_BGPPOLICYACCOUNTING</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_BGPPOLICYACCOUNTING</full_name>
        <value>162</value>
        <docblock line="1580">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1580" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1586" package="global">
        <name>IF_TYPE_FRF16MFRBUNDLE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_FRF16MFRBUNDLE</full_name>
        <value>163</value>
        <docblock line="1586">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1586" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1592" package="global">
        <name>IF_TYPE_H323GATEKEEPER</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_H323GATEKEEPER</full_name>
        <value>164</value>
        <docblock line="1592">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1592" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1598" package="global">
        <name>IF_TYPE_H323PROXY</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_H323PROXY</full_name>
        <value>165</value>
        <docblock line="1598">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1598" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1604" package="global">
        <name>IF_TYPE_MPLS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_MPLS</full_name>
        <value>166</value>
        <docblock line="1604">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1604" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1610" package="global">
        <name>IF_TYPE_MFSIGLINK</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_MFSIGLINK</full_name>
        <value>167</value>
        <docblock line="1610">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1610" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1616" package="global">
        <name>IF_TYPE_HDSL2</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_HDSL2</full_name>
        <value>168</value>
        <docblock line="1616">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1616" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1622" package="global">
        <name>IF_TYPE_SHDSL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SHDSL</full_name>
        <value>169</value>
        <docblock line="1622">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1622" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1628" package="global">
        <name>IF_TYPE_DS1FDL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DS1FDL</full_name>
        <value>170</value>
        <docblock line="1628">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1628" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1634" package="global">
        <name>IF_TYPE_POS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_POS</full_name>
        <value>171</value>
        <docblock line="1634">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1634" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1640" package="global">
        <name>IF_TYPE_DVBASIIN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DVBASIIN</full_name>
        <value>172</value>
        <docblock line="1640">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1640" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1646" package="global">
        <name>IF_TYPE_DVBASIOUT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DVBASIOUT</full_name>
        <value>173</value>
        <docblock line="1646">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1646" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1652" package="global">
        <name>IF_TYPE_PLC</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PLC</full_name>
        <value>174</value>
        <docblock line="1652">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1652" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1658" package="global">
        <name>IF_TYPE_NFAS</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_NFAS</full_name>
        <value>175</value>
        <docblock line="1658">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1658" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1664" package="global">
        <name>IF_TYPE_TR008</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_TR008</full_name>
        <value>176</value>
        <docblock line="1664">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1664" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1670" package="global">
        <name>IF_TYPE_GR303RDT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_GR303RDT</full_name>
        <value>177</value>
        <docblock line="1670">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1670" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1676" package="global">
        <name>IF_TYPE_GR303IDT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_GR303IDT</full_name>
        <value>178</value>
        <docblock line="1676">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1676" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1682" package="global">
        <name>IF_TYPE_ISUP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ISUP</full_name>
        <value>179</value>
        <docblock line="1682">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1682" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1688" package="global">
        <name>IF_TYPE_PROPDOCSWIRELESSMACLAYER</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PROPDOCSWIRELESSMACLAYER</full_name>
        <value>180</value>
        <docblock line="1688">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1688" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1694" package="global">
        <name>IF_TYPE_PROPDOCSWIRELESSDOWNSTREAM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PROPDOCSWIRELESSDOWNSTREAM</full_name>
        <value>181</value>
        <docblock line="1694">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1694" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1700" package="global">
        <name>IF_TYPE_PROPDOCSWIRELESSUPSTREAM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PROPDOCSWIRELESSUPSTREAM</full_name>
        <value>182</value>
        <docblock line="1700">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1700" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1706" package="global">
        <name>IF_TYPE_HIPERLAN2</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_HIPERLAN2</full_name>
        <value>183</value>
        <docblock line="1706">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1706" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1712" package="global">
        <name>IF_TYPE_PROPBWAP2MP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PROPBWAP2MP</full_name>
        <value>184</value>
        <docblock line="1712">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1712" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1718" package="global">
        <name>IF_TYPE_SONETOVERHEADCHANNEL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SONETOVERHEADCHANNEL</full_name>
        <value>185</value>
        <docblock line="1718">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1718" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1724" package="global">
        <name>IF_TYPE_DIGITALWRAPPEROVERHEADCHANNEL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DIGITALWRAPPEROVERHEADCHANNEL</full_name>
        <value>186</value>
        <docblock line="1724">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1724" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1730" package="global">
        <name>IF_TYPE_AAL2</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_AAL2</full_name>
        <value>187</value>
        <docblock line="1730">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1730" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1736" package="global">
        <name>IF_TYPE_RADIOMAC</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_RADIOMAC</full_name>
        <value>188</value>
        <docblock line="1736">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1736" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1742" package="global">
        <name>IF_TYPE_ATMRADIO</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ATMRADIO</full_name>
        <value>189</value>
        <docblock line="1742">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1742" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1748" package="global">
        <name>IF_TYPE_IMT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_IMT</full_name>
        <value>190</value>
        <docblock line="1748">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1748" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1754" package="global">
        <name>IF_TYPE_MVL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_MVL</full_name>
        <value>191</value>
        <docblock line="1754">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1754" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1760" package="global">
        <name>IF_TYPE_REACHDSL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_REACHDSL</full_name>
        <value>192</value>
        <docblock line="1760">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1760" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1766" package="global">
        <name>IF_TYPE_FRDLCIENDPT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_FRDLCIENDPT</full_name>
        <value>193</value>
        <docblock line="1766">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1766" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1772" package="global">
        <name>IF_TYPE_ATMVCIENDPT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ATMVCIENDPT</full_name>
        <value>194</value>
        <docblock line="1772">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1772" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1778" package="global">
        <name>IF_TYPE_OPTICALCHANNEL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_OPTICALCHANNEL</full_name>
        <value>195</value>
        <docblock line="1778">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1778" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1784" package="global">
        <name>IF_TYPE_OPTICALTRANSPORT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_OPTICALTRANSPORT</full_name>
        <value>196</value>
        <docblock line="1784">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1784" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1790" package="global">
        <name>IF_TYPE_PROPATM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PROPATM</full_name>
        <value>197</value>
        <docblock line="1790">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1790" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1796" package="global">
        <name>IF_TYPE_VOICEOVERCABLE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VOICEOVERCABLE</full_name>
        <value>198</value>
        <docblock line="1796">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1796" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1802" package="global">
        <name>IF_TYPE_INFINIBAND</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_INFINIBAND</full_name>
        <value>199</value>
        <docblock line="1802">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1802" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1808" package="global">
        <name>IF_TYPE_TELINK</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_TELINK</full_name>
        <value>200</value>
        <docblock line="1808">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1808" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1814" package="global">
        <name>IF_TYPE_Q2931</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_Q2931</full_name>
        <value>201</value>
        <docblock line="1814">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1814" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1820" package="global">
        <name>IF_TYPE_VIRTUALTG</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VIRTUALTG</full_name>
        <value>202</value>
        <docblock line="1820">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1820" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1826" package="global">
        <name>IF_TYPE_SIPTG</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SIPTG</full_name>
        <value>203</value>
        <docblock line="1826">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1826" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1832" package="global">
        <name>IF_TYPE_SIPSIG</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SIPSIG</full_name>
        <value>204</value>
        <docblock line="1832">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1832" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1838" package="global">
        <name>IF_TYPE_DOCSCABLEUPSTREAMCHANNEL</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DOCSCABLEUPSTREAMCHANNEL</full_name>
        <value>205</value>
        <docblock line="1838">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1838" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1844" package="global">
        <name>IF_TYPE_ECONET</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ECONET</full_name>
        <value>206</value>
        <docblock line="1844">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1844" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1850" package="global">
        <name>IF_TYPE_PON155</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PON155</full_name>
        <value>207</value>
        <docblock line="1850">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1850" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1856" package="global">
        <name>IF_TYPE_PON622</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PON622</full_name>
        <value>208</value>
        <docblock line="1856">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1856" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1862" package="global">
        <name>IF_TYPE_BRIDGE</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_BRIDGE</full_name>
        <value>209</value>
        <docblock line="1862">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1862" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1868" package="global">
        <name>IF_TYPE_LINEGROUP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_LINEGROUP</full_name>
        <value>210</value>
        <docblock line="1868">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1868" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1874" package="global">
        <name>IF_TYPE_VOICEEMFGD</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VOICEEMFGD</full_name>
        <value>211</value>
        <docblock line="1874">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1874" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1880" package="global">
        <name>IF_TYPE_VOICEFGDEANA</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VOICEFGDEANA</full_name>
        <value>212</value>
        <docblock line="1880">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1880" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1886" package="global">
        <name>IF_TYPE_VOICEDID</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_VOICEDID</full_name>
        <value>213</value>
        <docblock line="1886">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1886" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1892" package="global">
        <name>IF_TYPE_MPEGTRANSPORT</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_MPEGTRANSPORT</full_name>
        <value>214</value>
        <docblock line="1892">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1892" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1898" package="global">
        <name>IF_TYPE_SIXTOFOUR</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_SIXTOFOUR</full_name>
        <value>215</value>
        <docblock line="1898">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1898" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1904" package="global">
        <name>IF_TYPE_GTP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_GTP</full_name>
        <value>216</value>
        <docblock line="1904">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1904" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1910" package="global">
        <name>IF_TYPE_PDNETHERLOOP1</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PDNETHERLOOP1</full_name>
        <value>217</value>
        <docblock line="1910">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1910" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1916" package="global">
        <name>IF_TYPE_PDNETHERLOOP2</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_PDNETHERLOOP2</full_name>
        <value>218</value>
        <docblock line="1916">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1916" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1922" package="global">
        <name>IF_TYPE_OPTICALCHANNELGROUP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_OPTICALCHANNELGROUP</full_name>
        <value>219</value>
        <docblock line="1922">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1922" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1928" package="global">
        <name>IF_TYPE_HOMEPNA</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_HOMEPNA</full_name>
        <value>220</value>
        <docblock line="1928">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1928" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1934" package="global">
        <name>IF_TYPE_GFP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_GFP</full_name>
        <value>221</value>
        <docblock line="1934">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1934" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1940" package="global">
        <name>IF_TYPE_CISCOISLVLAN</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_CISCOISLVLAN</full_name>
        <value>222</value>
        <docblock line="1940">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1940" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1946" package="global">
        <name>IF_TYPE_ACTELISMETALOOP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ACTELISMETALOOP</full_name>
        <value>223</value>
        <docblock line="1946">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1946" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1952" package="global">
        <name>IF_TYPE_FCIPLINK</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_FCIPLINK</full_name>
        <value>224</value>
        <docblock line="1952">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1952" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1958" package="global">
        <name>IF_TYPE_RPR</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_RPR</full_name>
        <value>225</value>
        <docblock line="1958">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1958" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1964" package="global">
        <name>IF_TYPE_QAM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_QAM</full_name>
        <value>226</value>
        <docblock line="1964">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1964" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1970" package="global">
        <name>IF_TYPE_LMP</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_LMP</full_name>
        <value>227</value>
        <docblock line="1970">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1970" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1976" package="global">
        <name>IF_TYPE_CBLVECTASTAR</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_CBLVECTASTAR</full_name>
        <value>228</value>
        <docblock line="1976">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1976" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1982" package="global">
        <name>IF_TYPE_DOCSCABLEMCMTSDOWNSTREAM</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_DOCSCABLEMCMTSDOWNSTREAM</full_name>
        <value>229</value>
        <docblock line="1982">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1982" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1988" package="global">
        <name>IF_TYPE_ADSL2</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ADSL2</full_name>
        <value>230</value>
        <docblock line="1988">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1988" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1994" package="global">
        <name>IF_TYPE_MACSECCONTROLLEDIF</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_MACSECCONTROLLEDIF</full_name>
        <value>231</value>
        <docblock line="1994">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="1994" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="2000" package="global">
        <name>IF_TYPE_MACSECUNCONTROLLEDIF</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_MACSECUNCONTROLLEDIF</full_name>
        <value>232</value>
        <docblock line="2000">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="2000" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="2006" package="global">
        <name>IF_TYPE_AVICIOPTICALETHER</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_AVICIOPTICALETHER</full_name>
        <value>233</value>
        <docblock line="2006">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="2006" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="2012" package="global">
        <name>IF_TYPE_ATMBOND</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPE_ATMBOND</full_name>
        <value>234</value>
        <docblock line="2012">
          <description>Constant for possible type of an interface</description>
          <long-description></long-description>
          <tag name="see" line="2012" description="" link="\OSS_SNMP\MIBS\types()"/>
        </docblock>
      </constant>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS" line="147" package="global">
        <name>$IF_ADMIN_STATES</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_ADMIN_STATES</full_name>
        <default>array(self::IF_ADMIN_STATUS_UP =&gt; 'up', self::IF_ADMIN_STATUS_DOWN =&gt; 'down', self::IF_ADMIN_STATUS_TESTING =&gt; 'testing')</default>
        <docblock line="147">
          <description>Text representation of interface admin status.</description>
          <long-description></long-description>
          <tag name="see" line="147" description="" link="\OSS_SNMP\MIBS\adminStates()"/>
          <tag name="var" line="147" description="&lt;p&gt;Text representations of interface admin status.&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS" line="573" package="global">
        <name>$IF_OPER_STATES</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_OPER_STATES</full_name>
        <default>array(self::IF_OPER_STATUS_UP =&gt; 'up', self::IF_OPER_STATUS_DOWN =&gt; 'down', self::IF_OPER_STATUS_TESTING =&gt; 'testing', self::IF_OPER_STATUS_UNKNOWN =&gt; 'unknown', self::IF_OPER_STATUS_DORMANT =&gt; 'dormant', self::IF_OPER_STATUS_NOT_PRESENT =&gt; 'notPresent', self::IF_OPER_STATUS_LOWER_LAYER_DOWN =&gt; 'lowerLayerDown')</default>
        <docblock line="573">
          <description>Text representation of interface operating status.</description>
          <long-description></long-description>
          <tag name="see" line="573" description="" link="\OSS_SNMP\MIBS\operationStates()"/>
          <tag name="var" line="573" description="&lt;p&gt;Text representations of interface operating status.&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS" line="2020" package="global">
        <name>$IF_TYPES</name>
        <full_name>\OSS_SNMP\MIBS\Iface::IF_TYPES</full_name>
        <default>array(self::IF_TYPE_OTHER =&gt; 'other', self::IF_TYPE_REGULAR1822 =&gt; 'regular1822', self::IF_TYPE_HDH1822 =&gt; 'hdh1822', self::IF_TYPE_DDNX25 =&gt; 'ddnX25', self::IF_TYPE_RFC877X25 =&gt; 'rfc877x25', self::IF_TYPE_ETHERNETCSMACD =&gt; 'ethernetCsmacd', self::IF_TYPE_ISO88023CSMACD =&gt; 'iso88023Csmacd', self::IF_TYPE_ISO88024TOKENBUS =&gt; 'iso88024TokenBus', self::IF_TYPE_ISO88025TOKENRING =&gt; 'iso88025TokenRing', self::IF_TYPE_ISO88026MAN =&gt; 'iso88026Man', self::IF_TYPE_STARLAN =&gt; 'starLan', self::IF_TYPE_PROTEON10MBIT =&gt; 'proteon10Mbit', self::IF_TYPE_PROTEON80MBIT =&gt; 'proteon80Mbit', self::IF_TYPE_HYPERCHANNEL =&gt; 'hyperchannel', self::IF_TYPE_FDDI =&gt; 'fddi', self::IF_TYPE_LAPB =&gt; 'lapb', self::IF_TYPE_SDLC =&gt; 'sdlc', self::IF_TYPE_DS1 =&gt; 'ds1', self::IF_TYPE_E1 =&gt; 'e1', self::IF_TYPE_BASICISDN =&gt; 'basicISDN', self::IF_TYPE_PRIMARYISDN =&gt; 'primaryISDN', self::IF_TYPE_PROPPOINTTOPOINTSERIAL =&gt; 'propPointToPointSerial', self::IF_TYPE_PPP =&gt; 'ppp', self::IF_TYPE_SOFTWARELOOPBACK =&gt; 'softwareLoopback', self::IF_TYPE_EON =&gt; 'eon', self::IF_TYPE_ETHERNET3MBIT =&gt; 'ethernet3Mbit', self::IF_TYPE_NSIP =&gt; 'nsip', self::IF_TYPE_SLIP =&gt; 'slip', self::IF_TYPE_ULTRA =&gt; 'ultra', self::IF_TYPE_DS3 =&gt; 'ds3', self::IF_TYPE_SIP =&gt; 'sip', self::IF_TYPE_FRAMERELAY =&gt; 'frameRelay', self::IF_TYPE_RS232 =&gt; 'rs232', self::IF_TYPE_PARA =&gt; 'para', self::IF_TYPE_ARCNET =&gt; 'arcnet', self::IF_TYPE_ARCNETPLUS =&gt; 'arcnetPlus', self::IF_TYPE_ATM =&gt; 'atm', self::IF_TYPE_MIOX25 =&gt; 'miox25', self::IF_TYPE_SONET =&gt; 'sonet', self::IF_TYPE_X25PLE =&gt; 'x25ple', self::IF_TYPE_ISO88022LLC =&gt; 'iso88022llc', self::IF_TYPE_LOCALTALK =&gt; 'localTalk', self::IF_TYPE_SMDSDXI =&gt; 'smdsDxi', self::IF_TYPE_FRAMERELAYSERVICE =&gt; 'frameRelayService', self::IF_TYPE_V35 =&gt; 'v35', self::IF_TYPE_HSSI =&gt; 'hssi', self::IF_TYPE_HIPPI =&gt; 'hippi', self::IF_TYPE_MODEM =&gt; 'modem', self::IF_TYPE_AAL5 =&gt; 'aal5', self::IF_TYPE_SONETPATH =&gt; 'sonetPath', self::IF_TYPE_SONETVT =&gt; 'sonetVT', self::IF_TYPE_SMDSICIP =&gt; 'smdsIcip', self::IF_TYPE_PROPVIRTUAL =&gt; 'propVirtual', self::IF_TYPE_PROPMULTIPLEXOR =&gt; 'propMultiplexor', self::IF_TYPE_IEEE80212 =&gt; 'ieee80212', self::IF_TYPE_FIBRECHANNEL =&gt; 'fibreChannel', self::IF_TYPE_HIPPIINTERFACE =&gt; 'hippiInterface', self::IF_TYPE_FRAMERELAYINTERCONNECT =&gt; 'frameRelayInterconnect', self::IF_TYPE_AFLANE8023 =&gt; 'aflane8023', self::IF_TYPE_AFLANE8025 =&gt; 'aflane8025', self::IF_TYPE_CCTEMUL =&gt; 'cctEmul', self::IF_TYPE_FASTETHER =&gt; 'fastEther', self::IF_TYPE_ISDN =&gt; 'isdn', self::IF_TYPE_V11 =&gt; 'v11', self::IF_TYPE_V36 =&gt; 'v36', self::IF_TYPE_G703AT64K =&gt; 'g703at64k', self::IF_TYPE_G703AT2MB =&gt; 'g703at2mb', self::IF_TYPE_QLLC =&gt; 'qllc', self::IF_TYPE_FASTETHERFX =&gt; 'fastEtherFX', self::IF_TYPE_CHANNEL =&gt; 'channel', self::IF_TYPE_IEEE80211 =&gt; 'ieee80211', self::IF_TYPE_IBM370PARCHAN =&gt; 'ibm370parChan', self::IF_TYPE_ESCON =&gt; 'escon', self::IF_TYPE_DLSW =&gt; 'dlsw', self::IF_TYPE_ISDNS =&gt; 'isdns', self::IF_TYPE_ISDNU =&gt; 'isdnu', self::IF_TYPE_LAPD =&gt; 'lapd', self::IF_TYPE_IPSWITCH =&gt; 'ipSwitch', self::IF_TYPE_RSRB =&gt; 'rsrb', self::IF_TYPE_ATMLOGICAL =&gt; 'atmLogical', self::IF_TYPE_DS0 =&gt; 'ds0', self::IF_TYPE_DS0BUNDLE =&gt; 'ds0Bundle', self::IF_TYPE_BSC =&gt; 'bsc', self::IF_TYPE_ASYNC =&gt; 'async', self::IF_TYPE_CNR =&gt; 'cnr', self::IF_TYPE_ISO88025DTR =&gt; 'iso88025Dtr', self::IF_TYPE_EPLRS =&gt; 'eplrs', self::IF_TYPE_ARAP =&gt; 'arap', self::IF_TYPE_PROPCNLS =&gt; 'propCnls', self::IF_TYPE_HOSTPAD =&gt; 'hostPad', self::IF_TYPE_TERMPAD =&gt; 'termPad', self::IF_TYPE_FRAMERELAYMPI =&gt; 'frameRelayMPI', self::IF_TYPE_X213 =&gt; 'x213', self::IF_TYPE_ADSL =&gt; 'adsl', self::IF_TYPE_RADSL =&gt; 'radsl', self::IF_TYPE_SDSL =&gt; 'sdsl', self::IF_TYPE_VDSL =&gt; 'vdsl', self::IF_TYPE_ISO88025CRFPINT =&gt; 'iso88025CRFPInt', self::IF_TYPE_MYRINET =&gt; 'myrinet', self::IF_TYPE_VOICEEM =&gt; 'voiceEM', self::IF_TYPE_VOICEFXO =&gt; 'voiceFXO', self::IF_TYPE_VOICEFXS =&gt; 'voiceFXS', self::IF_TYPE_VOICEENCAP =&gt; 'voiceEncap', self::IF_TYPE_VOICEOVERIP =&gt; 'voiceOverIp', self::IF_TYPE_ATMDXI =&gt; 'atmDxi', self::IF_TYPE_ATMFUNI =&gt; 'atmFuni', self::IF_TYPE_ATMIMA =&gt; 'atmIma', self::IF_TYPE_PPPMULTILINKBUNDLE =&gt; 'pppMultilinkBundle', self::IF_TYPE_IPOVERCDLC =&gt; 'ipOverCdlc', self::IF_TYPE_IPOVERCLAW =&gt; 'ipOverClaw', self::IF_TYPE_STACKTOSTACK =&gt; 'stackToStack', self::IF_TYPE_VIRTUALIPADDRESS =&gt; 'virtualIpAddress', self::IF_TYPE_MPC =&gt; 'mpc', self::IF_TYPE_IPOVERATM =&gt; 'ipOverAtm', self::IF_TYPE_ISO88025FIBER =&gt; 'iso88025Fiber', self::IF_TYPE_TDLC =&gt; 'tdlc', self::IF_TYPE_GIGABITETHERNET =&gt; 'gigabitEthernet', self::IF_TYPE_HDLC =&gt; 'hdlc', self::IF_TYPE_LAPF =&gt; 'lapf', self::IF_TYPE_V37 =&gt; 'v37', self::IF_TYPE_X25MLP =&gt; 'x25mlp', self::IF_TYPE_X25HUNTGROUP =&gt; 'x25huntGroup', self::IF_TYPE_TRASNPHDLC =&gt; 'trasnpHdlc', self::IF_TYPE_INTERLEAVE =&gt; 'interleave', self::IF_TYPE_FAST =&gt; 'fast', self::IF_TYPE_IP =&gt; 'ip', self::IF_TYPE_DOCSCABLEMACLAYER =&gt; 'docsCableMaclayer', self::IF_TYPE_DOCSCABLEDOWNSTREAM =&gt; 'docsCableDownstream', self::IF_TYPE_DOCSCABLEUPSTREAM =&gt; 'docsCableUpstream', self::IF_TYPE_A12MPPSWITCH =&gt; 'a12MppSwitch', self::IF_TYPE_TUNNEL =&gt; 'tunnel', self::IF_TYPE_COFFEE =&gt; 'coffee', self::IF_TYPE_CES =&gt; 'ces', self::IF_TYPE_ATMSUBINTERFACE =&gt; 'atmSubInterface', self::IF_TYPE_L2VLAN =&gt; 'l2vlan', self::IF_TYPE_L3IPVLAN =&gt; 'l3ipvlan', self::IF_TYPE_L3IPXVLAN =&gt; 'l3ipxvlan', self::IF_TYPE_DIGITALPOWERLINE =&gt; 'digitalPowerline', self::IF_TYPE_MEDIAMAILOVERIP =&gt; 'mediaMailOverIp', self::IF_TYPE_DTM =&gt; 'dtm', self::IF_TYPE_DCN =&gt; 'dcn', self::IF_TYPE_IPFORWARD =&gt; 'ipForward', self::IF_TYPE_MSDSL =&gt; 'msdsl', self::IF_TYPE_IEEE1394 =&gt; 'ieee1394', self::IF_TYPE_IF_GSN =&gt; 'if-gsn', self::IF_TYPE_DVBRCCMACLAYER =&gt; 'dvbRccMacLayer', self::IF_TYPE_DVBRCCDOWNSTREAM =&gt; 'dvbRccDownstream', self::IF_TYPE_DVBRCCUPSTREAM =&gt; 'dvbRccUpstream', self::IF_TYPE_ATMVIRTUAL =&gt; 'atmVirtual', self::IF_TYPE_MPLSTUNNEL =&gt; 'mplsTunnel', self::IF_TYPE_SRP =&gt; 'srp', self::IF_TYPE_VOICEOVERATM =&gt; 'voiceOverAtm', self::IF_TYPE_VOICEOVERFRAMERELAY =&gt; 'voiceOverFrameRelay', self::IF_TYPE_IDSL =&gt; 'idsl', self::IF_TYPE_COMPOSITELINK =&gt; 'compositeLink', self::IF_TYPE_SS7SIGLINK =&gt; 'ss7SigLink', self::IF_TYPE_PROPWIRELESSP2P =&gt; 'propWirelessP2P', self::IF_TYPE_FRFORWARD =&gt; 'frForward', self::IF_TYPE_RFC1483 =&gt; 'rfc1483', self::IF_TYPE_USB =&gt; 'usb', self::IF_TYPE_IEEE8023ADLAG =&gt; 'ieee8023adLag', self::IF_TYPE_BGPPOLICYACCOUNTING =&gt; 'bgppolicyaccounting', self::IF_TYPE_FRF16MFRBUNDLE =&gt; 'frf16MfrBundle', self::IF_TYPE_H323GATEKEEPER =&gt; 'h323Gatekeeper', self::IF_TYPE_H323PROXY =&gt; 'h323Proxy', self::IF_TYPE_MPLS =&gt; 'mpls', self::IF_TYPE_MFSIGLINK =&gt; 'mfSigLink', self::IF_TYPE_HDSL2 =&gt; 'hdsl2', self::IF_TYPE_SHDSL =&gt; 'shdsl', self::IF_TYPE_DS1FDL =&gt; 'ds1FDL', self::IF_TYPE_POS =&gt; 'pos', self::IF_TYPE_DVBASIIN =&gt; 'dvbAsiIn', self::IF_TYPE_DVBASIOUT =&gt; 'dvbAsiOut', self::IF_TYPE_PLC =&gt; 'plc', self::IF_TYPE_NFAS =&gt; 'nfas', self::IF_TYPE_TR008 =&gt; 'tr008', self::IF_TYPE_GR303RDT =&gt; 'gr303RDT', self::IF_TYPE_GR303IDT =&gt; 'gr303IDT', self::IF_TYPE_ISUP =&gt; 'isup', self::IF_TYPE_PROPDOCSWIRELESSMACLAYER =&gt; 'propDocsWirelessMaclayer', self::IF_TYPE_PROPDOCSWIRELESSDOWNSTREAM =&gt; 'propDocsWirelessDownstream', self::IF_TYPE_PROPDOCSWIRELESSUPSTREAM =&gt; 'propDocsWirelessUpstream', self::IF_TYPE_HIPERLAN2 =&gt; 'hiperlan2', self::IF_TYPE_PROPBWAP2MP =&gt; 'propBWAp2Mp', self::IF_TYPE_SONETOVERHEADCHANNEL =&gt; 'sonetOverheadChannel', self::IF_TYPE_DIGITALWRAPPEROVERHEADCHANNEL =&gt; 'digitalWrapperOverheadChannel', self::IF_TYPE_AAL2 =&gt; 'aal2', self::IF_TYPE_RADIOMAC =&gt; 'radioMAC', self::IF_TYPE_ATMRADIO =&gt; 'atmRadio', self::IF_TYPE_IMT =&gt; 'imt', self::IF_TYPE_MVL =&gt; 'mvl', self::IF_TYPE_REACHDSL =&gt; 'reachDSL', self::IF_TYPE_FRDLCIENDPT =&gt; 'frDlciEndPt', self::IF_TYPE_ATMVCIENDPT =&gt; 'atmVciEndPt', self::IF_TYPE_OPTICALCHANNEL =&gt; 'opticalChannel', self::IF_TYPE_OPTICALTRANSPORT =&gt; 'opticalTransport', self::IF_TYPE_PROPATM =&gt; 'propAtm', self::IF_TYPE_VOICEOVERCABLE =&gt; 'voiceOverCable', self::IF_TYPE_INFINIBAND =&gt; 'infiniband', self::IF_TYPE_TELINK =&gt; 'teLink', self::IF_TYPE_Q2931 =&gt; 'q2931', self::IF_TYPE_VIRTUALTG =&gt; 'virtualTg', self::IF_TYPE_SIPTG =&gt; 'sipTg', self::IF_TYPE_SIPSIG =&gt; 'sipSig', self::IF_TYPE_DOCSCABLEUPSTREAMCHANNEL =&gt; 'docsCableUpstreamChannel', self::IF_TYPE_ECONET =&gt; 'econet', self::IF_TYPE_PON155 =&gt; 'pon155', self::IF_TYPE_PON622 =&gt; 'pon622', self::IF_TYPE_BRIDGE =&gt; 'bridge', self::IF_TYPE_LINEGROUP =&gt; 'linegroup', self::IF_TYPE_VOICEEMFGD =&gt; 'voiceEMFGD', self::IF_TYPE_VOICEFGDEANA =&gt; 'voiceFGDEANA', self::IF_TYPE_VOICEDID =&gt; 'voiceDID', self::IF_TYPE_MPEGTRANSPORT =&gt; 'mpegTransport', self::IF_TYPE_SIXTOFOUR =&gt; 'sixToFour', self::IF_TYPE_GTP =&gt; 'gtp', self::IF_TYPE_PDNETHERLOOP1 =&gt; 'pdnEtherLoop1', self::IF_TYPE_PDNETHERLOOP2 =&gt; 'pdnEtherLoop2', self::IF_TYPE_OPTICALCHANNELGROUP =&gt; 'opticalChannelGroup', self::IF_TYPE_HOMEPNA =&gt; 'homepna', self::IF_TYPE_GFP =&gt; 'gfp', self::IF_TYPE_CISCOISLVLAN =&gt; 'ciscoISLvlan', self::IF_TYPE_ACTELISMETALOOP =&gt; 'actelisMetaLOOP', self::IF_TYPE_FCIPLINK =&gt; 'fcipLink', self::IF_TYPE_RPR =&gt; 'rpr', self::IF_TYPE_QAM =&gt; 'qam', self::IF_TYPE_LMP =&gt; 'lmp', self::IF_TYPE_CBLVECTASTAR =&gt; 'cblVectaStar', self::IF_TYPE_DOCSCABLEMCMTSDOWNSTREAM =&gt; 'docsCableMCmtsDownstream', self::IF_TYPE_ADSL2 =&gt; 'adsl2', self::IF_TYPE_MACSECCONTROLLEDIF =&gt; 'macSecControlledIF', self::IF_TYPE_MACSECUNCONTROLLEDIF =&gt; 'macSecUncontrolledIF', self::IF_TYPE_AVICIOPTICALETHER =&gt; 'aviciOpticalEther', self::IF_TYPE_ATMBOND =&gt; 'atmbond')</default>
        <docblock line="2020">
          <description>Text representation of interface types.</description>
          <long-description></long-description>
          <tag name="see" line="2020" description="" link="\OSS_SNMP\MIBS\types()"/>
          <tag name="var" line="2020" description="&lt;p&gt;Text representations of interface types.&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="82" package="global">
        <name>numberOfInterfaces</name>
        <full_name>\OSS_SNMP\MIBS\Iface::numberOfInterfaces()</full_name>
        <docblock line="82">
          <description>Get the number of network interfaces (regardless of
their current state) present on this system.</description>
          <long-description></long-description>
          <tag name="return" line="82" description="The number of network interfaces on the system" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="93" package="global">
        <name>mtus</name>
        <full_name>\OSS_SNMP\MIBS\Iface::mtus()</full_name>
        <docblock line="93">
          <description>Get an array of device MTUs</description>
          <long-description></long-description>
          <tag name="return" line="93" description="An array of device MTUs" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="109" package="global">
        <name>physAddresses</name>
        <full_name>\OSS_SNMP\MIBS\Iface::physAddresses()</full_name>
        <docblock line="109">
          <description>Get an array of the interfaces' physical addresses</description>
          <long-description>"The interface's address at the protocol layer
immediately `below' the network layer in the
protocol stack.  For interfaces which do not have
such an address (e.g., a serial line), this object
should contain an octet string of zero length."</long-description>
          <tag name="return" line="109" description="An array of device physical addresses" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="169" package="global">
        <name>adminStates</name>
        <full_name>\OSS_SNMP\MIBS\Iface::adminStates()</full_name>
        <docblock line="169">
          <description>Get an array of device interface admin status (up / down)</description>
          <long-description>E.g. the follow SNMP output yields the shown array:

.1.3.6.1.2.1.2.2.1.7.10128 = INTEGER: up(1)
.1.3.6.1.2.1.2.2.1.7.10129 = INTEGER: down(2)
...

     [10128] =&gt; 1
     [10129] =&gt; 2</long-description>
          <tag name="see" line="169" description="" link="\OSS_SNMP\MIBS\IF_ADMIN_STATES"/>
          <tag name="param" line="169" description="&lt;p&gt;If true, return the string representation&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="169" description="An array of interface admin states" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="195" package="global">
        <name>lastChanges</name>
        <full_name>\OSS_SNMP\MIBS\Iface::lastChanges()</full_name>
        <docblock line="195">
          <description>Get an array of device interface last change times</description>
          <long-description>Value returned is timeticks (one hundreds of a second)

"The value of sysUpTime at the time the interface
entered its current operational state.  If the
current state was entered prior to the last re-
initialization of the local network management
subsystem, then this object contains a zero
value."</long-description>
          <tag name="see" line="195" description="" link="\OSS_SNMP\MIBS\System::uptime()"/>
          <tag name="param" line="195" description="&lt;p&gt;Poll sysUpTime and use this to return a timestamp of the last change&lt;/p&gt;" type="bool" variable="$asUnixTimestamp">
            <type>bool</type>
          </tag>
          <tag name="return" line="195" description="Timeticks (or zero) since last change of the interfaces" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$asUnixTimestamp</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="219" package="global">
        <name>inOctets</name>
        <full_name>\OSS_SNMP\MIBS\Iface::inOctets()</full_name>
        <docblock line="219">
          <description>Get an array of device interface in octets</description>
          <long-description>"The total number of octets received on the
interface, including framing characters."</long-description>
          <tag name="return" line="219" description="The total number of octets received on interfaces" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="232" package="global">
        <name>inUnicastPackets</name>
        <full_name>\OSS_SNMP\MIBS\Iface::inUnicastPackets()</full_name>
        <docblock line="232">
          <description>Get an array of device interface unicast packets in</description>
          <long-description>"The number of subnetwork-unicast packets
delivered to a higher-layer protocol."</long-description>
          <tag name="return" line="232" description="The total number of unicast packets received on interfaces" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="246" package="global">
        <name>inNonUnicastPackets</name>
        <full_name>\OSS_SNMP\MIBS\Iface::inNonUnicastPackets()</full_name>
        <docblock line="246">
          <description>Get an array of device interface non-unicast packets in</description>
          <long-description>"The number of non-unicast (i.e., subnetwork-
broadcast or subnetwork-multicast) packets
delivered to a higher-layer protocol."</long-description>
          <tag name="return" line="246" description="The total number of non-unicast packets received on interfaces" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="263" package="global">
        <name>inDiscards</name>
        <full_name>\OSS_SNMP\MIBS\Iface::inDiscards()</full_name>
        <docblock line="263">
          <description>Get an array of device interface inbound discarded packets</description>
          <long-description>"The number of inbound packets which were chosen
to be discarded even though no errors had been
detected to prevent their being deliverable to a
higher-layer protocol.  One possible reason for
discarding such a packet could be to free up
buffer space."</long-description>
          <tag name="return" line="263" description="The total number of discarded inbound packets received on interfaces" type="\OSS_SNMP\MIBS\arrary">
            <type>\OSS_SNMP\MIBS\arrary</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="277" package="global">
        <name>inErrors</name>
        <full_name>\OSS_SNMP\MIBS\Iface::inErrors()</full_name>
        <docblock line="277">
          <description>Get an array of device interface inbound error packets</description>
          <long-description>"The number of inbound packets that contained
errors preventing them from being deliverable to a
higher-layer protocol."</long-description>
          <tag name="return" line="277" description="The total number of error inbound packets received on interfaces" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="296" package="global">
        <name>outOctets</name>
        <full_name>\OSS_SNMP\MIBS\Iface::outOctets()</full_name>
        <docblock line="296">
          <description>Get an array of device interface out octets</description>
          <long-description>"The total number of octets transmitted out of the
interface, including framing characters."</long-description>
          <tag name="return" line="296" description="The total number of octets transmitted on interfaces" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="311" package="global">
        <name>outUnicastPackets</name>
        <full_name>\OSS_SNMP\MIBS\Iface::outUnicastPackets()</full_name>
        <docblock line="311">
          <description>Get an array of device interface unicast packets out</description>
          <long-description>"The total number of packets that higher-level
protocols requested be transmitted to a
subnetwork-unicast address, including those that
were discarded or not sent."</long-description>
          <tag name="return" line="311" description="The total number of unicast packets transmitted on interfaces" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="327" package="global">
        <name>outNonUnicastPackets</name>
        <full_name>\OSS_SNMP\MIBS\Iface::outNonUnicastPackets()</full_name>
        <docblock line="327">
          <description>Get an array of device interface non-unicast packets out</description>
          <long-description>"The total number of packets that higher-level
protocols requested be transmitted to a non-
unicast (i.e., a subnetwork-broadcast or
subnetwork-multicast) address, including those
that were discarded or not sent."</long-description>
          <tag name="return" line="327" description="The total number of non-unicast packets requested sent interfaces" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="343" package="global">
        <name>outDiscards</name>
        <full_name>\OSS_SNMP\MIBS\Iface::outDiscards()</full_name>
        <docblock line="343">
          <description>Get an array of device interface outbound discarded packets</description>
          <long-description>"The number of outbound packets which were chosen
to be discarded even though no errors had been
detected to prevent their being transmitted.  One
possible reason for discarding such a packet could
be to free up buffer space."</long-description>
          <tag name="return" line="343" description="The total number of discarded outbound packets" type="\OSS_SNMP\MIBS\arrary">
            <type>\OSS_SNMP\MIBS\arrary</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="356" package="global">
        <name>outErrors</name>
        <full_name>\OSS_SNMP\MIBS\Iface::outErrors()</full_name>
        <docblock line="356">
          <description>Get an array of device interface outbound error packets</description>
          <long-description>"The number of outbound packets that could not be
transmitted because of errors."</long-description>
          <tag name="return" line="356" description="The total number of error outbound packets received on interfaces" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="368" package="global">
        <name>outQueueLength</name>
        <full_name>\OSS_SNMP\MIBS\Iface::outQueueLength()</full_name>
        <docblock line="368">
          <description>Get an array of interface outbound queue lengths</description>
          <long-description>"The length of the output packet queue (in packets)"</long-description>
          <tag name="return" line="368" description="The total number of packets in the outbound queues" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="386" package="global">
        <name>inUnknownProtocols</name>
        <full_name>\OSS_SNMP\MIBS\Iface::inUnknownProtocols()</full_name>
        <docblock line="386">
          <description>Get an array of packets received on an interface of unknown protocol</description>
          <long-description>"The number of packets received via the interface
which were discarded because of an unknown or
unsupported protocol."</long-description>
          <tag name="return" line="386" description="The number of packets received on an interface of unknown protocol" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="405" package="global">
        <name>indexes</name>
        <full_name>\OSS_SNMP\MIBS\Iface::indexes()</full_name>
        <docblock line="405">
          <description>Get an array of device interface indexes</description>
          <long-description>E.g. the following SNMP output yields the shown array:

.1.3.6.1.2.1.2.2.1.1 = INTEGER: 1
.1.3.6.1.2.1.2.2.1.2 = INTEGER: 2
...

     [1] =&gt; 1
     [2] =&gt; 2</long-description>
          <tag name="return" line="405" description="An array of interface indexes" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="424" package="global">
        <name>names</name>
        <full_name>\OSS_SNMP\MIBS\Iface::names()</full_name>
        <docblock line="424">
          <description>Get an array of device interface names</description>
          <long-description>E.g. the following SNMP output yields the shown array:

.1.3.6.1.2.1.31.1.1.1.1.10128 = STRING: Gi1/0/28
.1.3.6.1.2.1.31.1.1.1.1.10129 = STRING: Gi1/0/29
...

     [10128] =&gt; "Gi1/0/28"
     [10129] =&gt; "Gi1/0/29"</long-description>
          <tag name="return" line="424" description="An array of interface names" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="443" package="global">
        <name>aliases</name>
        <full_name>\OSS_SNMP\MIBS\Iface::aliases()</full_name>
        <docblock line="443">
          <description>Get an array of device interface aliases (e.g. as set by the interface description / port-name parameter)</description>
          <long-description>E.g. the followig SNMP output yields the shown array:

.1.3.6.1.2.1.2.2.1.2.18.10128 = STRING: Connection to switch2
.1.3.6.1.2.1.2.2.1.2.18.10129 = STRING: Connection to switch3
...

     [10128] =&gt; "Connection to switch2"
     [10129] =&gt; "Connection to switch3"</long-description>
          <tag name="return" line="443" description="An array of interface aliases" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="462" package="global">
        <name>descriptions</name>
        <full_name>\OSS_SNMP\MIBS\Iface::descriptions()</full_name>
        <docblock line="462">
          <description>Get an array of device interface descriptions</description>
          <long-description>E.g. the following SNMP output yields the shown array:

.1.3.6.1.2.1.31.1.1.1.1.10128 = STRING: GigabitEthernet1/0/28
.1.3.6.1.2.1.31.1.1.1.1.10129 = STRING: GigabitEthernet1/0/29
...

     [10128] =&gt; "GigabitEthernet1/0/28"
     [10129] =&gt; "GigabitEthernet1/0/29"</long-description>
          <tag name="return" line="462" description="An array of interface descriptions" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="491" package="global">
        <name>speeds</name>
        <full_name>\OSS_SNMP\MIBS\Iface::speeds()</full_name>
        <docblock line="491">
          <description>Get an array of device interface (operating) speeds</description>
          <long-description>E.g. the following SNMP output yields the shown array:

.1.3.6.1.2.1.2.2.1.5.10128 = Gauge32: 1000000000
.1.3.6.1.2.1.2.2.1.5.10129 = Gauge32: 100000000
...

     [10128] =&gt; 1000000000
     [10129] =&gt; 100000000

NB: operating speed as opposed to maximum speed

**WARNING:** This is a 32 bit int so it cannot represent 10Gb
links. These would show up as:

     [10127] =&gt; 4294967295

Instead, use highSpeeds() which will represent the speed as Mbps</long-description>
          <tag name="see" line="491" description="" link="\OSS_SNMP\MIBS\highSpeeds()"/>
          <tag name="return" line="491" description="An array of interface operating speeds" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="523" package="global">
        <name>highSpeeds</name>
        <full_name>\OSS_SNMP\MIBS\Iface::highSpeeds()</full_name>
        <docblock line="523">
          <description>Get an array of device interface (operating) speeds</description>
          <long-description>From Cisco:

&gt; "An estimate of the interface's current bandwidth in units
&gt; of 1,000,000 bits per second. If this object reports a
&gt; value of `n' then the speed of the interface is somewhere in
&gt; the range of `n-500,000' to `n+499,999'. For interfaces
&gt; which do not vary in bandwidth or for those where no
&gt; accurate estimation can be made, this object should contain
&gt; the nominal bandwidth. For a sub-layer which has no concept
&gt; of bandwidth, this object should be zero."

E.g. the following SNMP output yields the shown array:

.1.3.6.1.2.1.2.2.1.5.10127 = Gauge32: 10000
.1.3.6.1.2.1.2.2.1.5.10128 = Gauge32: 1000
.1.3.6.1.2.1.2.2.1.5.10129 = Gauge32: 100
...

     [10127] =&gt; 10000000000
     [10128] =&gt; 1000000000
     [10129] =&gt; 100000000</long-description>
          <tag name="return" line="523" description="An array of interface operating speeds" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="599" package="global">
        <name>operationStates</name>
        <full_name>\OSS_SNMP\MIBS\Iface::operationStates()</full_name>
        <docblock line="599">
          <description>Get an array of device interface operating status (up / down)</description>
          <long-description>E.g. the follow SNMP output yields the shown array:

.1.3.6.1.2.1.2.2.1.8.10128 = INTEGER: up(1)
.1.3.6.1.2.1.2.2.1.8.10129 = INTEGER: down(2)
...

     [10128] =&gt; 1
     [10129] =&gt; 2</long-description>
          <tag name="see" line="599" description="" link="\OSS_SNMP\MIBS\IF_OPER_STATES"/>
          <tag name="param" line="599" description="&lt;p&gt;If true, return the string representation&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="599" description="An array of interface states" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="2264" package="global">
        <name>types</name>
        <full_name>\OSS_SNMP\MIBS\Iface::types()</full_name>
        <docblock line="2264">
          <description>Get an array of device interface types</description>
          <long-description></long-description>
          <tag name="see" line="2264" description="" link="\OSS_SNMP\MIBS\$IF_TYPES"/>
          <tag name="param" line="2264" description="&lt;p&gt;If true, return the string representation&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2264" description="An array of interface types" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="2282" package="global">
        <name>bridgeBasePortIfIndexes</name>
        <full_name>\OSS_SNMP\MIBS\Iface::bridgeBasePortIfIndexes()</full_name>
        <docblock line="2282">
          <description>Returns an associate array of STP port IDs (key) to interface IDs (value)</description>
          <long-description>e.g.  [22] =&gt; 10122</long-description>
          <tag name="return" line="2282" description="Associate array of STP port IDs (key) to interface IDs (value)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source></source>
  </file>
  <file path="MIBS/Cisco/VTP.php" generated-path="MIBS.Cisco.VTP.html" hash="de454a7d795291d4db3021e117955137" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Cisco" line="44" package="global">
      <extends>\OSS_SNMP\MIBS\Cisco</extends>
      <name>VTP</name>
      <full_name>\OSS_SNMP\MIBS\Cisco\VTP</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on Cisco devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="48" package="global">
        <name>OID_VTP_VLAN_STATUS</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::OID_VTP_VLAN_STATUS</full_name>
        <value>'.1.3.6.1.4.1.9.9.46.1.3.1.1.2.1'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="49" package="global">
        <name>OID_VTP_VLAN_TYPE</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::OID_VTP_VLAN_TYPE</full_name>
        <value>'.1.3.6.1.4.1.9.9.46.1.3.1.1.3.1'</value>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="50" package="global">
        <name>OID_VTP_VLAN_NAME</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::OID_VTP_VLAN_NAME</full_name>
        <value>'.1.3.6.1.4.1.9.9.46.1.3.1.1.4.1'</value>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="53" package="global">
        <name>OID_STP_X_RSTP_PORT_ROLE</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::OID_STP_X_RSTP_PORT_ROLE</full_name>
        <value>'.1.3.6.1.4.1.9.9.82.1.12.2.1.3'</value>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="60" package="global">
        <name>VTP_VLAN_STATE_OPERATIONAL</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::VTP_VLAN_STATE_OPERATIONAL</full_name>
        <value>1</value>
        <docblock line="60">
          <description>Constant for possible value of VTP VLAN status.</description>
          <long-description></long-description>
          <tag name="see" line="60" description="" link="\OSS_SNMP\MIBS\Cisco\vlanStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="66" package="global">
        <name>VTP_VLAN_STATE_SUSPENDED</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::VTP_VLAN_STATE_SUSPENDED</full_name>
        <value>2</value>
        <docblock line="66">
          <description>Constant for possible value of VTP VLAN status.</description>
          <long-description></long-description>
          <tag name="see" line="66" description="" link="\OSS_SNMP\MIBS\Cisco\vlanStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="72" package="global">
        <name>VTP_VLAN_STATE_MTU_TOO_BIG_FOR_DEVICE</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::VTP_VLAN_STATE_MTU_TOO_BIG_FOR_DEVICE</full_name>
        <value>3</value>
        <docblock line="72">
          <description>Constant for possible value of VTP VLAN status.</description>
          <long-description></long-description>
          <tag name="see" line="72" description="" link="\OSS_SNMP\MIBS\Cisco\vlanStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="78" package="global">
        <name>VTP_VLAN_STATE_MTU_TOO_BIG_FOR_TRUNK</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::VTP_VLAN_STATE_MTU_TOO_BIG_FOR_TRUNK</full_name>
        <value>4</value>
        <docblock line="78">
          <description>Constant for possible value of VTP VLAN status.</description>
          <long-description></long-description>
          <tag name="see" line="78" description="" link="\OSS_SNMP\MIBS\Cisco\vlanStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="119" package="global">
        <name>VTP_VLAN_TYPE_ETHERNET</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::VTP_VLAN_TYPE_ETHERNET</full_name>
        <value>1</value>
        <docblock line="119">
          <description>Constant for possible value of VTP VLAN type.</description>
          <long-description></long-description>
          <tag name="see" line="119" description="" link="\OSS_SNMP\MIBS\Cisco\vlanTypes()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="125" package="global">
        <name>VTP_VLAN_TYPE_FDDI</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::VTP_VLAN_TYPE_FDDI</full_name>
        <value>2</value>
        <docblock line="125">
          <description>Constant for possible value of VTP VLAN type.</description>
          <long-description></long-description>
          <tag name="see" line="125" description="" link="\OSS_SNMP\MIBS\Cisco\vlanTypes()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="131" package="global">
        <name>VTP_VLAN_TYPE_TOKEN_RING</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::VTP_VLAN_TYPE_TOKEN_RING</full_name>
        <value>3</value>
        <docblock line="131">
          <description>Constant for possible value of VTP VLAN type.</description>
          <long-description></long-description>
          <tag name="see" line="131" description="" link="\OSS_SNMP\MIBS\Cisco\vlanTypes()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="137" package="global">
        <name>VTP_VLAN_TYPE_FDDI_NET</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::VTP_VLAN_TYPE_FDDI_NET</full_name>
        <value>4</value>
        <docblock line="137">
          <description>Constant for possible value of VTP VLAN type.</description>
          <long-description></long-description>
          <tag name="see" line="137" description="" link="\OSS_SNMP\MIBS\Cisco\vlanTypes()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="143" package="global">
        <name>VTP_VLAN_TYPE_TR_NET</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::VTP_VLAN_TYPE_TR_NET</full_name>
        <value>5</value>
        <docblock line="143">
          <description>Constant for possible value of VTP VLAN type.</description>
          <long-description></long-description>
          <tag name="see" line="143" description="" link="\OSS_SNMP\MIBS\Cisco\vlanTypes()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="149" package="global">
        <name>VTP_VLAN_TYPE_DEPRECATED</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::VTP_VLAN_TYPE_DEPRECATED</full_name>
        <value>6</value>
        <docblock line="149">
          <description>Constant for possible value of VTP VLAN type.</description>
          <long-description></long-description>
          <tag name="see" line="149" description="" link="\OSS_SNMP\MIBS\Cisco\vlanTypes()"/>
        </docblock>
      </constant>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="86" package="global">
        <name>$VTP_VLAN_STATES</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::VTP_VLAN_STATES</full_name>
        <default>array(self::VTP_VLAN_STATE_OPERATIONAL =&gt; 'operational', self::VTP_VLAN_STATE_SUSPENDED =&gt; 'suspended', self::VTP_VLAN_STATE_MTU_TOO_BIG_FOR_DEVICE =&gt; 'mtuTooBigForDevice', self::VTP_VLAN_STATE_MTU_TOO_BIG_FOR_TRUNK =&gt; 'mtuTooBigForTrunk')</default>
        <docblock line="86">
          <description>Text representation of VTP VLAN status.</description>
          <long-description></long-description>
          <tag name="see" line="86" description="" link="\OSS_SNMP\MIBS\Cisco\vlanStates()"/>
          <tag name="var" line="86" description="&lt;p&gt;Text representations of VTP VLAN status.&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="157" package="global">
        <name>$VTP_VLAN_TYPES</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::VTP_VLAN_TYPES</full_name>
        <default>array(self::VTP_VLAN_TYPE_ETHERNET =&gt; 'ethernet', self::VTP_VLAN_TYPE_FDDI =&gt; 'fddi', self::VTP_VLAN_TYPE_TOKEN_RING =&gt; 'tokenRing', self::VTP_VLAN_TYPE_FDDI_NET =&gt; 'fddiNet', self::VTP_VLAN_TYPE_TR_NET =&gt; 'trNet', self::VTP_VLAN_TYPE_DEPRECATED =&gt; 'deprecated')</default>
        <docblock line="157">
          <description>Text representation of VTP VLAN types.</description>
          <long-description></long-description>
          <tag name="see" line="157" description="" link="\OSS_SNMP\MIBS\Cisco\vlanTypes()"/>
          <tag name="var" line="157" description="&lt;p&gt;Text representations of VTP VLAN types.&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS\Cisco" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="102" package="global">
        <name>vlanStates</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::vlanStates()</full_name>
        <docblock line="102">
          <description>Get the device's VTP VLAN States (indexed by VLAN ID)</description>
          <long-description></long-description>
          <tag name="see" line="102" description="" link="\OSS_SNMP\MIBS\Cisco\$VTP_VLAN_STATES"/>
          <tag name="see" line="102" description="and others" link="\OSS_SNMP\MIBS\Cisco\VTP_VLAN_STATE_OPERATIONAL"/>
          <tag name="param" line="102" description="&lt;p&gt;If true, return the string representation via self::$VTP_VLAN_TYPES&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="102" description="The device's VTP VLAN States (indexed by VLAN ID)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="175" package="global">
        <name>vlanTypes</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::vlanTypes()</full_name>
        <docblock line="175">
          <description>Get the device's VTP VLAN Types (indexed by VLAN ID)</description>
          <long-description></long-description>
          <tag name="see" line="175" description="" link="\OSS_SNMP\MIBS\Cisco\$VTP_VLAN_TYPES"/>
          <tag name="see" line="175" description="and others" link="\OSS_SNMP\MIBS\Cisco\VTP_VLAN_TYPE_ETHERNET"/>
          <tag name="param" line="175" description="&lt;p&gt;If true, return the string representation via self::$VTP_VLAN_TYPES&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="175" description="The device's VTP VLAN types (indexed by VLAN ID)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="190" package="global">
        <name>vlanNames</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\VTP::vlanNames()</full_name>
        <docblock line="190">
          <description>Get the device's VTP VLAN names (indexed by VLAN ID)</description>
          <long-description></long-description>
          <tag name="return" line="190" description="The device's VTP VLAN names (indexed by VLAN ID)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Platforms/vendor_mrv.php" generated-path="Platforms.vendor_mrv.html" hash="b04e0d8ccba27e3557f7001a1c7d0098" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1Vttu4zYQffdXDBYBbKeKvZtFgTbpbiFLTExAllxRduJuFgtZomMismiQdIy06L93SMm5Nb281C9SSM6Zc86Mhvnp5+162+kMjzuAv0BuH5S4XRvoFX04ff/hFE7s46MHyZbXwOROFRwf1c4IWWuIxEYYXnoQ7paVqD2gild5XTo0v6rAoWlQXHN1z8tBp81Tm7wwZzDKlXqApBvKWt7nNWZbupVebvogMaV+TNUrJa4J7gDWxmzPhsP9fj94cWog+LBJka2FhpWoOOBzmysDcgVmzSFh7BuLJ1NcLO7yW95SSnkptFFi6YAANcBOY3ANuhFtV5aizpHdSqqN9mAvzBqkck+5Mw5mI0uxEkVuQTzIFYctV+gRmgRbJe9FiS9mnRvHZSWrSu5FfQuFrEvRCLVBG27OGl7Hr5hpq6OlVMgSj+60QX9NjlQtZr6U93arraQDAailEQX38ATaUSGehXmetC5fMcKkRZWLDVeDvyGCCZ8ZciCCKssdkvt/uECjskUqZbHbcOylQ82GWA6J+wo2ueFK5JV+st3VywI/l3EQF3Ph4ux+nW+45fSPPY8y1DMqNsbVRmC7o5gmgVQamTzAkttuQlkSeF3iKreNg8w20nBoLDP6oAqJ47cCK9xuTNJyZfa2L9pWA73lhe0zDBW2A5XtsLrpNa2drOYrGFMGLLnIrvyUAL5P02ROQxLCaIGbBIJkukjp5TiDcRKFJGXgxyGuxllKR7MswYV3PsPId3aj+azjBZDraUoYgyQFOplGFAExQ+rHGSUMp0AcRLOQxpceIAjESQYRndAMj2WJ5xK3YQ7xKRSSC5iQNBjjn/6IRjRbOEIXNIttvgtM6MPUTzMazCI/heksnSaMAMpzUCFlQeTTCQkHyAIzA5mTOAM29qPoleLkKiaplfBC7oggV38UkSZZvGhxUxJkVtnTW4BGIs3IAzYlAbUv5JqgLj9deC0uI7/M8BBuQuhP/EvCHFzvXxzCMgWzlEwsdbSEzUYso9ksI3CZJKHznZF0TgPCzh1glDBn3owRHMZ+5jsCCIPOsXP7Ppox6jykcUbSdDbNaBL3sexX6BBy9TE0fCxyErs6o2FJurDA1hNXDw+uxgTXU+uvc863djB0MMieH8OcaGj2Si/E5DKilyQOiD2RWKQrykgfS0iZPUCb1Fc+5p05+bZsyK55pY2Dh6b2XIGBXoAfzqmV0AZgWzDatpCzMBi3JRh0jvGSGA7h4nHALCtZ3MFeqjvdjAn9oEOuCwV6V6wh12d43oZ0o2t7e+GFw2GS13h/KA/0cA/3XNnv7tP3g4+D026nI1Y9jF3ioOnB0QHNg/cefPgB+vDp01tQXeh3fnfytorffsMZVqx70B2+kfRG65vh/kYf8va+vD/5MT/5zT/59Wbw9bv+0bDrtfOk+T0jceSAcVz1z5sxcWSnzMlnzc3cjSfMOUnnXbv/cnuCN07VOyzccmNv0rHUptc/+YwTDqO+sQdt+MYubNzp/l9hEv2fMaSmGxT8Nsq8Ed97VPTlw9e3zoV4GfSg3uE/JLj7R6fzJ6dcuqE=</source>
  </file>
  <file path="Platforms/vendor_extreme.php" generated-path="Platforms.vendor_extreme.html" hash="4bd9617a313907bdca29563ed47f564a" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="MIBS/Extreme/Chassis.php" generated-path="MIBS.Extreme.Chassis.html" hash="d0064a4122f91a21f081531b5e7ec69d" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Extreme" line="44" package="global">
      <extends>\OSS_SNMP\MIBS\Extreme</extends>
      <name>Chassis</name>
      <full_name>\OSS_SNMP\MIBS\Extreme\Chassis</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on Extreme devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2013 - 2014, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="47" package="global">
        <name>OID_SYSTEM_ID</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Chassis::OID_SYSTEM_ID</full_name>
        <value>'.1.3.6.1.4.1.1916.1.1.1.16.0'</value>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS\Extreme" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="55" package="global">
        <name>systemID</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Chassis::systemID()</full_name>
        <docblock line="55">
          <description>Get the device's system id</description>
          <long-description></long-description>
          <tag name="return" line="55" description="The system ID (includes the serial number)" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1VWFv2zYQ/e5fcSgGxA5cu2mLAku6LrLE2ARkyRPlpAYCBLJEx8RkyZOopEGx/75HSkmcbOi+bA5sMdTdu3vvyLvPv+63+15vfNwjfNxy/1Cp262mfjqg9+9OPtBb8/g4pHAvCxJlU6USj7zRqixq8tVOaZkNyWvWuSqGxCuZJ0Vm0Zw8J4tWUyVrWd3JbNTr4hQ6SfUpTZKqeqDwyCuL8i4pEG1td/qJHlCJkPVTqH5WYk9JC/D02Wq9Px2P7+/vRy/MR0qO21jxVtW0UbkkPPdJpanckN5KCoW4EcF8gc309+RWdrlFMlO1rtTaAhHIUFPDuaC6ZW921qpIkOamrHb1kO6V3lJZ2WfZaAuzKzO1UWliQIaUVJL2soJYUIv2VXmnMiz0NtE2l02Z5+W9Km4pLYtMtYyN007q094T5eNX2dWGS5dWWmYwb2oNsXWCdA1usi7vzKuurAfaFaVWqRzCCrLkwDRQh8GL7FVmCJzmidrJavSDhBD4QJzHhMA4a5Dk/5cTtYwP0LIybXYSB+2xjmOUqIRNRbtEy0olef1cCltDA35I55BoIJX1NTZFspMmtx9eCtCpXqVk/GzNFO4EiLWByqpGRg+0luakgWJJssiwK82hQoa7UktqJdT1IUOQwKWiDUxa0epyo+/NuemOItV7mZpzCHdlTmhlTmDRnsW6thTbWzLjgkR4EV85ESOsF1F4yT3m0WSFl4zccLGK+HQW0yz0PRYJcgIPu0Ec8ckyDrHxxhHwfGNetPc/WBH7uoiYEBRGxOcLnwMQESIniDkTaBeB6y89HkyHBBAKwph8PucxzOJwaAN3bhbx2ZXCC5qzyJ3hX2fCfR6vbEIXPA5MvAsEdGjhRDF3l74T0WIZLULBCPQslMeF6zt8zrwRskBkYpcsiEnMHN9/xTi8ClhkKLygO2HI1Zn4rA0WrDrciLmxYfa8ciEk0vSHJBbM5WbBvjLwcqLVsMMV7LcljPCSPGfuTJmwcP1/UQhlcpcRm5vUIYlYTkTM42XMaBqGntVdsOiSu0ycWUA/FFa8pWDo2k7s2AQAA+XEmVlPloJbDXkQsyhaLmIeBgOU/QoKIVcHrt5TkcPA1hmChdHKABtNbD2GdDVj2I+MvlY5x8ghoKAbH5ohJgSNX/GlgE19PmWBy4xFaJCuuGADlJALY8Db0FcO4i4tfVM2ZNcueavg46Ee2gITvyDHu+SGQueAYyF4d4SshO6sK8God4whYi8tZsTzxLie84m4Zt90JXfyzExPjM9jnDf0oro2jc9cMNP/TI+yM+byPf3R4Lqa619Q54oLfIeGhytt/c+feuJ/OYiBmzRoBtXfhu1nO2vPX8/NL/AZ91oq7ha/6CvyG7pGVtP1P0rQ+942EXQ09OyQezdiJWI2v+Hec7P6hY5GJ6MPo0/4/Yjvyc8nZmn/Po3eHUFHC2LFbFvuVLbTsZXpCO3todZyRyrrLB4NzzHymgoTGg0Visfw6UyRQV8Vad5kUN5g1bbxU9Hs1rIadABj+9wb6VLaNEVqR0YLwb1+a/b9qfN20X4yLfftl1upjSL9gV32ESHfnJ6+VGHQXr4/wdF8e72/AHUg1jY=</source>
  </file>
  <file path="MIBS/Asterisk/Channels.php" generated-path="MIBS.Asterisk.Channels.html" hash="0be24d6d307b549a17268aa32316a0b7" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Asterisk" line="45" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>Channels</name>
      <full_name>\OSS_SNMP\MIBS\Asterisk\Channels</full_name>
      <docblock line="45">
        <description>A class for performing SNMP V2 queries on Asterisk</description>
        <long-description></long-description>
        <tag name="see" line="45" description="" link="\OSS_SNMP\MIBS\Asterisk\https://wiki.asterisk.org/wiki/display/AST/Asterisk+MIB+Definitions"/>
        <tag name="copyright" line="45" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="45" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="48" package="global">
        <name>OID_ASTERISK_CHANNELS_ACTIVE</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNELS_ACTIVE</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.1.0'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="50" package="global">
        <name>OID_ASTERISK_CHANNELS_SUPPORTED</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNELS_SUPPORTED</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.3.0'</value>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="52" package="global">
        <name>OID_ASTERISK_CHANNEL_TYPE_NAME</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_TYPE_NAME</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.4.1.2'</value>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="53" package="global">
        <name>OID_ASTERISK_CHANNEL_TYPE_DESCRIPTION</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_TYPE_DESCRIPTION</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.4.1.3'</value>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="54" package="global">
        <name>OID_ASTERISK_CHANNEL_TYPE_STATE</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_TYPE_STATE</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.4.1.4'</value>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="55" package="global">
        <name>OID_ASTERISK_CHANNEL_TYPE_INDICATION</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_TYPE_INDICATION</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.4.1.5'</value>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="56" package="global">
        <name>OID_ASTERISK_CHANNEL_TYPE_TRANSFER</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_TYPE_TRANSFER</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.4.1.6'</value>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="57" package="global">
        <name>OID_ASTERISK_CHANNEL_TYPE_CHANNELS</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_TYPE_CHANNELS</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.4.1.7'</value>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="59" package="global">
        <name>OID_ASTERISK_CHANNEL_NAME</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_NAME</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.2'</value>
        <docblock line="59">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="60" package="global">
        <name>OID_ASTERISK_CHANNEL_LANGUAGE</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_LANGUAGE</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.3'</value>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="61" package="global">
        <name>OID_ASTERISK_CHANNEL_TYPE</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_TYPE</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.4'</value>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="62" package="global">
        <name>OID_ASTERISK_CHANNEL_MUSIC_CLASS</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_MUSIC_CLASS</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.5'</value>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="63" package="global">
        <name>OID_ASTERISK_CHANNEL_BRIDGE</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_BRIDGE</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.6'</value>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="64" package="global">
        <name>OID_ASTERISK_CHANNEL_MASQ</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_MASQ</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.7'</value>
        <docblock line="64">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="65" package="global">
        <name>OID_ASTERISK_CHANNEL_MASQR</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_MASQR</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.8'</value>
        <docblock line="65">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="66" package="global">
        <name>OID_ASTERISK_CHANNEL_WHEN_HANGUP</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_WHEN_HANGUP</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.9'</value>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="67" package="global">
        <name>OID_ASTERISK_CHANNEL_APP</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_APP</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.10'</value>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="68" package="global">
        <name>OID_ASTERISK_CHANNEL_DATA</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_DATA</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.11'</value>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="69" package="global">
        <name>OID_ASTERISK_CHANNEL_CONTEXT</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_CONTEXT</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.12'</value>
        <docblock line="69">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="70" package="global">
        <name>OID_ASTERISK_CHANNEL_MACRO_CONTEXT</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_MACRO_CONTEXT</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.13'</value>
        <docblock line="70">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="71" package="global">
        <name>OID_ASTERISK_CHANNEL_MACRO_EXTEN</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_MACRO_EXTEN</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.14'</value>
        <docblock line="71">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="72" package="global">
        <name>OID_ASTERISK_CHANNEL_MACRO_PRI</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_MACRO_PRI</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.15'</value>
        <docblock line="72">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="73" package="global">
        <name>OID_ASTERISK_CHANNEL_EXTEN</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_EXTEN</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.16'</value>
        <docblock line="73">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="74" package="global">
        <name>OID_ASTERISK_CHANNEL_PRI</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_PRI</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.17'</value>
        <docblock line="74">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="75" package="global">
        <name>OID_ASTERISK_CHANNEL_ACCOUNT_CODE</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_ACCOUNT_CODE</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.18'</value>
        <docblock line="75">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="76" package="global">
        <name>OID_ASTERISK_CHANNEL_FORWARD_TO</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_FORWARD_TO</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.19'</value>
        <docblock line="76">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="77" package="global">
        <name>OID_ASTERISK_CHANNEL_UNQIUEID</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_UNQIUEID</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.20'</value>
        <docblock line="77">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="78" package="global">
        <name>OID_ASTERISK_CHANNEL_CALL_GROUP</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_CALL_GROUP</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.21'</value>
        <docblock line="78">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="79" package="global">
        <name>OID_ASTERISK_CHANNEL_PICKUP_GROUP</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_PICKUP_GROUP</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.22'</value>
        <docblock line="79">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="80" package="global">
        <name>OID_ASTERISK_CHANNEL_STATE</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_STATE</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.23'</value>
        <docblock line="80">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="81" package="global">
        <name>OID_ASTERISK_CHANNEL_MUTED</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_MUTED</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.24'</value>
        <docblock line="81">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="82" package="global">
        <name>OID_ASTERISK_CHANNEL_RINGS</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_RINGS</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.25'</value>
        <docblock line="82">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="83" package="global">
        <name>OID_ASTERISK_CHANNEL_CID_DNID</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_CID_DNID</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.26'</value>
        <docblock line="83">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="84" package="global">
        <name>OID_ASTERISK_CHANNEL_CID_NUM</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_CID_NUM</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.27'</value>
        <docblock line="84">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="85" package="global">
        <name>OID_ASTERISK_CHANNEL_CID_NAME</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_CID_NAME</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.28'</value>
        <docblock line="85">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="86" package="global">
        <name>OID_ASTERISK_CHANNEL_CID_ANI</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_CID_ANI</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.29'</value>
        <docblock line="86">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="87" package="global">
        <name>OID_ASTERISK_CHANNEL_CID_RDNIS</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_CID_RDNIS</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.30'</value>
        <docblock line="87">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="88" package="global">
        <name>OID_ASTERISK_CHANNEL_CID_PRESENTATION</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_CID_PRESENTATION</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.31'</value>
        <docblock line="88">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="89" package="global">
        <name>OID_ASTERISK_CHANNEL_CID_ANI2</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_CID_ANI2</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.32'</value>
        <docblock line="89">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="90" package="global">
        <name>OID_ASTERISK_CHANNEL_CID_TON</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_CID_TON</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.33'</value>
        <docblock line="90">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="91" package="global">
        <name>OID_ASTERISK_CHANNEL_CID_TNS</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_CID_TNS</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.34'</value>
        <docblock line="91">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="92" package="global">
        <name>OID_ASTERISK_CHANNEL_AMA_FLAGS</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_AMA_FLAGS</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.35'</value>
        <docblock line="92">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="93" package="global">
        <name>OID_ASTERISK_CHANNEL_ADSI</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_ADSI</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.36'</value>
        <docblock line="93">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="94" package="global">
        <name>OID_ASTERISK_CHANNEL_TONE_ZONE</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_TONE_ZONE</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.37'</value>
        <docblock line="94">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="95" package="global">
        <name>OID_ASTERISK_CHANNEL_HANGUP_CAUSE</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_HANGUP_CAUSE</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.38'</value>
        <docblock line="95">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="96" package="global">
        <name>OID_ASTERISK_CHANNEL_VARIABLES</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_VARIABLES</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.39'</value>
        <docblock line="96">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="97" package="global">
        <name>OID_ASTERISK_CHANNEL_FLAGS</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_FLAGS</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.40'</value>
        <docblock line="97">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="98" package="global">
        <name>OID_ASTERISK_CHANNEL_TRANSFER_CAP</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNEL_TRANSFER_CAP</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.2.1.41'</value>
        <docblock line="98">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="100" package="global">
        <name>OID_ASTERISK_CHANNELS_BRIDGED</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::OID_ASTERISK_CHANNELS_BRIDGED</full_name>
        <value>'.1.3.6.1.4.1.22736.1.5.5.1.0'</value>
        <docblock line="100">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="741" package="global">
        <name>CHANNEL_STATE_DOWN</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_STATE_DOWN</full_name>
        <value>0</value>
        <docblock line="741">
          <description>Possible state of an Asterisk channel as returned by `chanState()`</description>
          <long-description></long-description>
          <tag name="var" line="741" description="&lt;p&gt;Possible state of an Asterisk channel as returned by &lt;code&gt;chanState()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="747" package="global">
        <name>CHANNEL_STATE_RESERVED</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_STATE_RESERVED</full_name>
        <value>1</value>
        <docblock line="747">
          <description>Possible state of an Asterisk channel as returned by `chanState()`</description>
          <long-description></long-description>
          <tag name="var" line="747" description="&lt;p&gt;Possible state of an Asterisk channel as returned by &lt;code&gt;chanState()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="753" package="global">
        <name>CHANNEL_STATE_OFF_HOOK</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_STATE_OFF_HOOK</full_name>
        <value>2</value>
        <docblock line="753">
          <description>Possible state of an Asterisk channel as returned by `chanState()`</description>
          <long-description></long-description>
          <tag name="var" line="753" description="&lt;p&gt;Possible state of an Asterisk channel as returned by &lt;code&gt;chanState()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="759" package="global">
        <name>CHANNEL_STATE_DIALING</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_STATE_DIALING</full_name>
        <value>3</value>
        <docblock line="759">
          <description>Possible state of an Asterisk channel as returned by `chanState()`</description>
          <long-description></long-description>
          <tag name="var" line="759" description="&lt;p&gt;Possible state of an Asterisk channel as returned by &lt;code&gt;chanState()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="765" package="global">
        <name>CHANNEL_STATE_RING</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_STATE_RING</full_name>
        <value>4</value>
        <docblock line="765">
          <description>Possible state of an Asterisk channel as returned by `chanState()`</description>
          <long-description></long-description>
          <tag name="var" line="765" description="&lt;p&gt;Possible state of an Asterisk channel as returned by &lt;code&gt;chanState()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="771" package="global">
        <name>CHANNEL_STATE_RINGING</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_STATE_RINGING</full_name>
        <value>5</value>
        <docblock line="771">
          <description>Possible state of an Asterisk channel as returned by `chanState()`</description>
          <long-description></long-description>
          <tag name="var" line="771" description="&lt;p&gt;Possible state of an Asterisk channel as returned by &lt;code&gt;chanState()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="777" package="global">
        <name>CHANNEL_STATE_UP</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_STATE_UP</full_name>
        <value>6</value>
        <docblock line="777">
          <description>Possible state of an Asterisk channel as returned by `chanState()`</description>
          <long-description></long-description>
          <tag name="var" line="777" description="&lt;p&gt;Possible state of an Asterisk channel as returned by &lt;code&gt;chanState()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="783" package="global">
        <name>CHANNEL_STATE_BUSY</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_STATE_BUSY</full_name>
        <value>7</value>
        <docblock line="783">
          <description>Possible state of an Asterisk channel as returned by `chanState()`</description>
          <long-description></long-description>
          <tag name="var" line="783" description="&lt;p&gt;Possible state of an Asterisk channel as returned by &lt;code&gt;chanState()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="789" package="global">
        <name>CHANNEL_STATE_DIALING_OFF_HOOK</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_STATE_DIALING_OFF_HOOK</full_name>
        <value>8</value>
        <docblock line="789">
          <description>Possible state of an Asterisk channel as returned by `chanState()`</description>
          <long-description></long-description>
          <tag name="var" line="789" description="&lt;p&gt;Possible state of an Asterisk channel as returned by &lt;code&gt;chanState()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="795" package="global">
        <name>CHANNEL_STATE_PRE_RING</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_STATE_PRE_RING</full_name>
        <value>9</value>
        <docblock line="795">
          <description>Possible state of an Asterisk channel as returned by `chanState()`</description>
          <long-description></long-description>
          <tag name="var" line="795" description="&lt;p&gt;Possible state of an Asterisk channel as returned by &lt;code&gt;chanState()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1087" package="global">
        <name>CHANNEL_AMA_FLAG_DEFAULT</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_AMA_FLAG_DEFAULT</full_name>
        <value>0</value>
        <docblock line="1087">
          <description>Possible AMA flag of an Asterisk channel as returned by `chanAMAFlags()`</description>
          <long-description></long-description>
          <tag name="var" line="1087" description="&lt;p&gt;Possible AMA flag of an Asterisk channel as returned by &lt;code&gt;chanAMAFlags()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1093" package="global">
        <name>CHANNEL_AMA_FLAG_OMIT</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_AMA_FLAG_OMIT</full_name>
        <value>1</value>
        <docblock line="1093">
          <description>Possible AMA flag of an Asterisk channel as returned by `chanAMAFlags()`</description>
          <long-description></long-description>
          <tag name="var" line="1093" description="&lt;p&gt;Possible AMA flag of an Asterisk channel as returned by &lt;code&gt;chanAMAFlags()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1099" package="global">
        <name>CHANNEL_AMA_FLAG_BILLING</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_AMA_FLAG_BILLING</full_name>
        <value>2</value>
        <docblock line="1099">
          <description>Possible AMA flag of an Asterisk channel as returned by `chanAMAFlags()`</description>
          <long-description></long-description>
          <tag name="var" line="1099" description="&lt;p&gt;Possible AMA flag of an Asterisk channel as returned by &lt;code&gt;chanAMAFlags()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1105" package="global">
        <name>CHANNEL_AMA_FLAG_DOCUMENTATION</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_AMA_FLAG_DOCUMENTATION</full_name>
        <value>3</value>
        <docblock line="1105">
          <description>Possible AMA flag of an Asterisk channel as returned by `chanAMAFlags()`</description>
          <long-description></long-description>
          <tag name="var" line="1105" description="&lt;p&gt;Possible AMA flag of an Asterisk channel as returned by &lt;code&gt;chanAMAFlags()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1149" package="global">
        <name>CHANNEL_ADSI_UNKNOWN</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_ADSI_UNKNOWN</full_name>
        <value>0</value>
        <docblock line="1149">
          <description>Possible ADSI of an Asterisk channel as returned by `chanADSI()`</description>
          <long-description></long-description>
          <tag name="var" line="1149" description="&lt;p&gt;Possible ADSI of an Asterisk channel as returned by &lt;code&gt;chanADSI()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1155" package="global">
        <name>CHANNEL_ADSI_AVAILABLE</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_ADSI_AVAILABLE</full_name>
        <value>1</value>
        <docblock line="1155">
          <description>Possible ADSI of an Asterisk channel as returned by `chanADSI()`</description>
          <long-description></long-description>
          <tag name="var" line="1155" description="&lt;p&gt;Possible ADSI of an Asterisk channel as returned by &lt;code&gt;chanADSI()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1161" package="global">
        <name>CHANNEL_ADSI_UNAVAILABLE</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_ADSI_UNAVAILABLE</full_name>
        <value>2</value>
        <docblock line="1161">
          <description>Possible ADSI of an Asterisk channel as returned by `chanADSI()`</description>
          <long-description></long-description>
          <tag name="var" line="1161" description="&lt;p&gt;Possible ADSI of an Asterisk channel as returned by &lt;code&gt;chanADSI()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1167" package="global">
        <name>CHANNEL_ADSI_OFF_HOOK_ONLY</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_ADSI_OFF_HOOK_ONLY</full_name>
        <value>3</value>
        <docblock line="1167">
          <description>Possible ADSI of an Asterisk channel as returned by `chanADSI()`</description>
          <long-description></long-description>
          <tag name="var" line="1167" description="&lt;p&gt;Possible ADSI of an Asterisk channel as returned by &lt;code&gt;chanADSI()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1235" package="global">
        <name>CHANNEL_HANGUP_CAUSE_NOT_DEFINED</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_HANGUP_CAUSE_NOT_DEFINED</full_name>
        <value>0</value>
        <docblock line="1235">
          <description>Possible hangup cause of an Asterisk channel as returned by `chanHangupCause()`</description>
          <long-description></long-description>
          <tag name="var" line="1235" description="&lt;p&gt;Possible hangup cause of an Asterisk channel as returned by &lt;code&gt;chanHangupCause()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1241" package="global">
        <name>CHANNEL_HANGUP_CAUSE_UNREGISTERED</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_HANGUP_CAUSE_UNREGISTERED</full_name>
        <value>3</value>
        <docblock line="1241">
          <description>Possible hangup cause of an Asterisk channel as returned by `chanHangupCause()`</description>
          <long-description></long-description>
          <tag name="var" line="1241" description="&lt;p&gt;Possible hangup cause of an Asterisk channel as returned by &lt;code&gt;chanHangupCause()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1247" package="global">
        <name>CHANNEL_HANGUP_CAUSE_NORMAL</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_HANGUP_CAUSE_NORMAL</full_name>
        <value>16</value>
        <docblock line="1247">
          <description>Possible hangup cause of an Asterisk channel as returned by `chanHangupCause()`</description>
          <long-description></long-description>
          <tag name="var" line="1247" description="&lt;p&gt;Possible hangup cause of an Asterisk channel as returned by &lt;code&gt;chanHangupCause()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1253" package="global">
        <name>CHANNEL_HANGUP_CAUSE_BUSY</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_HANGUP_CAUSE_BUSY</full_name>
        <value>17</value>
        <docblock line="1253">
          <description>Possible hangup cause of an Asterisk channel as returned by `chanHangupCause()`</description>
          <long-description></long-description>
          <tag name="var" line="1253" description="&lt;p&gt;Possible hangup cause of an Asterisk channel as returned by &lt;code&gt;chanHangupCause()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1259" package="global">
        <name>CHANNEL_HANGUP_CAUSE_NO_ANSWER</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_HANGUP_CAUSE_NO_ANSWER</full_name>
        <value>19</value>
        <docblock line="1259">
          <description>Possible hangup cause of an Asterisk channel as returned by `chanHangupCause()`</description>
          <long-description></long-description>
          <tag name="var" line="1259" description="&lt;p&gt;Possible hangup cause of an Asterisk channel as returned by &lt;code&gt;chanHangupCause()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1265" package="global">
        <name>CHANNEL_HANGUP_CAUSE_CONGESTION</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_HANGUP_CAUSE_CONGESTION</full_name>
        <value>34</value>
        <docblock line="1265">
          <description>Possible hangup cause of an Asterisk channel as returned by `chanHangupCause()`</description>
          <long-description></long-description>
          <tag name="var" line="1265" description="&lt;p&gt;Possible hangup cause of an Asterisk channel as returned by &lt;code&gt;chanHangupCause()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1271" package="global">
        <name>CHANNEL_HANGUP_CAUSE_FAILURE</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_HANGUP_CAUSE_FAILURE</full_name>
        <value>38</value>
        <docblock line="1271">
          <description>Possible hangup cause of an Asterisk channel as returned by `chanHangupCause()`</description>
          <long-description></long-description>
          <tag name="var" line="1271" description="&lt;p&gt;Possible hangup cause of an Asterisk channel as returned by &lt;code&gt;chanHangupCause()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1277" package="global">
        <name>CHANNEL_HANGUP_CAUSE_NO_SUCH_DRIVER</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_HANGUP_CAUSE_NO_SUCH_DRIVER</full_name>
        <value>66</value>
        <docblock line="1277">
          <description>Possible hangup cause of an Asterisk channel as returned by `chanHangupCause()`</description>
          <long-description></long-description>
          <tag name="var" line="1277" description="&lt;p&gt;Possible hangup cause of an Asterisk channel as returned by &lt;code&gt;chanHangupCause()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1411" package="global">
        <name>CHANNEL_TRANSFER_CAPABILITY_SPEECH</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_TRANSFER_CAPABILITY_SPEECH</full_name>
        <value>0</value>
        <docblock line="1411">
          <description>Possible channel transfer capabilities of an Asterisk channel as returned by `chanTransferCap()`</description>
          <long-description></long-description>
          <tag name="var" line="1411" description="&lt;p&gt;Possible channel transfer capabilities of an Asterisk channel as returned by &lt;code&gt;chanTransferCap()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1417" package="global">
        <name>CHANNEL_TRANSFER_CAPABILITY_DIGITAL</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_TRANSFER_CAPABILITY_DIGITAL</full_name>
        <value>8</value>
        <docblock line="1417">
          <description>Possible channel transfer capabilities of an Asterisk channel as returned by `chanTransferCap()`</description>
          <long-description></long-description>
          <tag name="var" line="1417" description="&lt;p&gt;Possible channel transfer capabilities of an Asterisk channel as returned by &lt;code&gt;chanTransferCap()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1423" package="global">
        <name>CHANNEL_TRANSFER_CAPABILITY_RESTRICTED_DIGITAL</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_TRANSFER_CAPABILITY_RESTRICTED_DIGITAL</full_name>
        <value>9</value>
        <docblock line="1423">
          <description>Possible channel transfer capabilities of an Asterisk channel as returned by `chanTransferCap()`</description>
          <long-description></long-description>
          <tag name="var" line="1423" description="&lt;p&gt;Possible channel transfer capabilities of an Asterisk channel as returned by &lt;code&gt;chanTransferCap()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1429" package="global">
        <name>CHANNEL_TRANSFER_CAPABILITY_AUDIO_3K</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_TRANSFER_CAPABILITY_AUDIO_3K</full_name>
        <value>16</value>
        <docblock line="1429">
          <description>Possible channel transfer capabilities of an Asterisk channel as returned by `chanTransferCap()`</description>
          <long-description></long-description>
          <tag name="var" line="1429" description="&lt;p&gt;Possible channel transfer capabilities of an Asterisk channel as returned by &lt;code&gt;chanTransferCap()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1435" package="global">
        <name>CHANNEL_TRANSFER_CAPABILITY_DIGITAL_WITH_TONES</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_TRANSFER_CAPABILITY_DIGITAL_WITH_TONES</full_name>
        <value>17</value>
        <docblock line="1435">
          <description>Possible channel transfer capabilities of an Asterisk channel as returned by `chanTransferCap()`</description>
          <long-description></long-description>
          <tag name="var" line="1435" description="&lt;p&gt;Possible channel transfer capabilities of an Asterisk channel as returned by &lt;code&gt;chanTransferCap()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="1441" package="global">
        <name>CHANNEL_TRANSFER_CAPABILITY_VIDEO</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_TRANSFER_CAPABILITY_VIDEO</full_name>
        <value>24</value>
        <docblock line="1441">
          <description>Possible channel transfer capabilities of an Asterisk channel as returned by `chanTransferCap()`</description>
          <long-description></long-description>
          <tag name="var" line="1441" description="&lt;p&gt;Possible channel transfer capabilities of an Asterisk channel as returned by &lt;code&gt;chanTransferCap()&lt;/code&gt;&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="798" package="global">
        <name>$CHANNEL_STATES</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_STATES</full_name>
        <default>array(self::CHANNEL_STATE_DOWN =&gt; 'down', self::CHANNEL_STATE_RESERVED =&gt; 'reserved', self::CHANNEL_STATE_OFF_HOOK =&gt; 'offHook', self::CHANNEL_STATE_DIALING =&gt; 'dialing', self::CHANNEL_STATE_RING =&gt; 'ring', self::CHANNEL_STATE_RINGING =&gt; 'ringing', self::CHANNEL_STATE_UP =&gt; 'up', self::CHANNEL_STATE_BUSY =&gt; 'busy', self::CHANNEL_STATE_DIALING_OFF_HOOK =&gt; 'dialingOffHook', self::CHANNEL_STATE_PRE_RING =&gt; 'preRing')</default>
        <docblock line="798">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1108" package="global">
        <name>$CHANNEL_AMA_FLAGS</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_AMA_FLAGS</full_name>
        <default>array(self::CHANNEL_AMA_FLAG_DEFAULT =&gt; 'default', self::CHANNEL_AMA_FLAG_OMIT =&gt; 'omit', self::CHANNEL_AMA_FLAG_BILLING =&gt; 'billing', self::CHANNEL_AMA_FLAG_DOCUMENTATION =&gt; 'documentation')</default>
        <docblock line="1108">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1170" package="global">
        <name>$CHANNEL_ADSIs</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_ADSIs</full_name>
        <default>array(self::CHANNEL_ADSI_UNKNOWN =&gt; 'unknown', self::CHANNEL_ADSI_AVAILABLE =&gt; 'available', self::CHANNEL_ADSI_UNAVAILABLE =&gt; 'unavailable', self::CHANNEL_ADSI_OFF_HOOK_ONLY =&gt; 'offHookOnly')</default>
        <docblock line="1170">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1280" package="global">
        <name>$CHANNEL_HANGUP_CAUSES</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_HANGUP_CAUSES</full_name>
        <default>array(self::CHANNEL_HANGUP_CAUSE_NOT_DEFINED =&gt; 'notDefined', self::CHANNEL_HANGUP_CAUSE_UNREGISTERED =&gt; 'unregistered', self::CHANNEL_HANGUP_CAUSE_NORMAL =&gt; 'normal', self::CHANNEL_HANGUP_CAUSE_BUSY =&gt; 'busy', self::CHANNEL_HANGUP_CAUSE_NO_ANSWER =&gt; 'noAnswer', self::CHANNEL_HANGUP_CAUSE_CONGESTION =&gt; 'congestion', self::CHANNEL_HANGUP_CAUSE_FAILURE =&gt; 'failure', self::CHANNEL_HANGUP_CAUSE_NO_SUCH_DRIVER =&gt; 'noSuchDriver')</default>
        <docblock line="1280">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1444" package="global">
        <name>$CHANNEL_TRANSFER_CAPABILITIES</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::CHANNEL_TRANSFER_CAPABILITIES</full_name>
        <default>array(self::CHANNEL_TRANSFER_CAPABILITY_SPEECH =&gt; 'speech', self::CHANNEL_TRANSFER_CAPABILITY_DIGITAL =&gt; 'digital', self::CHANNEL_TRANSFER_CAPABILITY_RESTRICTED_DIGITAL =&gt; 'restrictedDigital', self::CHANNEL_TRANSFER_CAPABILITY_AUDIO_3K =&gt; 'audio3k', self::CHANNEL_TRANSFER_CAPABILITY_DIGITAL_WITH_TONES =&gt; 'digitalWithTones', self::CHANNEL_TRANSFER_CAPABILITY_VIDEO =&gt; 'video')</default>
        <docblock line="1444">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS\Asterisk" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="109" package="global">
        <name>active</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::active()</full_name>
        <docblock line="109">
          <description>Returns the current number of active channels.</description>
          <long-description>&gt; Current number of active channels.</long-description>
          <tag name="return" line="109" description="The current number of active channels." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="122" package="global">
        <name>supported</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::supported()</full_name>
        <docblock line="122">
          <description>Returns the number of channel types (technologies) supported.</description>
          <long-description>&gt; Number of channel types (technologies) supported.</long-description>
          <tag name="return" line="122" description="The number of channel types (technologies) supported." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="135" package="global">
        <name>names</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::names()</full_name>
        <docblock line="135">
          <description>Array of supported channel type names</description>
          <long-description>&gt; Unique name of the technology we are describing.</long-description>
          <tag name="return" line="135" description="Supported channel type names" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="147" package="global">
        <name>descriptions</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::descriptions()</full_name>
        <docblock line="147">
          <description>Array of supported channel type descriptions</description>
          <long-description>&gt; Description of the channel type (technology).</long-description>
          <tag name="return" line="147" description="Supported channel type descriptions" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="159" package="global">
        <name>deviceStates</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::deviceStates()</full_name>
        <docblock line="159">
          <description>Array of supported channel type device state capability</description>
          <long-description>&gt; Whether the current technology can hold device states.</long-description>
          <tag name="return" line="159" description="Whether the current technology can hold device states." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="171" package="global">
        <name>progressIndications</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::progressIndications()</full_name>
        <docblock line="171">
          <description>Array of supported channel type progress indication capability</description>
          <long-description>&gt; Whether the current technology supports progress indication.</long-description>
          <tag name="return" line="171" description="Whether the current technology supports progress indication." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="184" package="global">
        <name>transfers</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::transfers()</full_name>
        <docblock line="184">
          <description>Array of supported channel type transfer capability</description>
          <long-description>&gt; Whether the current technology supports transfers, where
&gt; Asterisk can get out from inbetween two bridged channels.</long-description>
          <tag name="return" line="184" description="Whether the current technology transfers" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="196" package="global">
        <name>activeCalls</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::activeCalls()</full_name>
        <docblock line="196">
          <description>Array of active calls on supported channels</description>
          <long-description>&gt; Number of active channels using the current technology.</long-description>
          <tag name="return" line="196" description="Active calls on supported channels" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="208" package="global">
        <name>bridged</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::bridged()</full_name>
        <docblock line="208">
          <description>Number of channels currently in a bridged state.</description>
          <long-description>&gt; Number of channels currently in a bridged state.</long-description>
          <tag name="return" line="208" description="Array of active calls on supported channels" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="239" package="global">
        <name>details</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::details()</full_name>
        <docblock line="239">
          <description>Utility function to gather channel details together in an associative array.</description>
          <long-description>Returns an array of support channel types. For example:

    Array
    (
        ....
        [SIP] =&gt; Array
            (
                [name] =&gt; SIP
                [index] =&gt; 5
                [description] =&gt; Session Initiation Protocol (SIP)
                [hasDeviceState] =&gt; 1
                [hasProgressIndications] =&gt; 1
                [canTransfer] =&gt; 1
                [activeCalls] =&gt; 0
            )
        ....
    )

If you chose to index by SNMP table entries, the above element would be indexed with `5` rather than `SIP`.</long-description>
          <tag name="param" line="239" description="&lt;p&gt;If true, the array is indexed using the SNMP table index rather than the unique channel type name&lt;/p&gt;" type="bool" variable="$useIndex">
            <type>bool</type>
          </tag>
          <tag name="return" line="239" description="Channel details as an associative array" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$useIndex</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="284" package="global">
        <name>chanName</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanName()</full_name>
        <docblock line="284">
          <description>Active Channel Information: Name of the current channel.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Name of the current channel.</long-description>
          <tag name="return" line="284" description="Name of the current channel." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="306" package="global">
        <name>chanLanguage</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanLanguage()</full_name>
        <docblock line="306">
          <description>Active Channel Information: Which language the current channel is configured to use -- used mainly for prompts.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Which language the current channel is configured to use -- used mainly for prompts.</long-description>
          <tag name="return" line="306" description="Which language the current channel is configured to use -- used mainly for prompts." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="328" package="global">
        <name>chanType</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanType()</full_name>
        <docblock line="328">
          <description>Active Channel Information: Underlying technology for the current channel.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Underlying technology for the current channel.</long-description>
          <tag name="return" line="328" description="Underlying technology for the current channel." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="350" package="global">
        <name>chanMusicClass</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanMusicClass()</full_name>
        <docblock line="350">
          <description>Active Channel Information: Music class to be used for Music on Hold for this channel.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Music class to be used for Music on Hold for this channel.</long-description>
          <tag name="return" line="350" description="Music class to be used for Music on Hold for this channel." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="372" package="global">
        <name>chanBridge</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanBridge()</full_name>
        <docblock line="372">
          <description>Active Channel Information: Which channel this channel is currently bridged (in a conversation) with.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Which channel this channel is currently bridged (in a conversation) with.</long-description>
          <tag name="return" line="372" description="Which channel this channel is currently bridged (in a conversation) with." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="394" package="global">
        <name>chanMasq</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanMasq()</full_name>
        <docblock line="394">
          <description>Active Channel Information: Channel masquerading for us.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Channel masquerading for us.</long-description>
          <tag name="return" line="394" description="Channel masquerading for us." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="416" package="global">
        <name>chanMasqr</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanMasqr()</full_name>
        <docblock line="416">
          <description>Active Channel Information: Channel we are masquerading for.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Channel we are masquerading for.</long-description>
          <tag name="return" line="416" description="Channel we are masquerading for." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="438" package="global">
        <name>chanWhenHangup</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanWhenHangup()</full_name>
        <docblock line="438">
          <description>Active Channel Information: How long until this channel will be hung up.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; How long until this channel will be hung up.</long-description>
          <tag name="return" line="438" description="How long until this channel will be hung up." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="460" package="global">
        <name>chanApp</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanApp()</full_name>
        <docblock line="460">
          <description>Active Channel Information: Current application for the channel.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Current application for the channel.</long-description>
          <tag name="return" line="460" description="Current application for the channel." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="482" package="global">
        <name>chanData</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanData()</full_name>
        <docblock line="482">
          <description>Active Channel Information: Arguments passed to the current application.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Arguments passed to the current application.</long-description>
          <tag name="return" line="482" description="Arguments passed to the current application." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="504" package="global">
        <name>chanContext</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanContext()</full_name>
        <docblock line="504">
          <description>Active Channel Information: Current extension context.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Current extension context.</long-description>
          <tag name="return" line="504" description="Current extension context." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="526" package="global">
        <name>chanMacroContext</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanMacroContext()</full_name>
        <docblock line="526">
          <description>Active Channel Information: Current macro context.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Current macro context.</long-description>
          <tag name="return" line="526" description="Current macro context." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="548" package="global">
        <name>chanMacroExten</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanMacroExten()</full_name>
        <docblock line="548">
          <description>Active Channel Information: Current macro extension.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Current macro extension.</long-description>
          <tag name="return" line="548" description="Current macro extension." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="570" package="global">
        <name>chanMacroPri</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanMacroPri()</full_name>
        <docblock line="570">
          <description>Active Channel Information: Current macro priority.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Current macro priority.</long-description>
          <tag name="return" line="570" description="Current macro priority." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="592" package="global">
        <name>chanExten</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanExten()</full_name>
        <docblock line="592">
          <description>Active Channel Information: Current extension.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Current extension.</long-description>
          <tag name="return" line="592" description="Current extension." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="614" package="global">
        <name>chanPri</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanPri()</full_name>
        <docblock line="614">
          <description>Active Channel Information: Current priority.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Current priority.</long-description>
          <tag name="return" line="614" description="Current priority." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="636" package="global">
        <name>chanAccountCode</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanAccountCode()</full_name>
        <docblock line="636">
          <description>Active Channel Information: Account Code for billing.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Account Code for billing.</long-description>
          <tag name="return" line="636" description="Account Code for billing." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="658" package="global">
        <name>chanForwardTo</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanForwardTo()</full_name>
        <docblock line="658">
          <description>Active Channel Information: Where to forward to if asked to dial on this interface.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Where to forward to if asked to dial on this interface.</long-description>
          <tag name="return" line="658" description="Where to forward to if asked to dial on this interface." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="680" package="global">
        <name>chanUniqueId</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanUniqueId()</full_name>
        <docblock line="680">
          <description>Active Channel Information: Unique Channel Identifier.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Unique Channel Identifier.</long-description>
          <tag name="return" line="680" description="Unique Channel Identifier." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="702" package="global">
        <name>chanCallGroup</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanCallGroup()</full_name>
        <docblock line="702">
          <description>Active Channel Information: Call Group.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Call Group.</long-description>
          <tag name="return" line="702" description="Call Group." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="724" package="global">
        <name>chanPickupGroup</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanPickupGroup()</full_name>
        <docblock line="724">
          <description>Active Channel Information: Pickup Group.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Pickup Group.</long-description>
          <tag name="return" line="724" description="Pickup Group." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="822" package="global">
        <name>chanState</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanState()</full_name>
        <docblock line="822">
          <description>Active Channel Information: Channel state (see channel state constants).</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Channel state (see channel state constants).</long-description>
          <tag name="param" line="822" description="&lt;p&gt;If true, use the &lt;code&gt;$CHANNEL_STATES&lt;/code&gt; array to return textual representation&lt;/p&gt;" type="bool" variable="$translate">
            <type>bool</type>
          </tag>
          <tag name="return" line="822" description="Channel state (see channel state constants)." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="849" package="global">
        <name>chanMuted</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanMuted()</full_name>
        <docblock line="849">
          <description>Active Channel Information: Transmission of voice data has been muted.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Transmission of voice data has been muted.</long-description>
          <tag name="return" line="849" description="Transmission of voice data has been muted." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="871" package="global">
        <name>chanRings</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanRings()</full_name>
        <docblock line="871">
          <description>Active Channel Information: Number of rings so far.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Number of rings so far.</long-description>
          <tag name="return" line="871" description="Number of rings so far." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="893" package="global">
        <name>chanCidDNID</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanCidDNID()</full_name>
        <docblock line="893">
          <description>Active Channel Information: Dialled Number ID.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Dialled Number ID.</long-description>
          <tag name="return" line="893" description="Dialled Number ID." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="915" package="global">
        <name>chanCidNum</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanCidNum()</full_name>
        <docblock line="915">
          <description>Active Channel Information: Caller Number.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Caller Number.</long-description>
          <tag name="return" line="915" description="Caller Number." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="937" package="global">
        <name>chanCidName</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanCidName()</full_name>
        <docblock line="937">
          <description>Active Channel Information: Caller Name.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Caller Name.</long-description>
          <tag name="return" line="937" description="Caller Name." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="959" package="global">
        <name>chanCidANI</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanCidANI()</full_name>
        <docblock line="959">
          <description>Active Channel Information: ANI</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; ANI</long-description>
          <tag name="return" line="959" description="ANI" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="981" package="global">
        <name>chanCidRDNIS</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanCidRDNIS()</full_name>
        <docblock line="981">
          <description>Active Channel Information: Redirected Dialled Number Service.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Redirected Dialled Number Service.</long-description>
          <tag name="return" line="981" description="Redirected Dialled Number Service." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1003" package="global">
        <name>chanCidPresentation</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanCidPresentation()</full_name>
        <docblock line="1003">
          <description>Active Channel Information: Number Presentation/Screening.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Number Presentation/Screening.</long-description>
          <tag name="return" line="1003" description="Number Presentation/Screening." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1025" package="global">
        <name>chanCidANI2</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanCidANI2()</full_name>
        <docblock line="1025">
          <description>Active Channel Information: ANI 2 (info digit).</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; ANI 2 (info digit).</long-description>
          <tag name="return" line="1025" description="ANI 2 (info digit)." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1047" package="global">
        <name>chanCidTON</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanCidTON()</full_name>
        <docblock line="1047">
          <description>Active Channel Information: Type of Number.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Type of Number.</long-description>
          <tag name="return" line="1047" description="Type of Number." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1069" package="global">
        <name>chanCidTNS</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanCidTNS()</full_name>
        <docblock line="1069">
          <description>Active Channel Information: Transit Network Select.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Transit Network Select.</long-description>
          <tag name="return" line="1069" description="Transit Network Select." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1126" package="global">
        <name>chanAMAFlags</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanAMAFlags()</full_name>
        <docblock line="1126">
          <description>Active Channel Information: AMA Flags. (See constants)</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; AMA Flags. (See constants)</long-description>
          <tag name="param" line="1126" description="&lt;p&gt;If true, use the &lt;code&gt;$CHANNEL_AMA_FLAGS&lt;/code&gt; array to return textual representation&lt;/p&gt;" type="bool" variable="$translate">
            <type>bool</type>
          </tag>
          <tag name="return" line="1126" description="AMA Flags. (See constants)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1190" package="global">
        <name>chanADSI</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanADSI()</full_name>
        <docblock line="1190">
          <description>Active Channel Information: Whether or not ADSI is detected on CPE. (see constants)</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Whether or not ADSI is detected on CPE. (see constants)</long-description>
          <tag name="param" line="1190" description="&lt;p&gt;If true, use the &lt;code&gt;$CHANNEL_ADSIs&lt;/code&gt; array to return textual representation&lt;/p&gt;" type="bool" variable="$translate">
            <type>bool</type>
          </tag>
          <tag name="return" line="1190" description="Whether or not ADSI is detected on CPE. (see constants)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1217" package="global">
        <name>chanToneZone</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanToneZone()</full_name>
        <docblock line="1217">
          <description>Active Channel Information: Indication zone to use for channel.</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Indication zone to use for channel.</long-description>
          <tag name="return" line="1217" description="Indication zone to use for channel." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1303" package="global">
        <name>chanHangupCause</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanHangupCause()</full_name>
        <docblock line="1303">
          <description>Active Channel Information: Why is the channel hung up. (see constants)</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Why is the channel hung up. (see constants)</long-description>
          <tag name="param" line="1303" description="&lt;p&gt;If true, use the &lt;code&gt;$CHANNEL_HANGUP_CAUSES&lt;/code&gt; array to return textual representation&lt;/p&gt;" type="bool" variable="$translate">
            <type>bool</type>
          </tag>
          <tag name="return" line="1303" description="Why is the channel hung up. (see constants)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1333" package="global">
        <name>chanVariables</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanVariables()</full_name>
        <docblock line="1333">
          <description>Active Channel Information: Channel Variables defined for this channel.</description>
          <long-description>Returns an array of arrays where the inner array is key/value pairs
of channel variables for that channel: `[varName] =&gt; [varValue]`

NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Channel Variables defined for this channel.</long-description>
          <tag name="return" line="1333" description="Channel Variables defined for this channel." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OSS_SNMP\MIBS\Asterisk" line="1357" package="global">
        <name>_chanVarsToArray</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::_chanVarsToArray()</full_name>
        <docblock line="1357">
          <description>Utility function for `chanVariables()` to break the string returned by
OID_ASTERISK_CHANNEL_VARIABLES into an array of key / value pairs</description>
          <long-description></long-description>
          <tag name="param" line="1357" description="&lt;p&gt;String containing channel variables (from &lt;code&gt;chanVariables()&lt;/code&gt;&lt;/p&gt;" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="1357" description="An array of `[varName] =&gt; [varValue]` pairs for the channel" type="Array">
            <type>Array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1392" package="global">
        <name>chanFlags</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanFlags()</full_name>
        <docblock line="1392">
          <description>Active Channel Information: Flags set on this channel.</description>
          <long-description>Returns a HEX number - but I could not map it to the following from Asterisk docs:

&gt; BITS {
&gt;    wantsJitter(0),
&gt;    deferDTMF(1),
&gt;    writeInterrupt(2),
&gt;    blocking(3),
&gt;    zombie(4),
&gt;    exception(5),
&gt;    musicOnHold(6),
&gt;    spying(7),
&gt;    nativeBridge(8),
&gt;    autoIncrementingLoop(9)
&gt; }

NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Flags set on this channel. (see constants)</long-description>
          <tag name="return" line="1392" description="Flags set on this channel. (see constants)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1464" package="global">
        <name>chanTransferCap</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::chanTransferCap()</full_name>
        <docblock line="1464">
          <description>Active Channel Information: Transfer Capabilities for this channel. (see constants)</description>
          <long-description>NB: SNMP exceptions are caught and in such cases null is returned
as not all channels have all properties.

&gt; Transfer Capabilities for this channel. (see constants)</long-description>
          <tag name="param" line="1464" description="&lt;p&gt;If true, use the &lt;code&gt;$CHANNEL_TRANSFER_CAPABILITIES&lt;/code&gt; array to return textual representation&lt;/p&gt;" type="bool" variable="$translate">
            <type>bool</type>
          </tag>
          <tag name="return" line="1464" description="Transfer Capabilities for this channel. (see constants)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="1517" package="global">
        <name>channelDetails</name>
        <full_name>\OSS_SNMP\MIBS\Asterisk\Channels::channelDetails()</full_name>
        <docblock line="1517">
          <description>Utility function to gather together all the details of individual channels into an array.</description>
          <long-description>Essentially, this function calls all `chanXXX()` functions to return the details for
individual channels gathered together. E.g.

    Array
    (
        ....
        [SIP/foobar-654-00000372] =&gt; Array
        (
            [chanName] =&gt; SIP/foobar-654-00000372
            [chanLanguage] =&gt; en
            [chanType] =&gt; SIP
            [chanMusicClass] =&gt; (null)
            ...
            [chanVariables] =&gt; Array
            (
                [DIALEDPEERNUMBER] =&gt; foobar-654
                [SIPCALLID] =&gt; 1be189fa6281ffc1108db32935f05016@192.168.7.7:5060
            )
            [chanFlags] =&gt; 1020
            [chanTransferCap] =&gt; speech
        )
        ....
    )

The function returns an array of all channels. Unknown parameters within the channel are
set to null.

An empty array is returned if there are no active channels.</long-description>
          <tag name="param" line="1517" description="&lt;p&gt;Translate parameters when possible&lt;/p&gt;" type="bool" variable="$translate">
            <type>bool</type>
          </tag>
          <tag name="param" line="1517" description="&lt;p&gt;Rather than indexing the outer array with the unique channel name, index with the SNMP table position&lt;/p&gt;" type="bool" variable="$useIndexes">
            <type>bool</type>
          </tag>
          <tag name="return" line="1517" description="All the details of individual channels into an array." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$useIndexes</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="798" code="PPC:ERR-50007">No summary for property $CHANNEL_STATES</error>
      <error line="1108" code="PPC:ERR-50007">No summary for property $CHANNEL_AMA_FLAGS</error>
      <error line="1170" code="PPC:ERR-50007">No summary for property $CHANNEL_ADSIs</error>
      <error line="1280" code="PPC:ERR-50007">No summary for property $CHANNEL_HANGUP_CAUSES</error>
      <error line="1444" code="PPC:ERR-50007">No summary for property $CHANNEL_TRANSFER_CAPABILITIES</error>
    </parse_markers>
    <source></source>
  </file>
  <file path="MIBS/Cisco/SMST.php" generated-path="MIBS.Cisco.SMST.html" hash="479766cee3501c20fbc4274089eeb0c3" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Cisco" line="44" package="global">
      <extends>\OSS_SNMP\MIBS\Cisco</extends>
      <name>SMST</name>
      <full_name>\OSS_SNMP\MIBS\Cisco\SMST</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on Cisco devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012 - 2013, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="47" package="global">
        <name>OID_STP_X_SMST_MAX_INSTANCES</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::OID_STP_X_SMST_MAX_INSTANCES</full_name>
        <value>'.1.3.6.1.4.1.9.9.82.1.14.1.0'</value>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="48" package="global">
        <name>OID_STP_X_SMST_MAX_INSTANCE_ID</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::OID_STP_X_SMST_MAX_INSTANCE_ID</full_name>
        <value>'.1.3.6.1.4.1.9.9.82.1.14.2.0'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="49" package="global">
        <name>OID_STP_X_SMST_REGION_REVISION</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::OID_STP_X_SMST_REGION_REVISION</full_name>
        <value>'.1.3.6.1.4.1.9.9.82.1.14.3.0'</value>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="52" package="global">
        <name>OID_STP_X_SMST_INSTANCE_TABLE_VLANS_MAPPED_1K2K</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::OID_STP_X_SMST_INSTANCE_TABLE_VLANS_MAPPED_1K2K</full_name>
        <value>".1.3.6.1.4.1.9.9.82.1.14.5.1.2"</value>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="53" package="global">
        <name>OID_STP_X_SMST_INSTANCE_TABLE_VLANS_MAPPED_3K4K</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::OID_STP_X_SMST_INSTANCE_TABLE_VLANS_MAPPED_3K4K</full_name>
        <value>".1.3.6.1.4.1.9.9.82.1.14.5.1.3"</value>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="55" package="global">
        <name>OID_STP_X_SMST_REMAINING_HOP_COUNT</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::OID_STP_X_SMST_REMAINING_HOP_COUNT</full_name>
        <value>'.1.3.6.1.4.1.9.9.82.1.14.5.1.4'</value>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="56" package="global">
        <name>OID_STP_X_SMST_INSTANCE_CIST_REGIONAL_ROOT</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::OID_STP_X_SMST_INSTANCE_CIST_REGIONAL_ROOT</full_name>
        <value>'.1.3.6.1.4.1.9.9.82.1.14.5.1.5.0'</value>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="57" package="global">
        <name>OID_STP_X_SMST_INSTANCE_CIST_INT_ROOT_COST</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::OID_STP_X_SMST_INSTANCE_CIST_INT_ROOT_COST</full_name>
        <value>'.1.3.6.1.4.1.9.9.82.1.14.5.1.6.0'</value>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS\Cisco" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="68" package="global">
        <name>maxInstances</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::maxInstances()</full_name>
        <docblock line="68">
          <description>Returns the maximum number of MST instances</description>
          <long-description>&gt; "The maximum number of MST instances
&gt; that can be supported by the device for IEEE MST"</long-description>
          <tag name="return" line="68" description="The maximum number of MST instances" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="81" package="global">
        <name>maxInstanceId</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::maxInstanceId()</full_name>
        <docblock line="81">
          <description>Returns the maximum MST instance ID</description>
          <long-description>&gt; "The maximum MST (Multiple Spanning Tree) instance id,
&gt; that can be supported by the device for IEEE MST"</long-description>
          <tag name="return" line="81" description="The maximum MST instance ID" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="91" package="global">
        <name>regionRevision</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::regionRevision()</full_name>
        <docblock line="91">
          <description>Returns the operational SMST region revision.</description>
          <long-description></long-description>
          <tag name="return" line="91" description="The operational SMST region revision" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="118" package="global">
        <name>vlansMapped</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::vlansMapped()</full_name>
        <docblock line="118">
          <description>Return array of MST instances containing an array of mapped VLANs</description>
          <long-description>The form of the returned array is:

    [
        $mstInstanceId =&gt; [
            $vlanTag =&gt; true / false,
            $vlanTag =&gt; true / false,
            ...
        ],
        ...
    ]

If a VLAN tag is not present in the array of VLANs, then it is not a member of that MST instance.</long-description>
          <tag name="see" line="118" description="" link="\OSS_SNMP\MIBS\Cisco\vlansMappedAsRanges()"/>
          <tag name="param" line="118" description="&lt;p&gt;Limit results to a single instance ID (returned array is just vlans)&lt;/p&gt;" type="int" variable="$instanceId">
            <type>int</type>
          </tag>
          <tag name="return" line="118" description="as described above." type="Array">
            <type>Array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$instanceID</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="196" package="global">
        <name>vlansMappedAsRanges</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::vlansMappedAsRanges()</full_name>
        <docblock line="196">
          <description>Return array of MST instances containing an array of mapped VLAN ranges</description>
          <long-description>The form of the returned array is:

    [
        $mstInstanceId =&gt; [
            500-599,
            3000-4094,
            ...
        ],
        ...
    ]

Example usage:

    foreach( $ports as $id =&gt; $portConf )
    {
        echo sprintf( "%-16s - %-8s:\t", $portConf['host'], $portConf['port'] );
        echo $hosts[ $portConf['host'] ]-&gt;useIface()-&gt;operationStates( true )[ $portNameToIndex[ $portConf['host'] ][ $portConf['port'] ] ] . "\n";
    }

Which results in (for example):

    MST0       vlans mapped: 1-299,400-499,600-799,900-999,1800-4094
    MST1       vlans mapped: 300-399
    MST2       vlans mapped: 500-599,800-899,1000-1099,1300-1499
    MST3       vlans mapped: 1500-1599
    MST4       vlans mapped: 1100-1199
    MST5       vlans mapped: 1200-1299
    MST6       vlans mapped: 1600-1799</long-description>
          <tag name="see" line="196" description="" link="\OSS_SNMP\MIBS\Cisco\vlansMapped()"/>
          <tag name="param" line="196" description="&lt;p&gt;Limit results to a single instance ID (returned array is one dimensional)&lt;/p&gt;" type="int" variable="$instanceId">
            <type>int</type>
          </tag>
          <tag name="return" line="196" description="as described above." type="Array">
            <type>Array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$instanceID</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="286" package="global">
        <name>remainingHopCount</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::remainingHopCount()</full_name>
        <docblock line="286">
          <description>Returns the remaining hop count for all MST instances</description>
          <long-description>&gt; "The remaining hop count for this MST instance. If this object
&gt; value is not applicable on an MST instance, then the value
&gt; retrieved for this object for that MST instance will be -1.
&gt;
&gt; This object is only instantiated when the object value of
&gt; stpxSpanningTreeType is mst(4)."</long-description>
          <tag name="return" line="286" description="The remaining hop count for all MST instances" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="302" package="global">
        <name>instances</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::instances()</full_name>
        <docblock line="302">
          <description>Returns an array of running MST instances.</description>
          <long-description>This is a hack on the remainingHopCount() as the MIB of this
is empty on my test box (.1.3.6.1.4.1.9.9.82.1.14.5.1.1)

We name the instances as well based on the region name / use specified string.</long-description>
          <tag name="param" line="302" description="&lt;p&gt;If null, then instances are named using the MST region name. Else this is the root of the name.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="302" description="The running MST instances" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="330" package="global">
        <name>cistRegionalRoot</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::cistRegionalRoot()</full_name>
        <docblock line="330">
          <description>Returns the maximum number of MST instances</description>
          <long-description>&gt; "Indicates the Bridge Identifier (refer to BridgeId
&gt; defined in BRIDGE-MIB) of CIST (Common and Internal
&gt; Spanning Tree) Regional Root for the MST region.
&gt;
&gt; This object is only instantiated when the object value of
&gt; stpxSpanningTreeType is mst(4) and stpxSMSTInstanceIndex
&gt; is 0."</long-description>
          <tag name="return" line="330" description="The bridge identifier of the CIST regional root for the MST region" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="349" package="global">
        <name>cistIntRootCost</name>
        <full_name>\OSS_SNMP\MIBS\Cisco\SMST::cistIntRootCost()</full_name>
        <docblock line="349">
          <description>Returns the CIST Internal Root Path Cost</description>
          <long-description>&gt; "Indicates the CIST Internal Root Path Cost, i.e., the
&gt; path cost to the CIST Regional Root as specified by the
&gt; corresponding stpxSMSTInstanceCISTRegionalRoot for the
&gt; MST region.
&gt;
&gt; This object is only instantiated when the object value of
&gt; stpxSpanningTreeType is mst(4) and stpxSMSTInstanceIndex
&gt; is 0."</long-description>
          <tag name="return" line="349" description="The bridge identifier of the CIST regional root for the MST region" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers>
      <fixme line="206">extract as utility function?</fixme>
    </markers>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="118" code="PPC:ERR-50015">Argument $instanceID is missing from the Docblock of vlansMapped()</error>
      <error line="196" code="PPC:ERR-50015">Argument $instanceID is missing from the Docblock of vlansMappedAsRanges()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Timer.php" generated-path="Timer.html" hash="20817f81c5aab10d63d45db8c8284783" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP" line="44" package="global">
      <extends/>
      <name>Timer</name>
      <full_name>\OSS_SNMP\Timer</full_name>
      <docblock line="44">
        <description>A class for timing PHP scripts</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <property static="true" visibility="private" namespace="OSS_SNMP" line="47" package="global">
        <name>$_start</name>
        <full_name>\OSS_SNMP\Timer::_start</full_name>
        <default>null</default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="type" line="47" description="double The start time"/>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="OSS_SNMP" line="50" package="global">
        <name>$_time</name>
        <full_name>\OSS_SNMP\Timer::_time</full_name>
        <default>null</default>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="50" description="&lt;p&gt;The elapsed time&lt;/p&gt;" type="double" variable="">
            <type>double</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OSS_SNMP" line="52" package="global">
        <name>start</name>
        <full_name>\OSS_SNMP\Timer::start()</full_name>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OSS_SNMP" line="57" package="global">
        <name>end</name>
        <full_name>\OSS_SNMP\Timer::end()</full_name>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OSS_SNMP" line="62" package="global">
        <name>time</name>
        <full_name>\OSS_SNMP\Timer::time()</full_name>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="52" code="PPC:ERR-50008">No summary for method start()</error>
      <error line="57" code="PPC:ERR-50008">No summary for method end()</error>
      <error line="62" code="PPC:ERR-50008">No summary for method time()</error>
      <error line="47" code="PPC:ERR-50007">No summary for property $_start</error>
    </parse_markers>
    <source>eJy1VsFu4zYQvfsrBosCtQPVbveYbNvIEhMTkCVVlOL1aSFLdExUFg2SshEs9t87pBzbcdu0h9YXKdTwzXtvhsN8+nW32Q0Gk5sB4C+QuxclnjcGhtUIPv7400cPkh1vgclOVRwfTWeEbDVEYisMrz0Iu1UjWg+o4k3Z1g7GbxpwMBoU11zteT0eHBO0pqzMLUxLpV4g+T6UrdyXLfwAK7cyLM0IJKbUp1TDWuKa4A7g9NsYs7udTA6Hw/hN+FjwSZ8r3wgNa9FwwOeuVAbkGsyGQ8LYFxbPU1ysfi+f+ZFbxmuhjRIrBwQoBjqNm1vQvXq7shJtiTTXUm21BwdhNiCVe8rOOJitrMVaVKUF8aBUHHZcoVnoFuyU3IsaX8ymNI7LWjaNPIj2GSrZ1qJXbDdtubkdnCTfXLHTVsuRViVrDO+0QbNNiXQtbrmSe/vpWM8L71ppRMU9jEJbGsS0UJfJ2/qKGSaumlJsuRq/QwgTX5jzSggV1x2S/P84Qa/4Aq2WVbfl2GivdZxgiSTGKNiWhitRNvpcCldDC34p51JozIXba2Pacsstt3cPBcpRV5TsPlczgWcChfWJpNLI6AVW3HYaSpTA2xpXuW0qZLiVhkNvodGXClEEHipYY0hvmpZrc7B9c2xF0Dte2T7E7cJ2qLId2Pa9qLWT2J+SGWXAkod84WcE8D3NkicakhCmS/xIIEjSZUYfZznMkigkGQM/DnE1zjM6LfIEFz74DHd+sB/68x8vgXxOM8IYJBnQeRpRBMQMmR/nlDAcF3EQFSGNHz1AEIiTHCI6pzmG5YnnEh+3OcTzVkgeYE6yYIZ/+lMa0XzpCD3QPLb5HjChD6mf5TQoIj+DtMjShBFAeQ4qpCyIfDon4RhZYGYgTyTOgc38KLpSnCxiklkJb+ROCXL1pxHpk8XLI25GgtwqO78FaCTSjDxgKQmofSGfCerys6V3xGXktwKD8COE/tx/JMzBDf/BISxTUGRkbqmjJayYspzmRU7gMUlC5zsj2RMNCLtzgFHCnHkFIzi1/dx3BBAGnWN39n1aMOo8pHFOsqxIc5rEIyz7Ah1Crj5uDU9FTmJXZzQsyZYW2Hri6uHBYkZwPbP+Oud8awdDB4P8MgxzoqH5lV6IyWNEH0kcEBuRWKQFZWSEJaTMBtA+9cLHvIWTb8uG7PpX2jv42tSeKzDQB/DDJ2olHDdgWzB6bCFnYTA7lmA8uMFLxB1avCPON8advSnxqrzBFsPxo7WddWDw2ONISmcp6EqJnT2qLuj+NOv+k5sVAcsOT7f60+35yV2e99cX4S+4ZzLoieZ2Vg6+OmdQA9yblx3OPIlJOF6VHLSxVyRq4XaTDdN2groBssexCd996UN+hrZrmrvBGWpfqkskpLtz4+w9LPfxLdZrjNVdwbprKzfAXdbhyIV8PQ1BzZv17e2Z01ZUSlrQIRjVcRj1Xf/tXWictn8L7Aj+BS7+q/Im97/J4/ZfJ8LbulPtm3wnrG+DPwBskecv</source>
  </file>
  <file path="MIBS/Extreme/Vlan.php" generated-path="MIBS.Extreme.Vlan.html" hash="32868594f8bea311002024f2b17374d7" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Extreme" line="45" package="global">
      <extends>\OSS_SNMP\MIBS\Extreme</extends>
      <name>Vlan</name>
      <full_name>\OSS_SNMP\MIBS\Extreme\Vlan</full_name>
      <docblock line="45">
        <description>A class for performing SNMP V2 VLAN queries on Extreme devices</description>
        <long-description></long-description>
        <tag name="see" line="45" description="" link="\OSS_SNMP\MIBS\Extreme\http://www.extremenetworks.com/products/mibs.aspx"/>
        <tag name="copyright" line="45" description="Copyright (c) 2012 - 2013, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="45" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="47" package="global">
        <name>OID_VLAN_IF_INDEX</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::OID_VLAN_IF_INDEX</full_name>
        <value>'.1.3.6.1.4.1.1916.1.2.1.2.1.1'</value>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="48" package="global">
        <name>OID_VLAN_IF_DESCRIPTION</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::OID_VLAN_IF_DESCRIPTION</full_name>
        <value>'.1.3.6.1.4.1.1916.1.2.1.2.1.2'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="49" package="global">
        <name>OID_VLAN_IF_TYPE</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::OID_VLAN_IF_TYPE</full_name>
        <value>'.1.3.6.1.4.1.1916.1.2.1.2.1.3'</value>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="50" package="global">
        <name>OID_VLAN_IF_GLOBAL_IDENTIFIER</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::OID_VLAN_IF_GLOBAL_IDENTIFIER</full_name>
        <value>'.1.3.6.1.4.1.1916.1.2.1.2.1.4'</value>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="51" package="global">
        <name>OID_VLAN_IF_STATUS</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::OID_VLAN_IF_STATUS</full_name>
        <value>'.1.3.6.1.4.1.1916.1.2.1.2.1.6'</value>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="52" package="global">
        <name>OID_VLAN_IF_LOOPBACK_MODE_FLAG</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::OID_VLAN_IF_LOOPBACK_MODE_FLAG</full_name>
        <value>'.1.3.6.1.4.1.1916.1.2.1.2.1.9'</value>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="53" package="global">
        <name>OID_VLAN_IF_VLAN_ID</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::OID_VLAN_IF_VLAN_ID</full_name>
        <value>'.1.3.6.1.4.1.1916.1.2.1.2.1.10'</value>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="55" package="global">
        <name>OID_VLAN_OPAQUE_TAGGED_PORTS</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::OID_VLAN_OPAQUE_TAGGED_PORTS</full_name>
        <value>".1.3.6.1.4.1.1916.1.2.6.1.1.1"</value>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="56" package="global">
        <name>OID_VLAN_OPAQUE_UNTAGGED_PORTS</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::OID_VLAN_OPAQUE_UNTAGGED_PORTS</full_name>
        <value>".1.3.6.1.4.1.1916.1.2.6.1.1.2"</value>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="99" package="global">
        <name>IF_VLAN_TYPE_LAYER2</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::IF_VLAN_TYPE_LAYER2</full_name>
        <value>1</value>
        <docblock line="99">
          <description>Constant for possible value of VLAN type</description>
          <long-description></long-description>
          <tag name="see" line="99" description="" link="\OSS_SNMP\MIBS\Extreme\ifTypes()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="165" package="global">
        <name>IF_VLAN_STATUS_ACTIVE</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::IF_VLAN_STATUS_ACTIVE</full_name>
        <value>1</value>
        <docblock line="165">
          <description>Constant for possible value of VLAN status</description>
          <long-description></long-description>
          <tag name="see" line="165" description="" link="\OSS_SNMP\MIBS\Extreme\ifStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="171" package="global">
        <name>IF_VLAN_STATUS_NOTINSERVICE</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::IF_VLAN_STATUS_NOTINSERVICE</full_name>
        <value>2</value>
        <docblock line="171">
          <description>Constant for possible value of VLAN status</description>
          <long-description></long-description>
          <tag name="see" line="171" description="" link="\OSS_SNMP\MIBS\Extreme\ifStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="177" package="global">
        <name>IF_VLAN_STATUS_NOTREADY</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::IF_VLAN_STATUS_NOTREADY</full_name>
        <value>3</value>
        <docblock line="177">
          <description>Constant for possible value of VLAN status</description>
          <long-description></long-description>
          <tag name="see" line="177" description="" link="\OSS_SNMP\MIBS\Extreme\ifStates()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="213" package="global">
        <name>IF_VLAN_LOOPBACK_MODE_FLAG_TRUE</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::IF_VLAN_LOOPBACK_MODE_FLAG_TRUE</full_name>
        <value>1</value>
        <docblock line="213">
          <description>Constant for possible value of loopback mode flag</description>
          <long-description></long-description>
          <tag name="see" line="213" description="" link="\OSS_SNMP\MIBS\Extreme\ifLoopbackModeFlags()"/>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Extreme" line="219" package="global">
        <name>IF_VLAN_LOOPBACK_MODE_FLAG_FALSE</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::IF_VLAN_LOOPBACK_MODE_FLAG_FALSE</full_name>
        <value>2</value>
        <docblock line="219">
          <description>Constant for possible value of loopback mode flag</description>
          <long-description></long-description>
          <tag name="see" line="219" description="" link="\OSS_SNMP\MIBS\Extreme\ifLoopbackModeFlags()"/>
        </docblock>
      </constant>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="107" package="global">
        <name>$IF_VLAN_TYPES</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::IF_VLAN_TYPES</full_name>
        <default>array(self::IF_VLAN_TYPE_LAYER2 =&gt; 'vlanLayer2(1)')</default>
        <docblock line="107">
          <description>Text representation of VLAN types</description>
          <long-description></long-description>
          <tag name="see" line="107" description="" link="\OSS_SNMP\MIBS\Extreme\ifTypes()"/>
          <tag name="var" line="107" description="&lt;p&gt;Text representations of VLAN types&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="185" package="global">
        <name>$IF_VLAN_STATES</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::IF_VLAN_STATES</full_name>
        <default>array(self::IF_VLAN_STATUS_ACTIVE =&gt; 'active', self::IF_VLAN_STATUS_NOTINSERVICE =&gt; 'notInService', self::IF_VLAN_STATUS_NOTREADY =&gt; 'notReady')</default>
        <docblock line="185">
          <description>Text representation of VLAN states</description>
          <long-description></long-description>
          <tag name="see" line="185" description="" link="\OSS_SNMP\MIBS\Extreme\ifstates()"/>
          <tag name="var" line="185" description="&lt;p&gt;Text representations of VLAN states&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="227" package="global">
        <name>$IF_VLAN_LOOPBACK_MODE_FLAGS</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::IF_VLAN_LOOPBACK_MODE_FLAGS</full_name>
        <default>array(self::IF_VLAN_LOOPBACK_MODE_FLAG_TRUE =&gt; true, self::IF_VLAN_LOOPBACK_MODE_FLAG_FALSE =&gt; false)</default>
        <docblock line="227">
          <description>Text representation of loopback mode flags</description>
          <long-description></long-description>
          <tag name="see" line="227" description="" link="\OSS_SNMP\MIBS\Extreme\ifLoopbackModeFlags()"/>
          <tag name="var" line="227" description="&lt;p&gt;Text representation of loopback mode flags&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS\Extreme" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="77" package="global">
        <name>ifIndexes</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::ifIndexes()</full_name>
        <docblock line="77">
          <description>Get an array of VLAN interface indexes (ifIndex)</description>
          <long-description>NB: VLAN indexes return only, not physical interfaces.

Queries: EXTREME-VLAN-MIB::extremeVlanIfIndex

Example of returned array:

    [
        [1000004] =&gt; 1000004
        [1000005] =&gt; 1000005
        ...
    ]</long-description>
          <tag name="return" line="77" description="An array of VLAN interface indexes (ifIndex)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="88" package="global">
        <name>ifDescriptions</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::ifDescriptions()</full_name>
        <docblock line="88">
          <description>Get the device's VLAN descriptions (indexed by vlanIfIndex)</description>
          <long-description></long-description>
          <tag name="return" line="88" description="The device's VLAN descriptions (indexed by vlanIfIndex)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="124" package="global">
        <name>ifTypes</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::ifTypes()</full_name>
        <docblock line="124">
          <description>Get the device's VLAN types (indexed by vlanIfIndex)</description>
          <long-description>&gt; -- Extreme Networks Vlan Type Textual Convention
&gt; --
&gt; --  vlanLayer2(1) = The globally identified VLAN interface is protocol
&gt; --  independent and based on port grouping.  The configuration of
&gt; --  port grouping is controlled through the ifStackTable.</long-description>
          <tag name="see" line="124" description="" link="\OSS_SNMP\MIBS\Extreme\IF_VLAN_TYPES"/>
          <tag name="param" line="124" description="&lt;p&gt;If true, return the string representation&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="124" description="The device's VLAN types (indexed by vlanIfIndex)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="153" package="global">
        <name>ifGlobalIdentifiers</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::ifGlobalIdentifiers()</full_name>
        <docblock line="153">
          <description>Get the device's VLAN global identifiers (indexed by vlanIfIndex)</description>
          <long-description>&gt; An administratively assigned global VLAN identifier.  For
&gt; VLAN interfaces, on different network devices, which are
&gt; part of the same globally identified VLAN, the value of this
&gt; object will be the same.
&gt;
&gt; The binding between a global identifier and a VLAN
&gt; interface can be created or removed.  To create a binding
&gt; an NMS must write a non-zero value to this object.  To
&gt; delete a binding, the NMS must write a zero to this
&gt; object. The value 1 is reserved for the default VLAN and
&gt; this cannot be deleted or re-assigned.</long-description>
          <tag name="return" line="153" description="The device's VLAN global identifiers (indexed by vlanIfIndex)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="198" package="global">
        <name>ifStates</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::ifStates()</full_name>
        <docblock line="198">
          <description>Get the device's VLAN states</description>
          <long-description></long-description>
          <tag name="see" line="198" description="" link="\OSS_SNMP\MIBS\Extreme\IF_VLAN_STATES"/>
          <tag name="param" line="198" description="&lt;p&gt;If true, return the string representation&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="198" description="The device's VLAN states (indexed by vlanIfIndex)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="239" package="global">
        <name>ifLoopbackModeFlags</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::ifLoopbackModeFlags()</full_name>
        <docblock line="239">
          <description>Get the device's VLAN loopback mode flags</description>
          <long-description></long-description>
          <tag name="see" line="239" description="" link="\OSS_SNMP\MIBS\Extreme\IF_VLAN_LOOPBACK_MODE_FLAGS"/>
          <tag name="param" line="239" description="&lt;p&gt;If true, return boolean values for flag&lt;/p&gt;" type="boolean" variable="$translate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="239" description="The device's VLAN loopback mode flags (indexed by vlanIfIndex)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="255" package="global">
        <name>ifVlanIds</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::ifVlanIds()</full_name>
        <docblock line="255">
          <description>Get the device's VLAN IDs / tags  (indexed by vlanIfIndex)</description>
          <long-description></long-description>
          <tag name="return" line="255" description="The device's VLAN IDs / tags (indexed by vlanIfIndex)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="265" package="global">
        <name>ifVlanIdsToIfIndexes</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::ifVlanIdsToIfIndexes()</full_name>
        <docblock line="265">
          <description>Get the device's VLAN IDs / tags mapped to vlanIfIndex (indexed by tag)</description>
          <long-description></long-description>
          <tag name="return" line="265" description="The device's VLAN IDs / tags mapped to vlanIfIndex (indexed by tag)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="286" package="global">
        <name>idsToNames</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::idsToNames()</full_name>
        <docblock line="286">
          <description>Get the device's VLAN IDs mapped to names</description>
          <long-description>Sample return:

    [
        [1] =&gt; Default
        [2] =&gt; Mgmt
        ...
        [200] =&gt; INTERNET
        ...
    ]</long-description>
          <tag name="return" line="286" description="The device's VLAN IDs mapped to names" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="319" package="global">
        <name>opaqueTaggedPorts</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::opaqueTaggedPorts()</full_name>
        <docblock line="319">
          <description>Get tagged ports by VLAN  (indexed by vlanIfIndex)</description>
          <long-description>The result is an array of HEX strings indicating VLAN tagging of an interface
indexed by the vlanIfIndex such as:

    [
        [1000005] =&gt; 0000000000000000000000000000000000000000000000000000000000000000
        [1000007] =&gt; 0000000000008000000000000000000000000000000000000000000000000000
        [1000008] =&gt; 5000400000008000000000000000000000000000000000000000000000000000
        ...
    ]

So, for VLAN ifIndex 1000008 above, if you take the first octet of '50', you can
see that of the first eight ports, only the 2nd and 4th (50 = 01010000) are tagged.</long-description>
          <tag name="see" line="319" description="to translate a hex string to a true / false array" link="\OSS_SNMP\SNMP::ppHexStringFlags()"/>
          <tag name="see" line="319" description="for a useful use of this function." link="\OSS_SNMP\MIBS\Extreme\getTaggedPortsForVlan()"/>
          <tag name="return" line="319" description="The device's VLAN IDs / tags (indexed by vlanIfIndex)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="345" package="global">
        <name>opaqueUntaggedPorts</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::opaqueUntaggedPorts()</full_name>
        <docblock line="345">
          <description>Get untagged ports by VLAN  (indexed by vlanIfIndex)</description>
          <long-description>The result is an array of HEX strings indicating VLAN (un)tagging of an interface
indexed by the vlanIfIndex such as:

    [
        [1000005] =&gt; 0000000000000000000000000000000000000000000000000000000000000000
        [1000007] =&gt; 0000000000008000000000000000000000000000000000000000000000000000
        [1000008] =&gt; 5000400000008000000000000000000000000000000000000000000000000000
        ...
    ]

So, for VLAN ifIndex 1000008 above, if you take the first octet of '50', you can
see that of the first eight ports, only the 2nd and 4th (50 = 01010000) are untagged.</long-description>
          <tag name="see" line="345" description="to translate a hex string to a true / false array" link="\OSS_SNMP\SNMP::ppHexStringFlags()"/>
          <tag name="see" line="345" description="for a useful use of this function." link="\OSS_SNMP\MIBS\Extreme\getUntaggedPortsForVlan()"/>
          <tag name="return" line="345" description="The device's VLAN IDs / tags (indexed by vlanIfIndex)" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="358" package="global">
        <name>getTaggedPortsForVlan</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::getTaggedPortsForVlan()</full_name>
        <docblock line="358">
          <description>For a given VLAN vlanIfIndex, this function returns an array
of ports indicating whether the port is a tagged member of the VLAN.</description>
          <long-description></long-description>
          <tag name="see" line="358" description="" link="\OSS_SNMP\MIBS\Extreme\getPortsForVlan()"/>
          <tag name="param" line="358" description="&lt;p&gt;The vlanIfIndex of the VLAN to get the results for&lt;/p&gt;" type="int" variable="$vlanIfIndex">
            <type>int</type>
          </tag>
          <tag name="return" line="358" description="Array indexed by ifIndex indicating whether the port is a tagged member of the given vlan" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$vlanIfIndex</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="371" package="global">
        <name>getUntaggedPortsForVlan</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::getUntaggedPortsForVlan()</full_name>
        <docblock line="371">
          <description>For a given VLAN vlanIfIndex, this function returns an array
of ports indicating whether the port is a untagged member of the VLAN.</description>
          <long-description></long-description>
          <tag name="see" line="371" description="" link="\OSS_SNMP\MIBS\Extreme\getPortsForVlan()"/>
          <tag name="param" line="371" description="&lt;p&gt;The vlanIfIndex of the VLAN to get the results for&lt;/p&gt;" type="int" variable="$vlanIfIndex">
            <type>int</type>
          </tag>
          <tag name="return" line="371" description="Array indexed by ifIndex indicating whether the port is an untagged member of the given vlan" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$vlanIfIndex</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="397" package="global">
        <name>getPortsForVlan</name>
        <full_name>\OSS_SNMP\MIBS\Extreme\Vlan::getPortsForVlan()</full_name>
        <docblock line="397">
          <description>For a given VLAN vlanIfIndex, this function returns an array
of ports indicating whether the port is a member (tagged or untagged)
of the VLAN.</description>
          <long-description>A sample result showing that ports with ifIndex 1002 to 1004 are a
member of a given VLAN while the others aren't is:

    [
        [1001] =&gt; bool(false)
        [1002] =&gt; bool(true)
        [1003] =&gt; bool(true)
        [1004] =&gt; bool(true)
        [1005] =&gt; bool(true)
        [1006] =&gt; bool(false)
    ]</long-description>
          <tag name="param" line="397" description="&lt;p&gt;The vlanIfIndex of the VLAN to get the results for&lt;/p&gt;" type="int" variable="$vlanIfIndex">
            <type>int</type>
          </tag>
          <tag name="param" line="397" description="&lt;p&gt;If null, both tagged or untagged ports. Otherwise one of &lt;code&gt;opaqueTaggedPorts&lt;/code&gt; or &lt;code&gt;opaqueUntaggedPorts&lt;/code&gt;&lt;/p&gt;" type="string|null" variable="">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="397" description="Array indexed by ifIndex indicating whether the port is a member of the given vlan" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$vlanIfIndex</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fn</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Extreme" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="397" code="PPC:ERR-50015">Argument $fn is missing from the Docblock of getPortsForVlan()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Cache/Basic.php" generated-path="Cache.Basic.html" hash="3b60236d4e0734efe4a903314bc7fd4e" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\Cache" line="44" package="global">
      <extends>\OSS_SNMP\Cache</extends>
      <name>Basic</name>
      <full_name>\OSS_SNMP\Cache\Basic</full_name>
      <docblock line="44">
        <description>basic (array) cache implementation</description>
        <long-description>See the implementation in \OSS_SNMP\Cache\Basic for proper examples and documentation.</long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <property static="false" visibility="protected" namespace="OSS_SNMP\Cache" line="51" package="global">
        <name>$_cache</name>
        <full_name>\OSS_SNMP\Cache\Basic::_cache</full_name>
        <default></default>
        <docblock line="51">
          <description>An array to store results - a temporary cache</description>
          <long-description></long-description>
          <tag name="var" line="51" description="&lt;p&gt;An array to store results - a temporary cache&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="61" package="global">
        <name>__construct</name>
        <full_name>\OSS_SNMP\Cache\Basic::__construct()</full_name>
        <docblock line="61">
          <description>Cache constructor.</description>
          <long-description>For basic cache, takes no parameters.</long-description>
          <tag name="return" line="61" description="An instance of the cache ($this) for  fluent interfaces" type="\OSS_SNMP\Cache\Basic">
            <type>\OSS_SNMP\Cache\Basic</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="76" package="global">
        <name>load</name>
        <full_name>\OSS_SNMP\Cache\Basic::load()</full_name>
        <docblock line="76">
          <description>Load a named value from the cache (or null if not present)</description>
          <long-description></long-description>
          <tag name="param" line="76" description="&lt;p&gt;The name of the value to load&lt;/p&gt;" type="string" variable="$var">
            <type>string</type>
          </tag>
          <tag name="return" line="76" description="The value from the cache or null" type="mixed|null">
            <type>mixed</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$var</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="92" package="global">
        <name>save</name>
        <full_name>\OSS_SNMP\Cache\Basic::save()</full_name>
        <docblock line="92">
          <description>Save a named value to the cache</description>
          <long-description></long-description>
          <tag name="param" line="92" description="&lt;p&gt;The name of the value to save&lt;/p&gt;" type="string" variable="$var">
            <type>string</type>
          </tag>
          <tag name="param" line="92" description="&lt;p&gt;The value to save&lt;/p&gt;" type="mixed" variable="$val">
            <type>mixed</type>
          </tag>
          <tag name="return" line="92" description="The value (as passed)" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$var</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$val</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="102" package="global">
        <name>clear</name>
        <full_name>\OSS_SNMP\Cache\Basic::clear()</full_name>
        <docblock line="102">
          <description>Clear a named value from the cache</description>
          <long-description></long-description>
          <tag name="param" line="102" description="&lt;p&gt;The name of the value to clear&lt;/p&gt;" type="string" variable="$var">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$var</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="113" package="global">
        <name>clearAll</name>
        <full_name>\OSS_SNMP\Cache\Basic::clearAll()</full_name>
        <docblock line="113">
          <description>Clear all values from the cache</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP\Cache" line="51" package="global">
        <name>save</name>
        <full_name>\OSS_SNMP\Cache::save()</full_name>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$varName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$varValue</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP\Cache" line="52" package="global">
        <name>load</name>
        <full_name>\OSS_SNMP\Cache::load()</full_name>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$varName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP\Cache" line="53" package="global">
        <name>clear</name>
        <full_name>\OSS_SNMP\Cache::clear()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$varName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP\Cache" line="54" package="global">
        <name>clearAll</name>
        <full_name>\OSS_SNMP\Cache::clearAll()</full_name>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1V21P40YQ/p5fMTqd1ATloL2PcL3iOAus5Nip14FDvQoZe3OxzvFGfoFD1/73PrM2IZg2lXpXhGRjz8vzPDM7Y979slltBoOjgwHhxzWbhzL7tKppmIzo7Y8/vR1TsNEFKdOUicYlb+rMFBV52TqrdTqmaXObZ8WYZKnzuEhtGCfPyYapqNSVLu90ejjoEhR1nNTHNInL8oGCH6amMHdxQW/o1j4ZxvWIDFJW21TD1OBZpm2A7c+qrjfHR0f39/eHz8wPM33U5opWWUXLLNeE6yYuazJLqleaAqVulD+b42HyOf6kO2yhTrOqLrNbG4hAhpoKzgVVLXt+cpsVMWAuTbmuxnSf1Ssypb2aprZh1ibNllkSc5AxxaWmjS4hFtSiTWnushQ39SquLZalyXNznxWfKDFFmrWM2Wmt6+PBlvJBD13FXDpYiUlh3lQ1xK5jwOW48a2541ddPXe0K0ydJXoMK8iSIyaH2k1epD1kSJzkcbbW5eEeQEi8I84jIDBOG4D8/zBRy3gnWmqSZq3RaI91PEKJDGxKWse1LrM4r55KYWvIwXfp7BL1dWZ92aaI15qx7T0UoFP2ILGfrVmGMwFibSJTVkD0QLeaOw0UDekixVPNTQWEa1NraiWsq12GIIFDRUuYtKJVZlnfc990rUjVRifch3DPuENL7sCi7cWqshTbU3IhFangLLpyQkG4n4fBpZyKKU2u8VKQG8yvQ3l+EdFF4E1FqMjxp3jqR6GcLKIAD145Cp6v+EV7/v1rEh/moVCKgpDkbO5JBESG0PEjKRTGhe96i6n0z8eEIOQHEXlyJiOYRcHYJu7cbMQnVwrOaCZC9wJ/OhPpyejaAjqTkc/5zpDQobkTRtJdeE5I80U4D5Qg0LOhplK5niNnYnoIFMhM4lL4EakLx/N6jIMrX4RM4RndiQBWZ+KJNpl/3cUNhRsxs6c7F0ICpjcmNReu5BvxQYCXE16Pu7hK/LqAEV7S1Jk550LZcMN/UQhlchehmDF0SKIWExXJaBEJOg+CqdVdifBSukKd2IBeoKx4CyUwtZ3IsQAQBsqpE76fLJS0Gko/EmG4mEcy8Eco+xUUAlYHrtNtkQPf1hmCBeE1B2ZNbD3GdHUh8Dxkfa1yDsuhoKAb7ZohJwSNenzJF+eePBe+K9gi4EhXUokRSigVG8g29ZWDvAtLn8sGdO2tbBV8bOqxLTDJM3Kml5IpdA5oCyW7FrISuhddCQ4HB1gi9tBiRzxtjI9unKz0Ce9LLMwD7KwKJ2yIzRU/jCjhl5StN7nejh9YseHpdup9lx2LgHGDc16+2KPv7Bo97a/E9/A5GmBiVhVcGLT+gnGQVvTxObfB13YsWILt/HMwQ5kgj6cKM0vzUm9yDLI3FFOt1xtT8ti39B+dTu/isnP7L/5H9orJV+uEJ+rrm6RTvo/OouaRiuGNKWked9TW4AwqtXWyIbBk4s+YxYXhbwJUGAuh6vucYpM2ZdEX52MrHQhlSBcXiX78pGhLP3zNs3jEC5BomTdoAlgiwRJNVD2nxiVNaNkUid1SNzdbCsORtfi6nfcdefq51XE4Onn6MOiA2sTtOf9z8FIkz8QptOaGTukuBrLH1bGFDshFg++2bMnbGNLjw62oR31hrGbEixJL+DUXOdpZixyvDY9a50jaF3SdfdHpHzZRtLXtQemQ7JWLYw/b/H21suUQH3yVroetKm/et/L91pr/TqPO5e8k7Bu/VJqhPQnd01nF+MB5rjOE2FL7BjErRO75WS2J/XbF7NvuCr9jNoz5mxgypaO9QnOsVuhxm6kv9z710LHss5Wrf3RzzUNiT1t+g2AJB99LzVp8ryZqin3G/9gwnQQ4DhZ4tZf/Hhr4j+vl2NjFsjs8Oiz4/QtMfSLh</source>
  </file>
  <file path="MIBS/LAG.php" generated-path="MIBS.LAG.html" hash="fe27ea2dd6252d40fa8ce00e0e943a4b" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>LAG</name>
      <full_name>\OSS_SNMP\MIBS\LAG</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on generic devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS" line="50" package="global">
        <name>OID_LAG_PORT_ATTACHED_ID</name>
        <full_name>\OSS_SNMP\MIBS\LAG::OID_LAG_PORT_ATTACHED_ID</full_name>
        <value>'.1.2.840.10006.300.43.1.2.1.1.13'</value>
        <docblock line="50">
          <description>The identifier value (port ID) of the Aggregator that this Aggregation Port is currently attached
to. Zero indicates that the Aggregation Port is not currently attached to an Aggregator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="55" package="global">
        <name>OID_LAG_AGGREGATE_OR_INDIVIDUAL</name>
        <full_name>\OSS_SNMP\MIBS\LAG::OID_LAG_AGGREGATE_OR_INDIVIDUAL</full_name>
        <value>'.1.2.840.10006.300.43.1.2.1.1.24'</value>
        <docblock line="55">
          <description>Boolean value indicating whether the Aggregator represents an Aggregate (`TRUE') or an Individual link (`FALSE')</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="63" package="global">
        <name>isAggregatePorts</name>
        <full_name>\OSS_SNMP\MIBS\LAG::isAggregatePorts()</full_name>
        <docblock line="63">
          <description>Returns an associate array of port IDs with a boolean value to indicate if it's an aggregate port (true)
or an individual port (false).</description>
          <long-description></long-description>
          <tag name="return" line="63" description="Associate array of port IDs with a boolean value to indicate if it's an aggregate port (true) or not" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="75" package="global">
        <name>portAttachedIds</name>
        <full_name>\OSS_SNMP\MIBS\LAG::portAttachedIds()</full_name>
        <docblock line="75">
          <description>Returns an associate array of port IDs with the ID of the aggregate port that
they are a member of (else 0 if not a LAG port)</description>
          <long-description></long-description>
          <tag name="return" line="75" description="Associate array of port IDs with the ID of the aggregate port that they are a member of" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="92" package="global">
        <name>getLAGPorts</name>
        <full_name>\OSS_SNMP\MIBS\LAG::getLAGPorts()</full_name>
        <docblock line="92">
          <description>Gets an associate array of LAG ports with the [id] =&gt; name of it's constituent ports</description>
          <long-description>E.g.:
   [5048] =&gt; Array
       (
           [10111] =&gt; GigabitEthernet1/0/11
           [10112] =&gt; GigabitEthernet1/0/12
       )</long-description>
          <tag name="return" line="92" description="Associate array of LAG ports with the [id] =&gt; name of it's constituent ports" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="109" package="global">
        <name>findFailedLAGPorts</name>
        <full_name>\OSS_SNMP\MIBS\LAG::findFailedLAGPorts()</full_name>
        <docblock line="109">
          <description>Utility function to identify configured but unattached LAG ports</description>
          <long-description></long-description>
          <tag name="return" line="109" description="Array of indexed port ids (array index, not value) of configured but unattached LAG ports" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1V21v20YS/u5fMS0CWAoUvTi5onCaXGiJlheQRR1J2fWlgY8WV9IiFKkjl3aNIP+9zywpipZlJ71e6Q+id3dmnnnmbfnLP9fL9cFB5+UB4ekn6/tULZaaGrMmHXV7Ry1y1jImL8nTmcRPlGuVxBmN1EppGbZokN9EKm6RSGUUxKFRY0URGTUZpTKT6a0M2welgVgHM31MJ0Ga3pNzOEji5DaI6RXdmJVGoJuUwGRWmWqECdaUNAqqZ6n1+rjTubu7az843layU9jylyqjuYok4XcdpJqSOemlJMfzrr3x+QSLs8/BQpbY+HFlqDKdqhujjOAQ5RkUxJQVDPDKjYoDQJ0n6Spr0Z3SS0pS85vk2qhaJaGaq1nASloUpJLWMgVhYIzWaXKrQrzoZaANnnkSRcmdihc0S+JQFV6z0Erq4y22lzvoMvanhDVLQhzPMw3CdQC4rDe4SW55q4xpjb840WomWzgFaiLoZFV143G4gwyGZ1GgVjJtPwMIhmvkbADB4zAHyL8PExUe17SFySxfSSTbJo4dhCjBmZRWgZapCqJsGwoTQ1Zed6fu6FgqI8tn4mAlGduzhQF30h1ILGdiplAXcKwwlKQZEN3TjeRMg4sJyTjEquSkAsJVoiUVFOqs7iGcQGHRHEcK0rJkru84b8pUpGwtZ5yHEFecoSlnYFzkYpYZF4tKORMeec6pf2m5NuF94joXYmAP6OQKmzb1ncmVK4ZnPp05o4HtemSNB1gd+644mfoOFn60PEj+yBtFDxhfkf3rxLU9jxyXxPlkJKAQFlxr7AvbQ8sY90fTgRgPWwQlNHZ8Golz4eOY77SM4VLMaNyKknNK57bbP8O/1okYCf/KADoV/pjtncKgRRPL9UV/OrJcmkzdiePZBPeMqoHw+iNLnNuDNlDAMtkX9tgn78wajXY8di7HtssuPHD3xAZW62RkF8bGV6Ve1+777Nn2rQ8iAXPUIm9i9wW/2L/a8Mtyr1qlXs/+1xSHsEkD69wa2p5R1/gGQwhTf+ra5wwdlHjTE88X/tS3aeg4A8O7Z7sXom97b43CkeMZ8qaejc5t+ZYBADVgznvL7ydTTxgOxdi3XXc68YUzbiLsl2AIWC2IDqogO2MTZxDmuFesmDkx8WjR5ZmNdZf5NcxZTIcHBvt+/RhsglB/x18a28ORGNrjvs0nHNZ0KTy7iRAKjw+IwvSlBbtT4z6HDeiKV1EwuEnqlgkwiVOyBheCXSgFkBaeKFPIUNg/K0PQPniJQWKKFnNiOzV+OxcnoBMjEzPzJfIMPSjLuOFxYXHf495k5svFEf03R5ly2ce0kDHeZyjcWzQ6lLKR/1D1wv/L9IXCIEf1p48m7C9mwH7YHZbvIdM5KHwYWUOSv6NFhBn9Vvf34Ith07hcNEQfjRCtM9boL+iLt0GUS2qsE0xZMWhuJq21WKRyEWjTC820Q5vaLHJjnrAA1mZ5mkJZdE+BxgVhKcONIZ206d8yTdDiQ56o4LIanPs0YYzs0cZtFRxs8ZTNHa7zD7ox5o0jBteg4HqCfLy2fN/qn9mDazGgd3TY7rWP2j+/6bZ73W73p/brbrf95rVZ7PHf68O3B7sU0UmSRBJWC3JK/Jwcd0tZTZMaRTwpcV2KdVbHClr/47tT+7DJAwEbAoowtvIgwpiMP2P71Bp52H/GJWs4dO2h5dvXjnvN3QntfYpu803Pjt7s8cyVOk/NSCakTTJTjBLZhTGGwJdJkBVTNaCbBzTobSRJ8Sw8LPRU3hrxhk5zuXGo9Ftt/S7OzDHDZXMTyc3hD6lBV+Kx/k58DAz59oD3NVfkjOZ5PDN5qbIqkJyiWaPw6ks1yUu4L7g2Xr1fSM1F12i+er9e+ylK+YJhNfbs3wXR517YoExG8+Pjb0W6Sc1iBnz9S+HklEVFlPW9wwoXZlW3S3lvLrEBrrGrG2Q7ZBoSEaMuE8t1GpiOw6LNh0H8H2P5TXB7UT0bPha1yiYiwj8Rvf3RedRangzKUOqnIrIhreb1RxV+onfvq7upSVvTApTO0VGK8zvs2u1F+7jqVkQf/9F987NRY7Gp2o4Zzjv/G4let9frGZGhWgQ3Stvc2GKpe51up9d7SuToSZGjHZHmn82Iv0rO/jRAYKF4fwG/KMy9KzA0mm+3n2y4DUikTlW9j7IJ4S3kRcgIXyBnJ8V/zQefu2reqG/+8A5F9PDEFsnH+slPH0v1YGBPluKTQ8xxu+F3c9VpNCuBmh+bLDf6q4zdTdmpVpHS91vWuJcWd4R75nuuFnmKWYyvHsrjajRXEXs+1JsAozvL3/k72gx83FQaxQGz3jJ9xXTyZvn9+J1W98d9Dq2ngYpk+GT4Ox1zioIoqpvb0c/RiQITlWwbicfDoUZ6XXEFe0flZn1H76M825uTFZ6dJFQZg9+m15dHqfjDozOPz/GTx5nUNUsfKzufNp2v/vBHsYpz+XDn68GeUqj7Xdf6RGV8J5CvD9i/k5ThOzoK+eM8knNdtJTvzinaFE6d623D5wr6A0+bwl8=</source>
  </file>
  <file path="MIBS/Foundry.php" generated-path="MIBS.Foundry.html" hash="8ff0493df1e28dea27807c7ec9067a6a" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>Foundry</name>
      <full_name>\OSS_SNMP\MIBS\Foundry</full_name>
      <docblock line="44">
        <description>A class for performing SNMP V2 queries on Foundry / Brocade devices</description>
        <long-description></long-description>
        <tag name="copyright" line="44" description="Copyright (c) 2013, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="44" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1VcGO2zYQvfsrBrl0d6HabXrbBG1kibYJyJIrSusYCFDIEh0TtUVXotZZFP33PlLaXccF0kvri2SK8+a9N8Ph+19O+9NoNLkbEX6BPj016vPe0E15S29/+PEnj5KTrEnoriklHofOKF23FKmjMrLyKOy2B1V7xBt5KOrKwfiHAzmYlhrZyuZRVuPRkKA2RWnuaVo0zRMl34W61o9FTd/T1q3cFOaWNFK2L6luKo01JR3Ay29vzOl+Mjmfz+Ovto+VnPS5sr1qaacOkvA8FY0hvSOzl5QI8ZuIlysslr8Xn+XALZWVak2jtg6IIIa6FsE1tb16u7JVdQGaO90cW4/OyuxJN+6pO+NgjrpSO1UWFsSjopF0kg3Mglt0avSjqvBi9oVxXHb6cNBnVX+mUteV6hXboKM096MXyXdX7FqrZaBV6grbu9bAbFOArsUttvrRfhrqeeFdrY0qpYddsOUATAt1mbyurpghcXko1FE2428QQuILc54JQXHVgeT/x4l6xRdolS67o0SjPddxghJp7GnoWBjZqOLQvpbC1dCCX8q5FBpL5WLtnro4Ssvtm4cCcporSjbO1UzhTEBYn0g3LRg90VbaToNETbKusCptU4HhURtJvYWmvVQIEThUtMOW3rRW78zZ9s3QitSeZGn7EOHKdmhjO7Due7FtncT+lCy4IJHMsrWfMsL7Kk0eeMhCmm7wkVGQrDYpny8yWiRRyFJBfhxiNc5SPs2zBAtvfIHIN/ZDf/7jDbGPq5QJQUlKfLmKOACRIfXjjDOBcREHUR7yeO4RQChOMor4kmfYliWeSzyEOcTXUEpmtGRpsMBff8ojnm0coRnPYptvhoQ+rfw040Ee+Smt8nSVCEaQ56BCLoLI50sWjsECmYk9sDgjsfCj6Epxso5ZaiV8JXfKwNWfRqxPFm8G3JQFmVX2+hbASNCMPBIrFnD7wj4y6PLTjTfgCvZrjk34SKG/9OdMOLibf3EIZQrylC0tdVgi8qnIeJZnjOZJEjrfBUsfeMDEOwcYJcKZlwuGqe1nviMAGDgn3tn3aS6485DHGUvTfJXxJL5F2ddwCFx9hIYvRU5iV2cYlqQbC2w9cfXwaL1gWE+tv84539oh4GCQXW5DThiaXemlmM0jPmdxwOyOxCKtuWC3KCEXdgPvU6995M2dfFs2sOtfee/gc1N7rsDEZ+SHD9xKGALQFoIPLeQsDBZDCcajO1wi7tDijni9MT4t+RR24rrEfXmHPsMMals78OzBsnPPziZ3tzy8pT86HFN77Gua6a6uMBonNG10WWBgV/IRIw+H2iF9eJmK/8kdDMCiwxxo/nHPvnfX7IfrK/NnxExGvZpnrvILBkbV0qdL9aM/R3+N/gaz24EA</source>
  </file>
  <file path="MIBS/BGP.php" generated-path="MIBS.BGP.html" hash="96b789075e3e4f5fc242ef52cc5f705b" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="45" package="global">
      <extends>\OSS_SNMP\MIB</extends>
      <name>BGP</name>
      <full_name>\OSS_SNMP\MIBS\BGP</full_name>
      <docblock line="45">
        <description>A class for performing SNMP V2 BGP queries</description>
        <long-description></long-description>
        <tag name="see" line="45" description="" link="\OSS_SNMP\MIBS\http://tools.cisco.com/Support/SNMP/do/BrowseOID.do?local=en&amp;amp;translate=Translate&amp;amp;objectInput=1.3.6.1.2.1.15"/>
        <tag name="copyright" line="45" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="45" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS" line="48" package="global">
        <name>OID_BGP_VERSION</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_VERSION</full_name>
        <value>'.1.3.6.1.2.1.15.1.0'</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="50" package="global">
        <name>OID_BGP_LOCAL_ASN</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_LOCAL_ASN</full_name>
        <value>'.1.3.6.1.2.1.15.2.0'</value>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="52" package="global">
        <name>OID_BGP_PEER_IDENTIFIER</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_IDENTIFIER</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.1'</value>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="53" package="global">
        <name>OID_BGP_PEER_CONNECTION_STATE</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_CONNECTION_STATE</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.2'</value>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="54" package="global">
        <name>OID_BGP_PEER_ADMIN_STATE</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_ADMIN_STATE</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.3'</value>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="55" package="global">
        <name>OID_BGP_PEER_NEGOTIATED_VERSION</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_NEGOTIATED_VERSION</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.4'</value>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="56" package="global">
        <name>OID_BGP_PEER_LOCAL_ADDRESS</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_LOCAL_ADDRESS</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.5'</value>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="57" package="global">
        <name>OID_BGP_PEER_LOCAL_PORT</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_LOCAL_PORT</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.6'</value>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>OID_BGP_PEER_REMOTE_ADDR</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_REMOTE_ADDR</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.7'</value>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="59" package="global">
        <name>OID_BGP_PEER_REMOTE_PORT</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_REMOTE_PORT</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.8'</value>
        <docblock line="59">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="60" package="global">
        <name>OID_BGP_PEER_REMOTE_ASN</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_REMOTE_ASN</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.9'</value>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="61" package="global">
        <name>OID_BGP_PEER_IN_UPDATES</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_IN_UPDATES</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.10'</value>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="62" package="global">
        <name>OID_BGP_PEER_OUT_UPDATES</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_OUT_UPDATES</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.11'</value>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="63" package="global">
        <name>OID_BGP_PEER_IN_TOTAL_MESSAGES</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_IN_TOTAL_MESSAGES</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.12'</value>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="64" package="global">
        <name>OID_BGP_PEER_OUT_TOTAL_MESSAGES</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_OUT_TOTAL_MESSAGES</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.13'</value>
        <docblock line="64">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="65" package="global">
        <name>OID_BGP_PEER_LAST_ERROR</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_LAST_ERROR</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.14'</value>
        <docblock line="65">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="66" package="global">
        <name>OID_BGP_PEER_FSM_ESTABLISHED_TRANSITIONS</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_FSM_ESTABLISHED_TRANSITIONS</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.15'</value>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="67" package="global">
        <name>OID_BGP_PEER_FSM_ESTABLISHED_TIME</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_FSM_ESTABLISHED_TIME</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.16'</value>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>OID_BGP_PEER_CONNECT_RETRY_INTERVAL</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_CONNECT_RETRY_INTERVAL</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.17'</value>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="69" package="global">
        <name>OID_BGP_PEER_HOLD_TIME</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_HOLD_TIME</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.18'</value>
        <docblock line="69">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="70" package="global">
        <name>OID_BGP_PEER_KEEP_ALIVE</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_KEEP_ALIVE</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.19'</value>
        <docblock line="70">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="71" package="global">
        <name>OID_BGP_PEER_HOLD_TIME_CONFIGURED</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_HOLD_TIME_CONFIGURED</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.20'</value>
        <docblock line="71">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="72" package="global">
        <name>OID_BGP_PEER_KEEP_ALIVE_CONFIGURED</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_KEEP_ALIVE_CONFIGURED</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.21'</value>
        <docblock line="72">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="73" package="global">
        <name>OID_BGP_PEER_MIN_AS_ORIGINATION_INTERVAL</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_MIN_AS_ORIGINATION_INTERVAL</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.22'</value>
        <docblock line="73">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="74" package="global">
        <name>OID_BGP_PEER_MIN_ROUTE_ADVERTISEMENT_INTERVAL</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_MIN_ROUTE_ADVERTISEMENT_INTERVAL</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.23'</value>
        <docblock line="74">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="75" package="global">
        <name>OID_BGP_PEER_IN_UPDATE_ELAPSED_TIME</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PEER_IN_UPDATE_ELAPSED_TIME</full_name>
        <value>'.1.3.6.1.2.1.15.3.1.24'</value>
        <docblock line="75">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="77" package="global">
        <name>OID_BGP_IDENTIFIER</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_IDENTIFIER</full_name>
        <value>'.1.3.6.1.2.1.15.4.0'</value>
        <docblock line="77">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="79" package="global">
        <name>OID_BGP_PATH_ATTR_PEER</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_PEER</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.1'</value>
        <docblock line="79">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="80" package="global">
        <name>OID_BGP_PATH_ATTR_ADDR_PREFIX_LENGTH</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_ADDR_PREFIX_LENGTH</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.2'</value>
        <docblock line="80">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="81" package="global">
        <name>OID_BGP_PATH_ATTR_ADDR_PREFIX</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_ADDR_PREFIX</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.3'</value>
        <docblock line="81">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="82" package="global">
        <name>OID_BGP_PATH_ATTR_ORIGIN</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_ORIGIN</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.4'</value>
        <docblock line="82">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="83" package="global">
        <name>OID_BGP_PATH_ATTR_AS_PATH_SEGMENT</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_AS_PATH_SEGMENT</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.5'</value>
        <docblock line="83">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="84" package="global">
        <name>OID_BGP_PATH_ATTR_NEXT_HOP</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_NEXT_HOP</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.6'</value>
        <docblock line="84">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="85" package="global">
        <name>OID_BGP_PATH_ATTR_MED</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_MED</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.7'</value>
        <docblock line="85">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="86" package="global">
        <name>OID_BGP_PATH_ATTR_LOCAL_PREF</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_LOCAL_PREF</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.8'</value>
        <docblock line="86">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="87" package="global">
        <name>OID_BGP_PATH_ATTR_ATOMIC_AGGREGATE</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_ATOMIC_AGGREGATE</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.9'</value>
        <docblock line="87">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="88" package="global">
        <name>OID_BGP_PATH_ATTR_AGGREGATOR_AS</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_AGGREGATOR_AS</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.10'</value>
        <docblock line="88">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="89" package="global">
        <name>OID_BGP_PATH_ATTR_AGGREGATOR_ADDR</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_AGGREGATOR_ADDR</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.11'</value>
        <docblock line="89">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="90" package="global">
        <name>OID_BGP_PATH_ATTR_CALC_LOCAL_PREF</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_CALC_LOCAL_PREF</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.12'</value>
        <docblock line="90">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="91" package="global">
        <name>OID_BGP_PATH_ATTR_BEST</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_BEST</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.13'</value>
        <docblock line="91">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="92" package="global">
        <name>OID_BGP_PATH_ATTR_UNKNOWN</name>
        <full_name>\OSS_SNMP\MIBS\BGP::OID_BGP_PATH_ATTR_UNKNOWN</full_name>
        <value>'.1.3.6.1.2.1.15.6.1.14'</value>
        <docblock line="92">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="143" package="global">
        <name>BGP_PEER_CONNECTION_STATE_IDLE</name>
        <full_name>\OSS_SNMP\MIBS\BGP::BGP_PEER_CONNECTION_STATE_IDLE</full_name>
        <value>1</value>
        <docblock line="143">
          <description>Possible value for peer connection state</description>
          <long-description></long-description>
          <tag name="var" line="143" description="&lt;p&gt;Possible value for peer connection state&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="149" package="global">
        <name>BGP_PEER_CONNECTION_STATE_CONNECT</name>
        <full_name>\OSS_SNMP\MIBS\BGP::BGP_PEER_CONNECTION_STATE_CONNECT</full_name>
        <value>2</value>
        <docblock line="149">
          <description>Possible value for peer connection state</description>
          <long-description></long-description>
          <tag name="var" line="149" description="&lt;p&gt;Possible value for peer connection state&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="155" package="global">
        <name>BGP_PEER_CONNECTION_STATE_ACTIVE</name>
        <full_name>\OSS_SNMP\MIBS\BGP::BGP_PEER_CONNECTION_STATE_ACTIVE</full_name>
        <value>3</value>
        <docblock line="155">
          <description>Possible value for peer connection state</description>
          <long-description></long-description>
          <tag name="var" line="155" description="&lt;p&gt;Possible value for peer connection state&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="161" package="global">
        <name>BGP_PEER_CONNECTION_STATE_OPENSENT</name>
        <full_name>\OSS_SNMP\MIBS\BGP::BGP_PEER_CONNECTION_STATE_OPENSENT</full_name>
        <value>4</value>
        <docblock line="161">
          <description>Possible value for peer connection state</description>
          <long-description></long-description>
          <tag name="var" line="161" description="&lt;p&gt;Possible value for peer connection state&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="167" package="global">
        <name>BGP_PEER_CONNECTION_STATE_OPENCONFIRM</name>
        <full_name>\OSS_SNMP\MIBS\BGP::BGP_PEER_CONNECTION_STATE_OPENCONFIRM</full_name>
        <value>5</value>
        <docblock line="167">
          <description>Possible value for peer connection state</description>
          <long-description></long-description>
          <tag name="var" line="167" description="&lt;p&gt;Possible value for peer connection state&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="173" package="global">
        <name>BGP_PEER_CONNECTION_STATE_ESTABLISHED</name>
        <full_name>\OSS_SNMP\MIBS\BGP::BGP_PEER_CONNECTION_STATE_ESTABLISHED</full_name>
        <value>6</value>
        <docblock line="173">
          <description>Possible value for peer connection state</description>
          <long-description></long-description>
          <tag name="var" line="173" description="&lt;p&gt;Possible value for peer connection state&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="214" package="global">
        <name>BGP_PEER_ADMIN_STATE_STOP</name>
        <full_name>\OSS_SNMP\MIBS\BGP::BGP_PEER_ADMIN_STATE_STOP</full_name>
        <value>1</value>
        <docblock line="214">
          <description>Possible value for peer admin state</description>
          <long-description></long-description>
          <tag name="var" line="214" description="&lt;p&gt;Possible value for peer admin state&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="220" package="global">
        <name>BGP_PEER_ADMIN_STATE_START</name>
        <full_name>\OSS_SNMP\MIBS\BGP::BGP_PEER_ADMIN_STATE_START</full_name>
        <value>2</value>
        <docblock line="220">
          <description>Possible value for peer admin state</description>
          <long-description></long-description>
          <tag name="var" line="220" description="&lt;p&gt;Possible value for peer admin state&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </constant>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS" line="179" package="global">
        <name>$BGP_PEER_CONNECTION_STATES</name>
        <full_name>\OSS_SNMP\MIBS\BGP::BGP_PEER_CONNECTION_STATES</full_name>
        <default>array(self::BGP_PEER_CONNECTION_STATE_IDLE =&gt; 'idle', self::BGP_PEER_CONNECTION_STATE_CONNECT =&gt; 'connect', self::BGP_PEER_CONNECTION_STATE_ACTIVE =&gt; 'active', self::BGP_PEER_CONNECTION_STATE_OPENSENT =&gt; 'opensent', self::BGP_PEER_CONNECTION_STATE_OPENCONFIRM =&gt; 'openconfirm', self::BGP_PEER_CONNECTION_STATE_ESTABLISHED =&gt; 'established')</default>
        <docblock line="179">
          <description>Look up for text representation of BGP peer connection states</description>
          <long-description></long-description>
          <tag name="var" line="179" description="&lt;p&gt;Look up for text representation of BGP peer connection states&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP\MIBS" line="226" package="global">
        <name>$BGP_PEER_ADMIN_STATES</name>
        <full_name>\OSS_SNMP\MIBS\BGP::BGP_PEER_ADMIN_STATES</full_name>
        <default>array(self::BGP_PEER_ADMIN_STATE_STOP =&gt; 'stop', self::BGP_PEER_ADMIN_STATE_START =&gt; 'start')</default>
        <docblock line="226">
          <description>Look up for text representation of BGP peer admin states</description>
          <long-description></long-description>
          <tag name="var" line="226" description="&lt;p&gt;Look up for text representation of BGP peer admin states&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="OSS_SNMP\MIBS" line="49" package="global">
        <name>$_snmp</name>
        <full_name>\OSS_SNMP\MIB::_snmp</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Instance for the SNMP object</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="107" package="global">
        <name>version</name>
        <full_name>\OSS_SNMP\MIBS\BGP::version()</full_name>
        <docblock line="107">
          <description>Returns the BGP version</description>
          <long-description>&gt; "Vector of supported BGP protocol version numbers. Each peer negotiates the version
&gt; from this vector. Versions are identified via the string of bits contained within this
&gt; object. The first octet contains bits 0 to 7, the second octet contains bits 8 to 15,
&gt; and so on, with the most significant bit referring to the lowest bit number in the
&gt; octet (e.g., the MSB of the first octet refers to bit 0). If a bit, i, is present
&gt; and set, then the version (i+1) of the BGP is supported."</long-description>
          <tag name="return" line="107" description="Returns the BGP version" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="120" package="global">
        <name>localASN</name>
        <full_name>\OSS_SNMP\MIBS\BGP::localASN()</full_name>
        <docblock line="120">
          <description>Returns the local BGP AS number</description>
          <long-description>&gt; "The local autonomous system number."</long-description>
          <tag name="return" line="120" description="The local autonomous system number." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="133" package="global">
        <name>peerIdentifiers</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerIdentifiers()</full_name>
        <docblock line="133">
          <description>Returns the BGP identifier of all peers indexed by neighbour IPv4 address</description>
          <long-description>&gt; "The BGP Identifier of this entry's BGP peer."</long-description>
          <tag name="return" line="133" description="Returns the BGP identifier of all peers indexed by neighbour IPv4 address" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="196" package="global">
        <name>peerConnectionStates</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerConnectionStates()</full_name>
        <docblock line="196">
          <description>Returns the BGP peer connection state (see `self::$BGP_PEER_CONNECTION_STATES`)</description>
          <long-description>&gt; "The BGP peer connection state."</long-description>
          <tag name="param" line="196" description="&lt;p&gt;If true, use the &lt;code&gt;$BGP_PEER_CONNECTION_STATES&lt;/code&gt; array to return textual representation&lt;/p&gt;" type="bool" variable="$translate">
            <type>bool</type>
          </tag>
          <tag name="return" line="196" description="The BGP peer connection state (see `self::$BGP_PEER_CONNECTION_STATES`)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="243" package="global">
        <name>peerAdminStates</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerAdminStates()</full_name>
        <docblock line="243">
          <description>Returns the BGP peer admin states (see `self::$BGP_PEER_ADMIN_STATES`)</description>
          <long-description>&gt; "The desired state of the BGP connection. A transition from 'stop' to 'start' will
&gt; cause the BGP Start Event to be generated. A transition from 'start' to 'stop' will
&gt; cause the BGP Stop Event to be generated. This parameter can be used to restart BGP
&gt; peer connections. Care should be used in providing write access to this object
&gt; without adequate authentication."</long-description>
          <tag name="param" line="243" description="&lt;p&gt;If true, use the &lt;code&gt;$BGP_PEER_ADMIN_STATES&lt;/code&gt; array to return textual representation&lt;/p&gt;" type="bool" variable="$translate">
            <type>bool</type>
          </tag>
          <tag name="return" line="243" description="The BGP peer admin states (see `self::$BGP_PEER_ADMIN_STATES`)" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="261" package="global">
        <name>peerNegotiatedVersions</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerNegotiatedVersions()</full_name>
        <docblock line="261">
          <description>Returns the negotiated version of BGP running between the two peers</description>
          <long-description>&gt; "The negotiated version of BGP running between the two peers"</long-description>
          <tag name="return" line="261" description="The negotiated version of BGP running between the two peers" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="273" package="global">
        <name>peerLocalAddresses</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerLocalAddresses()</full_name>
        <docblock line="273">
          <description>Returns the local IP address of this entry's BGP connection.</description>
          <long-description>&gt; "The local IP address of this entry's BGP connection."</long-description>
          <tag name="return" line="273" description="The local IP address of this entry's BGP connection." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="285" package="global">
        <name>peerLocalPorts</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerLocalPorts()</full_name>
        <docblock line="285">
          <description>Returns the local ports for the TCP connections between the BGP peers.</description>
          <long-description>&gt; "The local port for the TCP connection between the BGP peers."</long-description>
          <tag name="return" line="285" description="The local ports for the TCP connections between the BGP peers." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="297" package="global">
        <name>peerRemoteAddresses</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerRemoteAddresses()</full_name>
        <docblock line="297">
          <description>Returns the local IP address of this entry's BGP peer.</description>
          <long-description>&gt; "The remote IP address of this entry's BGP peer."</long-description>
          <tag name="return" line="297" description="The remote IP address of this entry's BGP peer." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="309" package="global">
        <name>peerRemotePorts</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerRemotePorts()</full_name>
        <docblock line="309">
          <description>Returns the remote ports for the TCP connections between the BGP peers.</description>
          <long-description>&gt; "The remote port for the TCP connection between the BGP peers."</long-description>
          <tag name="return" line="309" description="The remote ports for the TCP connections between the BGP peers." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="321" package="global">
        <name>peerRemoteASNs</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerRemoteASNs()</full_name>
        <docblock line="321">
          <description>Returns The remote autonomous system number.</description>
          <long-description>&gt; "The remote autonomous system number."</long-description>
          <tag name="return" line="321" description="The remote autonomous system number." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="334" package="global">
        <name>peerInUpdates</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerInUpdates()</full_name>
        <docblock line="334">
          <description>Returns The number of BGP UPDATE messages received on this connection.</description>
          <long-description>&gt; "The number of BGP UPDATE messages received on this connection. This object
&gt; should be initialized to zero (0) when the connection is established."</long-description>
          <tag name="return" line="334" description="The number of BGP UPDATE messages received on this connection." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="347" package="global">
        <name>peerOutUpdates</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerOutUpdates()</full_name>
        <docblock line="347">
          <description>Returns The number of BGP UPDATE messages transmitted on this connection.</description>
          <long-description>&gt; "The number of BGP UPDATE messages transmitted on this connection. This
&gt; object should be initialized to zero (0) when the connection is established."</long-description>
          <tag name="return" line="347" description="The number of BGP UPDATE messages transmitted on this connection." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="360" package="global">
        <name>peerInTotalMessages</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerInTotalMessages()</full_name>
        <docblock line="360">
          <description>Returns The total number of messages received from the remote peer on this connection.</description>
          <long-description>&gt; "The total number of messages received from the remote peer on this connection.
&gt; This object should be initialized to zero when the connection is established."</long-description>
          <tag name="return" line="360" description="The total number of messages received from the remote peer on this connection." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="373" package="global">
        <name>peerOutTotalMessages</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerOutTotalMessages()</full_name>
        <docblock line="373">
          <description>Returns The total number of messages transmitted to the remote peer on this connection.</description>
          <long-description>&gt; "The total number of messages transmitted to the remote peer on this connection. This
&gt; object should be initialized to zero when the connection is established."</long-description>
          <tag name="return" line="373" description="The total number of messages transmitted to the remote peer on this connection." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="389" package="global">
        <name>peerLastErrors</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerLastErrors()</full_name>
        <docblock line="389">
          <description>Returns The last error code and subcode seen by this peer on this connection.</description>
          <long-description>&gt; "The last error code and subcode seen by this peer on this connection. If no error has
&gt; occurred, this field is zero. Otherwise, the first byte of this two byte OCTET STRING
&gt; contains the error code, and the second byte contains the subcode."</long-description>
          <tag name="return" line="389" description="The last error code and subcode seen by this peer on this connection." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="401" package="global">
        <name>peerEstabledTransitions</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerEstabledTransitions()</full_name>
        <docblock line="401">
          <description>Returns The total number of times the BGP FSM transitioned into the established state.</description>
          <long-description>&gt; "The total number of times the BGP FSM transitioned into the established state."</long-description>
          <tag name="return" line="401" description="The total number of times the BGP FSM transitioned into the established state." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="417" package="global">
        <name>peerEstablishedTimes</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerEstablishedTimes()</full_name>
        <docblock line="417">
          <description>Returns how long (in seconds) this peer has been in the Established state or
how long since this peer was last in the Established state</description>
          <long-description>&gt; "This timer indicates how long (in seconds) this peer has been in the
&gt; Established state or how long since this peer was last in the
&gt; Established state. It is set to zero when a new peer is configured or the router is
&gt; booted"</long-description>
          <tag name="return" line="417" description="How long (secs) this peer has been in (or since it was last in) the Established state" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="430" package="global">
        <name>peerConnectRetryIntervals</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerConnectRetryIntervals()</full_name>
        <docblock line="430">
          <description>Returns Time interval in seconds for the ConnectRetry timer.</description>
          <long-description>&gt; "Time interval in seconds for the ConnectRetry timer. The suggested value
&gt; for this timer is 120 seconds."</long-description>
          <tag name="return" line="430" description="Time interval in seconds for the ConnectRetry timer." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="447" package="global">
        <name>peerHoldTimes</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerHoldTimes()</full_name>
        <docblock line="447">
          <description>Returns Time interval in seconds for the Hold Timer established with the peer.</description>
          <long-description>&gt; "Time interval in seconds for the Hold Timer established with the peer. The
&gt; value of this object is calculated by this BGP speaker by using the smaller of the
&gt; value in bgpPeerHoldTimeConfigured and the Hold Time received in the OPEN message.
&gt; This value must be at lease three seconds if it is not zero (0) in which case the
&gt; Hold Timer has not been established with the peer, or, the value of
&gt; bgpPeerHoldTimeConfigured is zero (0)."</long-description>
          <tag name="return" line="447" description="Time interval in seconds for the Hold Timer established with the peer." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="464" package="global">
        <name>peerKeepAlives</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerKeepAlives()</full_name>
        <docblock line="464">
          <description>Returns Time interval in seconds for the KeepAlive timer established with the peer.</description>
          <long-description>&gt; "Time interval in seconds for the KeepAlive timer established with the peer. The value
&gt; of this object is calculated by this BGP speaker such that, when compared with
&gt; bgpPeerHoldTime, it has the same proportion as what bgpPeerKeepAliveConfigured has when
&gt; compared with bgpPeerHoldTimeConfigured. If the value of this object is zero (0),
&gt; it indicates that the KeepAlive timer has not been established with the peer, or,
&gt; the value of bgpPeerKeepAliveConfigured is zero (0)."</long-description>
          <tag name="return" line="464" description="Time interval in seconds for the KeepAlive timer established with the peer." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="482" package="global">
        <name>peerHoleTimesConfigured</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerHoleTimesConfigured()</full_name>
        <docblock line="482">
          <description>Returns Time interval in seconds for the Hold Time configured for this BGP speaker with this peer.</description>
          <long-description>&gt; "Time interval in seconds for the Hold Time configured for this BGP speaker with this
&gt; peer. This value is placed in an OPEN message sent to this peer by this BGP
&gt; speaker, and is compared with the Hold Time field in an OPEN message received
&gt; from the peer when determining the Hold Time (bgpPeerHoldTime) with the peer.
&gt; This value must not be less than three seconds if it is not zero (0) in which
&gt; case the Hold Time is NOT to be established with the peer. The suggested
&gt; value for this timer is 90 seconds."</long-description>
          <tag name="return" line="482" description="Time interval in seconds for the Hold Time configured for this BGP speaker with this peer." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="502" package="global">
        <name>peerKeepAlivesConfigured</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerKeepAlivesConfigured()</full_name>
        <docblock line="502">
          <description>Returns Time interval in seconds for the KeepAlive timer configured for this BGP speaker with this peer.</description>
          <long-description>&gt; "Time interval in seconds for the KeepAlive timer configured for this BGP
&gt; speaker with this peer. The value of this object will only determine the
&gt; KEEPALIVE messages' frequency relative to the value specified in
&gt; bgpPeerHoldTimeConfigured; the actual time interval for the KEEPALIVE messages
&gt; is indicated by bgpPeerKeepAlive. A reasonable maximum value for this timer
&gt; would be configured to be one third of that of bgpPeerHoldTimeConfigured.
&gt; If the value of this object is zero (0), no periodical KEEPALIVE messages are sent
&gt; to the peer after the BGP connection has been established. The suggested value for
&gt; this timer is 30 seconds"</long-description>
          <tag name="return" line="502" description="Time interval in seconds for the KeepAlive timer configured for this BGP speaker with this peer." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="515" package="global">
        <name>peerMinASOriginationIntervals</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerMinASOriginationIntervals()</full_name>
        <docblock line="515">
          <description>Returns Time interval in seconds for the MinASOriginationInterval timer.</description>
          <long-description>&gt; "Time interval in seconds for the MinASOriginationInterval timer.
&gt; The suggested value for this timer is 15 seconds."</long-description>
          <tag name="return" line="515" description="Time interval in seconds for the MinASOriginationInterval timer." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="528" package="global">
        <name>peerMinRouteAdvertisementIntervals</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerMinRouteAdvertisementIntervals()</full_name>
        <docblock line="528">
          <description>Returns Time interval in seconds for the MinRouteAdvertisementInterval timer.</description>
          <long-description>&gt; "Time interval in seconds for the MinRouteAdvertisementInterval timer.
&gt; The suggested value for this timer is 30 seconds"</long-description>
          <tag name="return" line="528" description="Time interval in seconds for the MinRouteAdvertisementInterval timer." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="541" package="global">
        <name>peerInUpdateElapsedTimes</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerInUpdateElapsedTimes()</full_name>
        <docblock line="541">
          <description>Returns Elapsed time in seconds since the last BGP UPDATE message was received from the peer.</description>
          <long-description>&gt; "Elapsed time in seconds since the last BGP UPDATE message was received from the peer.
&gt; Each time bgpPeerInUpdates is incremented, the value of this object is set to zero (0)."</long-description>
          <tag name="return" line="541" description="Elapsed time in seconds since the last BGP UPDATE message was received from the peer." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="588" package="global">
        <name>peerDetails</name>
        <full_name>\OSS_SNMP\MIBS\BGP::peerDetails()</full_name>
        <docblock line="588">
          <description>Utility function to gather all peer information into a single array.</description>
          <long-description>For example, this would return something like:

    Array
    (
        ....
        [192.0.2.126] =&gt; Array
        (
            [identity] =&gt; 192.0.2.45
            [connectionState] =&gt; established
            [adminState] =&gt; start
            [negotiatedVersion] =&gt; 4
            [localAddress] =&gt; 193.242.111.74
            [localPort] =&gt; 26789
            [remoteAddress] =&gt; 192.0.2.126
            [remotePort] =&gt; 179
            [remoteASN] =&gt; 65505
            [inUpdates] =&gt; 4
            [outUpdates] =&gt; 2
            [inTotalMessages] =&gt; 180988
            [outTotalMessages] =&gt; 181012
            [lastError] =&gt; 0000
            [establishedTransitions] =&gt; 1
            [establishedTime] =&gt; 9867469
            [connectRetryInterval] =&gt; 60
            [holdTime] =&gt; 180
            [keepAlive] =&gt; 60
            [holdTimeConfigured] =&gt; 180
            [keepAliveConfigured] =&gt; 60
            [minASOriginationInterval] =&gt; 30
            [minRouteAdvertisementInterval] =&gt; 30
            [inUpdateElapsedTime] =&gt; 0
        )
        ....
    )</long-description>
          <tag name="param" line="588" description="&lt;p&gt;Where a called function supports translation, if true then translate&lt;/p&gt;" type="bool" variable="$translate">
            <type>bool</type>
          </tag>
          <tag name="return" line="588" description="Array of peer details - see example above." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translate</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="645" package="global">
        <name>identifier</name>
        <full_name>\OSS_SNMP\MIBS\BGP::identifier()</full_name>
        <docblock line="645">
          <description>Returns the local BGP identifier</description>
          <long-description>&gt; "The BGP Identifier of local system."</long-description>
          <tag name="return" line="645" description="The BGP Identifier of local system." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="global">
        <name>setSNMP</name>
        <full_name>\OSS_SNMP\MIB::setSNMP()</full_name>
        <docblock line="58">
          <description>Set the SNMP instance</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;the SNMP instance&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="$snmp">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
          <tag name="return" line="58" description="An instance of this class for fluent interfaces" type="\OSS_SNMP\MIB">
            <type>\OSS_SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$snmp</name>
          <default></default>
          <type>\OSS_SNMP\SNMP</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="global">
        <name>getSNMP</name>
        <full_name>\OSS_SNMP\MIB::getSNMP()</full_name>
        <docblock line="68">
          <description>Get the SNMP instance</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Instance of the SNMP object" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="SNMP.php" generated-path="SNMP.html" hash="9bc1c74da846b9070adee3d5a1baa2bd" package="global">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OSS_SNMP" line="54" package="global">
      <extends/>
      <name>SNMP</name>
      <full_name>\OSS_SNMP\SNMP</full_name>
      <docblock line="54">
        <description>A class for performing SNMP V2 queries and processing the results.</description>
        <long-description></long-description>
        <tag name="copyright" line="54" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag name="author" line="54" description="Barry O'Donovan" link="mailto:barry@opensolutions.ie"/>
      </docblock>
      <constant namespace="OSS_SNMP" line="117" package="global">
        <name>OID_OUTPUT_FULL</name>
        <full_name>\OSS_SNMP\SNMP::OID_OUTPUT_FULL</full_name>
        <value>SNMP_OID_OUTPUT_FULL</value>
        <docblock line="117">
          <description>SNMP output constants to mirror those of PHP</description>
          <long-description></long-description>
          <tag name="var" line="117" description="&lt;p&gt;output constants to mirror those of PHP&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP" line="123" package="global">
        <name>OID_OUTPUT_NUMERIC</name>
        <full_name>\OSS_SNMP\SNMP::OID_OUTPUT_NUMERIC</full_name>
        <value>SNMP_OID_OUTPUT_NUMERIC</value>
        <docblock line="123">
          <description>SNMP output constants to mirror those of PHP</description>
          <long-description></long-description>
          <tag name="var" line="123" description="&lt;p&gt;output constants to mirror those of PHP&lt;/p&gt;" type="\OSS_SNMP\SNMP" variable="">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP" line="130" package="global">
        <name>SNMP_TRUTHVALUE_TRUE</name>
        <full_name>\OSS_SNMP\SNMP::SNMP_TRUTHVALUE_TRUE</full_name>
        <value>1</value>
        <docblock line="130">
          <description>Definition of an SNMP return type 'TruthValue'</description>
          <long-description></long-description>
          <tag name="var" line="130" description="&lt;p&gt;of an SNMP return type 'TruthValue'&lt;/p&gt;" type="\OSS_SNMP\Definition" variable="">
            <type>\OSS_SNMP\Definition</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="OSS_SNMP" line="136" package="global">
        <name>SNMP_TRUTHVALUE_FALSE</name>
        <full_name>\OSS_SNMP\SNMP::SNMP_TRUTHVALUE_FALSE</full_name>
        <value>2</value>
        <docblock line="136">
          <description>Definition of an SNMP return type 'TruthValue'</description>
          <long-description></long-description>
          <tag name="var" line="136" description="&lt;p&gt;of an SNMP return type 'TruthValue'&lt;/p&gt;" type="\OSS_SNMP\Definition" variable="">
            <type>\OSS_SNMP\Definition</type>
          </tag>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="61" package="global">
        <name>$_community</name>
        <full_name>\OSS_SNMP\SNMP::_community</full_name>
        <default></default>
        <docblock line="61">
          <description>The SNMP community to use when polling SNMP services. Defaults to 'public' by the constructor.</description>
          <long-description></long-description>
          <tag name="var" line="61" description="&lt;p&gt;The SNMP community to use when polling SNMP services. Defaults to 'public' by the constructor.&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="67" package="global">
        <name>$_host</name>
        <full_name>\OSS_SNMP\SNMP::_host</full_name>
        <default></default>
        <docblock line="67">
          <description>The SNMP host to query. Defaults to '127.0.0.1'</description>
          <long-description></long-description>
          <tag name="var" line="67" description="&lt;p&gt;The SNMP host to query. Defaults to '127.0.0.1' by the constructor.&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="73" package="global">
        <name>$_timeout</name>
        <full_name>\OSS_SNMP\SNMP::_timeout</full_name>
        <default>1000000</default>
        <docblock line="73">
          <description>The SNMP query timeout value (microseconds). Default: 1000000</description>
          <long-description></long-description>
          <tag name="var" line="73" description="&lt;p&gt;The SNMP query timeout value (microseconds). Default: 1000000&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="79" package="global">
        <name>$_retry</name>
        <full_name>\OSS_SNMP\SNMP::_retry</full_name>
        <default>5</default>
        <docblock line="79">
          <description>The SNMP query retry count. Default: 5</description>
          <long-description></long-description>
          <tag name="var" line="79" description="&lt;p&gt;The SNMP query retry count. Default: 5&lt;/p&gt;" type="int" variable="">
            <type>int</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="86" package="global">
        <name>$_lastResult</name>
        <full_name>\OSS_SNMP\SNMP::_lastResult</full_name>
        <default>null</default>
        <docblock line="86">
          <description>A variable to hold the last unaltered result of an SNMP query</description>
          <long-description></long-description>
          <tag name="var" line="86" description="&lt;p&gt;The last unaltered result of an SNMP query&lt;/p&gt;" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="92" package="global">
        <name>$_platform</name>
        <full_name>\OSS_SNMP\SNMP::_platform</full_name>
        <default>null</default>
        <docblock line="92">
          <description>A variable to hold the platform object</description>
          <long-description></long-description>
          <tag name="var" line="92" description="&lt;p&gt;The platform object&lt;/p&gt;" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="98" package="global">
        <name>$_cache</name>
        <full_name>\OSS_SNMP\SNMP::_cache</full_name>
        <default>null</default>
        <docblock line="98">
          <description>The cache object to use as the cache</description>
          <long-description></long-description>
          <tag name="var" line="98" description="&lt;p&gt;The cache object to use&lt;/p&gt;" type="\OSS_SNMP\Cache" variable="">
            <type>\OSS_SNMP\Cache</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="OSS_SNMP" line="111" package="global">
        <name>$_disableCache</name>
        <full_name>\OSS_SNMP\SNMP::_disableCache</full_name>
        <default>false</default>
        <docblock line="111">
          <description>Set to true to disable local cache lookup and force SNMP queries</description>
          <long-description>Results are still stored. If you need to force a SNMP query, you can:

$snmp = new OSS_SNMP( ... )'
...
$snmp-&gt;disableCache();
$snmp-&gt;get( ... );
$snmp-&gt;enableCache();</long-description>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP" line="142" package="global">
        <name>$SNMP_TRUTHVALUES</name>
        <full_name>\OSS_SNMP\SNMP::SNMP_TRUTHVALUES</full_name>
        <default>array(self::SNMP_TRUTHVALUE_TRUE =&gt; true, self::SNMP_TRUTHVALUE_FALSE =&gt; false)</default>
        <docblock line="142">
          <description>PHP equivalents of SNMP return type TruthValue</description>
          <long-description></long-description>
          <tag name="var" line="142" description="&lt;p&gt;PHP equivalents of SNMP return type TruthValue&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="OSS_SNMP" line="425" package="global">
        <name>$HEX_STRING_WORDS_AS_ARRAY</name>
        <full_name>\OSS_SNMP\SNMP::HEX_STRING_WORDS_AS_ARRAY</full_name>
        <default>array('0' =&gt; array(false, false, false, false), '1' =&gt; array(false, false, false, true), '2' =&gt; array(false, false, true, false), '3' =&gt; array(false, false, true, true), '4' =&gt; array(false, true, false, false), '5' =&gt; array(false, true, false, true), '6' =&gt; array(false, true, true, false), '7' =&gt; array(false, true, true, true), '8' =&gt; array(true, false, false, false), '9' =&gt; array(true, false, false, true), 'a' =&gt; array(true, false, true, false), 'b' =&gt; array(true, false, true, true), 'c' =&gt; array(true, true, false, false), 'd' =&gt; array(true, true, false, true), 'e' =&gt; array(true, true, true, false), 'f' =&gt; array(true, true, true, true))</default>
        <docblock line="425">
          <description>An array of arrays where each array element
represents true / false values for a given
hex digit.</description>
          <long-description></long-description>
          <tag name="see" line="425" description="" link="\OSS_SNMP\ppHexStringFlags()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="154" package="global">
        <name>__construct</name>
        <full_name>\OSS_SNMP\SNMP::__construct()</full_name>
        <docblock line="154">
          <description>The constructor.</description>
          <long-description></long-description>
          <tag name="param" line="154" description="&lt;p&gt;The target host for SNMP queries.&lt;/p&gt;" type="string" variable="$host">
            <type>string</type>
          </tag>
          <tag name="param" line="154" description="&lt;p&gt;The community to use for SNMP queries.&lt;/p&gt;" type="string" variable="$community">
            <type>string</type>
          </tag>
          <tag name="return" line="154" description="An instance of $this (for fluent interfaces)" type="\OSS_SNMP\OSS_SNMP">
            <type>\OSS_SNMP\OSS_SNMP</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$host</name>
          <default>'127.0.0.1'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$community</name>
          <default>'public'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="168" package="global">
        <name>realWalk</name>
        <full_name>\OSS_SNMP\SNMP::realWalk()</full_name>
        <docblock line="168">
          <description>Proxy to the snmp2_real_walk command</description>
          <long-description></long-description>
          <tag name="param" line="168" description="&lt;p&gt;The OID to walk&lt;/p&gt;" type="string" variable="$oid">
            <type>string</type>
          </tag>
          <tag name="return" line="168" description="The results of the walk" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$oid</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="181" package="global">
        <name>get</name>
        <full_name>\OSS_SNMP\SNMP::get()</full_name>
        <docblock line="181">
          <description>Get a single SNMP value</description>
          <long-description></long-description>
          <tag name="throws" line="181" description="On *any* SNMP error, warnings are supressed and a generic exception is thrown" type="\OSS_SNMP\Exception">
            <type>\OSS_SNMP\Exception</type>
          </tag>
          <tag name="param" line="181" description="&lt;p&gt;The OID to get&lt;/p&gt;" type="string" variable="$oid">
            <type>string</type>
          </tag>
          <tag name="return" line="181" description="The resultant value" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$oid</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="220" package="global">
        <name>walk1d</name>
        <full_name>\OSS_SNMP\SNMP::walk1d()</full_name>
        <docblock line="220">
          <description>Get indexed SNMP values (first degree)</description>
          <long-description>Walks the SNMP tree returning an array of key =&gt; value pairs.

This is a first degree walk and it will throw an exception if there is more that one degree of values.

I.e. the following query with sample results:

walk1d( '.1.0.8802.1.1.2.1.3.7.1.4' )

      .1.0.8802.1.1.2.1.3.7.1.4.1 = STRING: "GigabitEthernet1/0/1"
      .1.0.8802.1.1.2.1.3.7.1.4.2 = STRING: "GigabitEthernet1/0/2"
      .1.0.8802.1.1.2.1.3.7.1.4.3 = STRING: "GigabitEthernet1/0/3"
      .....

would yield an array:

     1 =&gt; GigabitEthernet1/0/1
     2 =&gt; GigabitEthernet1/0/2
     3 =&gt; GigabitEthernet1/0/3</long-description>
          <tag name="param" line="220" description="&lt;p&gt;The OID to walk&lt;/p&gt;" type="string" variable="$oid">
            <type>string</type>
          </tag>
          <tag name="return" line="220" description="The resultant values" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="220" description="On *any* SNMP error, warnings are supressed and a generic exception is thrown" type="\OSS_SNMPException">
            <type>\OSS_SNMPException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$oid</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="269" package="global">
        <name>subOidWalk</name>
        <full_name>\OSS_SNMP\SNMP::subOidWalk()</full_name>
        <docblock line="269">
          <description>Get indexed SNMP values where the array key is the given position of the OID</description>
          <long-description>I.e. the following query with sample results:

subOidWalk( '.1.3.6.1.4.1.9.9.23.1.2.1.1.9', 15 )


      .1.3.6.1.4.1.9.9.23.1.2.1.1.9.10101.5 = Hex-STRING: 00 00 00 01
      .1.3.6.1.4.1.9.9.23.1.2.1.1.9.10105.2 = Hex-STRING: 00 00 00 01
      .1.3.6.1.4.1.9.9.23.1.2.1.1.9.10108.4 = Hex-STRING: 00 00 00 01

would yield an array:

     10101 =&gt; Hex-STRING: 00 00 00 01
     10105 =&gt; Hex-STRING: 00 00 00 01
     10108 =&gt; Hex-STRING: 00 00 00 01</long-description>
          <tag name="throws" line="269" description="On *any* SNMP error, warnings are supressed and a generic exception is thrown" type="\OSS_SNMP\Exception">
            <type>\OSS_SNMP\Exception</type>
          </tag>
          <tag name="param" line="269" description="&lt;p&gt;The OID to walk&lt;/p&gt;" type="string" variable="$oid">
            <type>string</type>
          </tag>
          <tag name="param" line="269" description="&lt;p&gt;The position of the OID to use as the key&lt;/p&gt;" type="int" variable="$position">
            <type>int</type>
          </tag>
          <tag name="return" line="269" description="The resultant values" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$oid</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$position</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="313" package="global">
        <name>walkIPv4</name>
        <full_name>\OSS_SNMP\SNMP::walkIPv4()</full_name>
        <docblock line="313">
          <description>Get indexed SNMP values where they are indexed by IPv4 addresses</description>
          <long-description>I.e. the following query with sample results:

subOidWalk( '.1.3.6.1.2.1.15.3.1.1. )


      .1.3.6.1.2.1.15.3.1.1.10.20.30.4 = IpAddress: 192.168.10.10
      ...

would yield an array:

     [10.20.30.4] =&gt; "192.168.10.10"
     ....</long-description>
          <tag name="throws" line="313" description="On *any* SNMP error, warnings are supressed and a generic exception is thrown" type="\OSS_SNMP\Exception">
            <type>\OSS_SNMP\Exception</type>
          </tag>
          <tag name="param" line="313" description="&lt;p&gt;The OID to walk&lt;/p&gt;" type="string" variable="$oid">
            <type>string</type>
          </tag>
          <tag name="return" line="313" description="The resultant values" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$oid</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="348" package="global">
        <name>parseSnmpValue</name>
        <full_name>\OSS_SNMP\SNMP::parseSnmpValue()</full_name>
        <docblock line="348">
          <description>Parse the result of an SNMP query into a PHP type</description>
          <long-description>For example, [STRING: "blah"] is parsed to a PHP string containing: blah</long-description>
          <tag name="param" line="348" description="&lt;p&gt;The value to parse&lt;/p&gt;" type="string" variable="$v">
            <type>string</type>
          </tag>
          <tag name="return" line="348" description="The parsed value" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="348" description="" type="\OSS_SNMP\Exception">
            <type>\OSS_SNMP\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$v</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OSS_SNMP" line="406" package="global">
        <name>ppTruthValue</name>
        <full_name>\OSS_SNMP\SNMP::ppTruthValue()</full_name>
        <docblock line="406">
          <description>Utility function to convert TruthValue SNMP responses to true / false</description>
          <long-description></long-description>
          <tag name="param" line="406" description="&lt;p&gt;The TruthValue ( 1 =&gt; true, 2 =&gt; false) to convert&lt;/p&gt;" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="406" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OSS_SNMP" line="461" package="global">
        <name>ppHexStringFlags</name>
        <full_name>\OSS_SNMP\SNMP::ppHexStringFlags()</full_name>
        <docblock line="461">
          <description>Takes a HEX-String of true / false - on / off - set / unset flags
and converts it to an indexed (from 1) array of true / false values.</description>
          <long-description>For example, passing it ``500040`` will result in an array:

    [
        [1]  =&gt; false, [2]  =&gt; true,  [3] =&gt; false, [4]  =&gt; true,
        [5]  =&gt; false, [6]  =&gt; false, [7] =&gt; false, [8]  =&gt; false,
        ...
        [17] =&gt; false, [18] =&gt; true, [19] =&gt; false, [20] =&gt; false,
        [21] =&gt; false, [22] =&gt; true, [23] =&gt; false, [24] =&gt; false
    ]</long-description>
          <tag name="param" line="461" description="&lt;p&gt;The hex string to parse&lt;/p&gt;" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="461" description="The array of true / false flags indexed from 1" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OSS_SNMP" line="487" package="global">
        <name>translate</name>
        <full_name>\OSS_SNMP\SNMP::translate()</full_name>
        <docblock line="487">
          <description>Utility function to translate one value(s) to another via an associated array</description>
          <long-description>I.e. all elements '$value' will be replaced with $translator( $value ) where
$translator is an associated array.

Huh? Just read the code below!</long-description>
          <tag name="param" line="487" description="&lt;p&gt;A scalar or array or values to translate&lt;/p&gt;" type="mixed" variable="$values">
            <type>mixed</type>
          </tag>
          <tag name="param" line="487" description="&lt;p&gt;An associated array to use to translate the values&lt;/p&gt;" type="array" variable="$translator">
            <type>array</type>
          </tag>
          <tag name="return" line="487" description="The translated scalar or array" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$translator</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="516" package="global">
        <name>setOidOutputFormat</name>
        <full_name>\OSS_SNMP\SNMP::setOidOutputFormat()</full_name>
        <docblock line="516">
          <description>Sets the output format for SNMP queries.</description>
          <long-description>Should be one of the class OID_OUTPUT_* constants</long-description>
          <tag name="param" line="516" description="&lt;p&gt;The fomat to use&lt;/p&gt;" type="int" variable="$f">
            <type>int</type>
          </tag>
          <tag name="return" line="516" description="An instance of $this (for fluent interfaces)" type="\OSS_SNMP\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$f</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="529" package="global">
        <name>setHost</name>
        <full_name>\OSS_SNMP\SNMP::setHost()</full_name>
        <docblock line="529">
          <description>Sets the target host for SNMP queries.</description>
          <long-description></long-description>
          <tag name="param" line="529" description="&lt;p&gt;The target host for SNMP queries.&lt;/p&gt;" type="string" variable="$h">
            <type>string</type>
          </tag>
          <tag name="return" line="529" description="An instance of $this (for fluent interfaces)" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$h</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="546" package="global">
        <name>getHost</name>
        <full_name>\OSS_SNMP\SNMP::getHost()</full_name>
        <docblock line="546">
          <description>Returns the target host as currently configured for SNMP queries</description>
          <long-description></long-description>
          <tag name="return" line="546" description="The target host as currently configured for SNMP queries" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="557" package="global">
        <name>setCommunity</name>
        <full_name>\OSS_SNMP\SNMP::setCommunity()</full_name>
        <docblock line="557">
          <description>Sets the community string to use for SNMP queries.</description>
          <long-description></long-description>
          <tag name="param" line="557" description="&lt;p&gt;The community to use for SNMP queries.&lt;/p&gt;" type="string" variable="$c">
            <type>string</type>
          </tag>
          <tag name="return" line="557" description="An instance of $this (for fluent interfaces)" type="\OSS_SNMP\OSS_SNMP">
            <type>\OSS_SNMP\OSS_SNMP</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$c</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="568" package="global">
        <name>getCommunity</name>
        <full_name>\OSS_SNMP\SNMP::getCommunity()</full_name>
        <docblock line="568">
          <description>Returns the community string currently in use.</description>
          <long-description></long-description>
          <tag name="return" line="568" description="The community string currently in use." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="579" package="global">
        <name>setTimeout</name>
        <full_name>\OSS_SNMP\SNMP::setTimeout()</full_name>
        <docblock line="579">
          <description>Sets the timeout to use for SNMP queries (microseconds).</description>
          <long-description></long-description>
          <tag name="param" line="579" description="&lt;p&gt;The timeout to use for SNMP queries (microseconds).&lt;/p&gt;" type="int" variable="$t">
            <type>int</type>
          </tag>
          <tag name="return" line="579" description="An instance of $this (for fluent interfaces)" type="\OSS_SNMP\OSS_SNMP">
            <type>\OSS_SNMP\OSS_SNMP</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$t</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="590" package="global">
        <name>getTimeout</name>
        <full_name>\OSS_SNMP\SNMP::getTimeout()</full_name>
        <docblock line="590">
          <description>Returns the SNMP query timeout (microseconds).</description>
          <long-description></long-description>
          <tag name="return" line="590" description="The the SNMP query timeout (microseconds)" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="601" package="global">
        <name>setRetry</name>
        <full_name>\OSS_SNMP\SNMP::setRetry()</full_name>
        <docblock line="601">
          <description>Sets the SNMP query retry count.</description>
          <long-description></long-description>
          <tag name="param" line="601" description="&lt;p&gt;The SNMP query retry count&lt;/p&gt;" type="int" variable="$r">
            <type>int</type>
          </tag>
          <tag name="return" line="601" description="An instance of $this (for fluent interfaces)" type="\OSS_SNMP\OSS_SNMP">
            <type>\OSS_SNMP\OSS_SNMP</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$r</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="612" package="global">
        <name>getRetry</name>
        <full_name>\OSS_SNMP\SNMP::getRetry()</full_name>
        <docblock line="612">
          <description>Returns the SNMP query retry count</description>
          <long-description></long-description>
          <tag name="return" line="612" description="The SNMP query retry count" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="622" package="global">
        <name>getLastResult</name>
        <full_name>\OSS_SNMP\SNMP::getLastResult()</full_name>
        <docblock line="622">
          <description>Returns the unaltered original last SNMP result</description>
          <long-description></long-description>
          <tag name="return" line="622" description="The unaltered original last SNMP result" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="632" package="global">
        <name>getResultCache</name>
        <full_name>\OSS_SNMP\SNMP::getResultCache()</full_name>
        <docblock line="632">
          <description>Returns the internal result cache</description>
          <long-description></long-description>
          <tag name="return" line="632" description="The internal result cache" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="643" package="global">
        <name>disableCache</name>
        <full_name>\OSS_SNMP\SNMP::disableCache()</full_name>
        <docblock line="643">
          <description>Disable lookups of the local cache</description>
          <long-description></long-description>
          <tag name="return" line="643" description="An instance of this for fluent interfaces" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="655" package="global">
        <name>enableCache</name>
        <full_name>\OSS_SNMP\SNMP::enableCache()</full_name>
        <docblock line="655">
          <description>Enable lookups of the local cache</description>
          <long-description></long-description>
          <tag name="return" line="655" description="An instance of this for fluent interfaces" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="666" package="global">
        <name>cache</name>
        <full_name>\OSS_SNMP\SNMP::cache()</full_name>
        <docblock line="666">
          <description>Query whether we are using the cache or not</description>
          <long-description></long-description>
          <tag name="return" line="666" description="True of the local lookup cache is enabled. Otherwise false." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="677" package="global">
        <name>setCache</name>
        <full_name>\OSS_SNMP\SNMP::setCache()</full_name>
        <docblock line="677">
          <description>Set the cache to use</description>
          <long-description></long-description>
          <tag name="param" line="677" description="&lt;p&gt;The cache to use&lt;/p&gt;" type="\OSS_SNMP\Cache" variable="$c">
            <type>\OSS_SNMP\Cache</type>
          </tag>
          <tag name="return" line="677" description="For fluent interfaces" type="\OSS_SNMP\SNMP">
            <type>\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$c</name>
          <default></default>
          <type>\OSS_SNMP\Cache</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="693" package="global">
        <name>getCache</name>
        <full_name>\OSS_SNMP\SNMP::getCache()</full_name>
        <docblock line="693">
          <description>Get the cache in use (or create a Cache\Basic instance</description>
          <long-description>We kind of mandate the use of a cache as the code is written with a cache in mind.
You are free to disable it via disableCache() but your machines may be hammered!

We would suggest disableCache() / enableCache() used in pairs only when really needed.</long-description>
          <tag name="return" line="693" description="The cache object" type="\OSS_SNMP\Cache">
            <type>\OSS_SNMP\Cache</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="709" package="global">
        <name>__call</name>
        <full_name>\OSS_SNMP\SNMP::__call()</full_name>
        <docblock line="709">
          <description>Magic method for generic function calls</description>
          <long-description></long-description>
          <tag name="param" line="709" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="709" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="throws" line="709" description="" type="\OSS_SNMP\Exception">
            <type>\OSS_SNMP\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="731" package="global">
        <name>useExtension</name>
        <full_name>\OSS_SNMP\SNMP::useExtension()</full_name>
        <docblock line="731">
          <description>This is the MIB Extension magic</description>
          <long-description>Calling $this-&gt;useXXX_YYY_ZZZ()-&gt;fn() will instantiate
an extension MIB class is the given name and this $this SNMP
instance and then call fn().

See the examples for more information.</long-description>
          <tag name="param" line="731" description="&lt;p&gt;The extension class to use&lt;/p&gt;" type="string" variable="$mib">
            <type>string</type>
          </tag>
          <tag name="param" line="731" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="731" description="" type="\OSS_SNMP\MIBS">
            <type>\OSS_SNMP\MIBS</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$mib</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="740" package="global">
        <name>getPlatform</name>
        <full_name>\OSS_SNMP\SNMP::getPlatform()</full_name>
        <docblock line="740">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="740" code="PPC:ERR-50008">No summary for method getPlatform()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <package name="global" full_name="global"/>
  <namespace name="OSS_SNMP" full_name="OSS_SNMP">
    <namespace name="Cache" full_name="OSS_SNMP\Cache"/>
    <namespace name="MIBS" full_name="OSS_SNMP\MIBS">
      <namespace name="Asterisk" full_name="OSS_SNMP\MIBS\Asterisk"/>
      <namespace name="Cisco" full_name="OSS_SNMP\MIBS\Cisco"/>
      <namespace name="Extreme" full_name="OSS_SNMP\MIBS\Extreme"/>
      <namespace name="Foundry" full_name="OSS_SNMP\MIBS\Foundry"/>
      <namespace name="MRV" full_name="OSS_SNMP\MIBS\MRV"/>
      <namespace name="SNMP" full_name="OSS_SNMP\MIBS\SNMP"/>
    </namespace>
  </namespace>
  <deprecated count="2"/>
</project>
